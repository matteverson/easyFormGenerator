{"version":3,"sources":["eda.easyFormViewer.min.js"],"names":["angular","module","configFct","formlyConfigProvider","camelize","string","replace","match","chr","toUpperCase","toLowerCase","setType","name","template","subTitleTemplate","basicSelectTemplate","groupedSelectTemplate","attributes","bindings","ngModelAttrs","forEach","attr","attribute","binding","bound","wrapper","controller","$scope","open","$event","preventDefault","stopPropagation","opened","defaultOptions","templateOptions","addonLeft","class","onClick","options","scope","isOpen","onFocus","$viewValue","$modelValue","to","datepickerOptions","setWrapper","join","config","$inject","run","$templateCache","put","edaEasyFormViewer","modelsTranslator","linkFct","element","attrs","dataModelToWatch","vm","model","fieldsModelToWatch","edaEasyFormViewerEasyFormGeneratorFieldsModel","submitBtnTextToWatch","edaEasyFormViewerSubmitButtonText","cancelBtnTextToWatch","edaEasyFormViewerCancelButtonText","submitEventToWatch","hasJustSumitted","cancelEventToWatch","hasJustCancelled","fieldsModelWatcher","newFieldsModel","oldFieldsModel","fields","loadExistingConfigurationModel","submitBtnTextWatcher","newSubmitBtntext","oldSubmitBtntext","submitText","cancelBtnTextWatcher","newCancelBtntext","oldCancelBtntext","cancelText","dataModelWatcher","newDataModel","PreiousDataModel","edaEasyFormViewerDataModel","submitEventWatcher","newSubmitEvent","oldSubmitEvent","isFunction","edaEasyFormViewerSubmitFormEvent","_dataModelSubmitted","dataModelSubmitted","cancelEventWatcher","newCancelEvent","oldCancelEvent","edaEasyFormViewerCancelFormEvent","loadFieldsModel","initialFieldsModel","isArray","loadedFieldModel","configlines","returnAttributeConfigurationLinesIfNotEmpty","formlyFieldsModel","configurationLoaded","bindConfigurationLines","refreshControlFormlyExpressionProperties","refreshControlFormlyValidators","refreshControlFormlyValidation","configuration","copy","applyConfigurationToformlyModel","edaEasyFormGeneratorModelToReturn","length","emptyEdaFieldsModel","emptyModel","line","activeColumn","columns","numColumn","exist","control","type","key","$watch","edaEasyFormViewerCtrl","edaSubmitThisDataModel","edaCancelEvent","this","directive","restrict","controllerAs","templateUrl","link","controllerModalProxy","service","initNyaSelect","getControlsDefinition","initConfigurationEditFromScratch","nyaSelectObj","resetNyaSelect","controls","configurationModel","isObject","lines","indexLine","column","controlIndex","_controlsDefinition","aControl","aControlIndex","formlyType","subtype","formlySubtype","formlyExpressionProperties","formlyValidators","formlyValidation","newNyaSelectObj","id","subtitle","group","formlyLabel","formlyRequired","formlyDesciption","formlyOptions","messages","required","viewValue","modelValue","defaultReturnMsg","returnMsg","label","emailShape","expression","value","test","message","datepickerPopup","selectedControl","temporyConfig","formlyPlaceholder","configurationModelInit","activeLine","listConfigStep","stepIndicators","configStepCounter","submitButtonText","cancelButtonText","Object","prototype","toString","call","configurationModelResult","concat","getMessageObject","getErrorObject","formlyModel","formlyDataModel","resetFormlyModel","resetDataModel","lineNumber","i","addOneColumnHeader","addOneColumnControl","addTwoColumnControl","addThreeColumnControl","resetformly","lineIndex","headerTemplateCol0","extractTemplateOptionDescription","push","addDatepickerPopupProperty","fieldToPush","extractTemplateOptionDatepickerPopup","className","Date","now","extractTemplateOptionType","extractTemplateOptionLabel","extractTemplateOptionRequired","placeholder","extractTemplateOptionPlaceholder","description","extractTemplateOptionOptions","expressionProperties","extractFormlyExpressionProperties","validators","extractFormlyValidators","validation","extractFormlyValidation","headerTemplateCol1","controlCol0","controlCol1","FieldGroup","fieldGroup","headerTemplateCol2","controlCol2","obj","emptyDataModel","errorTitle","errorMessage","messageObj","noError","title","Message","messageTitle","messageBody","factory"],"mappings":"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","file":"eda.easyFormViewer.min.js","sourcesContent":["/** \n  *easyFormViewer \n  *Version 1.0.33 \n  *Author : Erwan Datin (MacKentoch) \n  *Link: https://github.com/MacKentoch/easyFormGenerator \n  *License : MIT (2015) \n **/ \n ;(function(){\n \t'use strict';\n/**\n *  -----------------------------------------------------------------------\n *  application module of easy form viewer\n *  -----------------------------------------------------------------------\n *  \n *   \n *     \n *\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n;(function(){\n\t'use strict';\n\t\n\tangular\n\t\t.module('eda.easyFormViewer', [\n\t\t\t'textAngular',  \n\t\t\t'formly',  \n\t\t\t'ngAnimate',\n\t\t\t'formlyBootstrap', \n\t\t\t'ui.bootstrap', \n\t\t\t'nya.bootstrap.select', \n\t\t\t'eda.easyFormViewer.Directive',\n\t\t\t'eda.modelsTranslator.Service'\t\t\n\t\t]);\n\t\n})();\n/**\n *  -----------------------------------------------------------------------\n *  config module of easy form viewer\n *  -----------------------------------------------------------------------\n *  \n *   \n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n;(function(){\n\t'use strict';\n\t\n\tangular\n\t\t.module('eda.easyFormViewer')\n\t\t.config(configFct);\n    \n\t\tconfigFct.$inject = ['formlyConfigProvider'];\n\t\tfunction configFct(formlyConfigProvider){\n\t     //////////////////////////////\n      // CONFIG HERE (formly...)              \n      /////////////////////////////\n      formlyConfigProvider.setType(\n        {\n          name: 'richEditor',\n          //wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n          template: '<text-angular name=\"{{id}}\" class=\"richTextAngular\" ng-model=\"model[options.key || index]\"></text-angular>'\n        }\n      );\n\n      formlyConfigProvider.setType(\n        {\n          name: 'blank',\n          template: '<div></div>'\n        }\n      );\n\n\n      var subTitleTemplate = '<div class=\"row\"><div class=\"\"><h4 class=\"text-center\">{{options.templateOptions.placeholder}}<h4><hr/></div></div>';\n      formlyConfigProvider.setType(\n        {\n          name: 'subTitle',\n          template: subTitleTemplate\n        }\n      );\n\n      var basicSelectTemplate =   ' <ol   class=\"nya-bs-select col-sm-12 col-xs-12 col-md-12 col-lg12\" ' + \n                    '   ng-model=\"model[options.key || index]\"  ' + \n                      '   id=\"{{id}}\"  ' + \n                      '   disabled=\"options.templateOptions.options.length === 0\"> ' + \n                      '   <li class=\"nya-bs-option\" nya-bs-option=\"option in options.templateOptions.options\"> ' + \n                      '     <a>{{option.name}}</a> ' + \n                      '   </li> ' + \n                      ' </ol>     ' ;\n\n     formlyConfigProvider.setType(\n        {\n          name: 'basicSelect',\n          template: basicSelectTemplate\n        }\n      );\n\n\n     var groupedSelectTemplate =   '  <ol class=\"nya-bs-select col-sm-12 col-xs-12 col-md-12 col-lg12\" ' +\n                   '    ng-model=\"model[options.key || index]\" ' +\n                   '       data-live-search=\"true\" ' +\n                   '       disabled=\"options.templateOptions.options.length === 0\">' +\n                                 '       <li nya-bs-option=\"option in  options.templateOptions.options group by option.group\"  ' +\n                                 '       >' +\n                                 '         <span class=\"dropdown-header\">{{$group}}</span>' + \n                                 '         <a>' +\n                                 '           <span>{{option.name}}</span>' +\n                                 '           <span class=\"glyphicon glyphicon-ok check-mark\"></span>' +\n                                 '         </a>' +\n                                 '       </li>' +\n                                 '     </ol>';\n\n     formlyConfigProvider.setType(\n        {\n          name: 'groupedSelect',\n          template: groupedSelectTemplate\n        }\n      );\n\n     ////////////////////////////\n     // angular UI date picker\n     ////////////////////////////\n     // thx Kent C. Dodds\n\n      var attributes = [\n        'date-disabled',\n        'custom-class',\n        'show-weeks',\n        'starting-day',\n        'init-date',\n        'min-mode',\n        'max-mode',\n        'format-day',\n        'format-month',\n        'format-year',\n        'format-day-header',\n        'format-day-title',\n        'format-month-title',\n        'year-range',\n        'shortcut-propagation',\n        'datepicker-popup',\n        'show-button-bar',\n        'current-text',\n        'clear-text',\n        'close-text',\n        'close-on-date-selection',\n        'datepicker-append-to-body'\n      ];\n\n      var bindings = [\n        'datepicker-mode',\n        'min-date',\n        'max-date'\n      ];\n\n      var ngModelAttrs = {};\n\n      angular.forEach(attributes, function(attr) {\n        ngModelAttrs[camelize(attr)] = {attribute: attr};\n      });\n\n      angular.forEach(bindings, function(binding) {\n        ngModelAttrs[camelize(binding)] = {bound: binding};\n      });\n\n    \n\n      formlyConfigProvider.setType({\n        name: 'datepicker',\n        template: '<input  id=\"{{id}}\" class=\"form-control\" ng-click=\"open($event)\" ng-model=\"model[options.key  || index]\" is-open=\"to.isOpen\" ng-click=\"to.isOpen = true\" datepicker-options=\"to.datepickerOptions\" />',\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n        controller: ['$scope', function($scope) {\n           $scope.open = function($event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n            $scope.opened = true;\n          };\n         \n         }],\n        defaultOptions: {\n          ngModelAttrs: ngModelAttrs,\n          templateOptions: {\n            addonLeft: {\n              class: 'glyphicon glyphicon-calendar',\n              onClick: function(options, scope) {\n                options.templateOptions.isOpen = !options.templateOptions.isOpen;\n              }\n            },       \n            onFocus: function($viewValue, $modelValue, scope) {\n              scope.to.isOpen = !scope.to.isOpen;\n            },\n            datepickerOptions: {}\n          }\n        }\n        \n      });\n\n\n\n      /**\n       * wrappers to show validation errors\n       * without having to rewrite formly types\n       */\n      formlyConfigProvider.setWrapper([\n          {\n            template: [\n              '<div class=\"formly-template-wrapper form-group\"',\n              '     ng-class=\"{\\'has-error\\': options.validation.errorExistsAndShouldBeVisible}\">',\n              ' <formly-transclude></formly-transclude>',\n              ' <div class=\"validation\"',\n              '       ng-if=\"options.validation.errorExistsAndShouldBeVisible\"',\n              '       ng-messages=\"options.formControl.$error\">',\n              '   <div ng-messages-include=\"validation.html\"></div>',\n              '   <div ng-message=\"{{::name}}\" ng-repeat=\"(name, message) in ::options.validation.messages\">',\n              '     {{message(options.formControl.$viewValue, options.formControl.$modelValue, this)}}',\n              '   </div>',\n              ' </div>',\n              '</div>'\n            ].join(' ')\n          }\n        ]);\n\n      function camelize(string) {\n        string = string.replace(/[\\-_\\s]+(.)?/g, function(match, chr) {\n          return chr ? chr.toUpperCase() : '';\n        });\n        // Ensure 1st char is always lowercase\n        return string.replace(/^([A-Z])/, function(match, chr) {\n          return chr ? chr.toLowerCase() : '';\n        });\n      } \n\n    }\n\n\t\n})();\nangular.module(\"eda.easyFormViewer\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"eda.easyFormViewer.Template.html\",\"<div class=easyFormViewer><form ng-submit=vm.onSubmit() name=vm.form><formly-form model=vm.model fields=vm.fields form=vm.form><div class=pull-right><button type=submit class=\\\"btn btn-primary\\\" ng-disabled=vm.form.$invalid ng-click=vm.edaSubmitThisDataModel();>{{vm.submitText}}</button> <button type=button class=\\\"btn btn-primary\\\" ng-click=vm.edaCancelEvent();>{{vm.cancelText}}</button></div></formly-form></form></div>\");}]);\n/**\n *  -----------------------------------------------------------------------\n *   easy form viewer directive\n *  -----------------------------------------------------------------------\n *  \n *   \n *     \n *\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n(function(){\n\t'use strict';\n\t\n\tangular\n\t\t.module('eda.easyFormViewer.Directive', [])\n\t\t.directive('edaEasyFormViewer', edaEasyFormViewer);\n\t\t\n\t\tedaEasyFormViewer.$inject = ['modelsTranslator'];\n\t\t\n\t\tfunction edaEasyFormViewer(modelsTranslator){\n\t\t\t//directive's controller injection is here (before return directive) = to avoid minification errors\n\t\t\tedaEasyFormViewerCtrl.$inject = [];\n\t\t\t\n\t\t\tvar directive = {\n\t\t\t\trestrict : 'E',\n\t\t\t\tscope : {\n\t\t\t\t\t\n          edaEasyFormViewerDataModel \t\t\t\t\t\t\t\t\t\t: '=?',\n\t\t\t\t\tedaEasyFormViewerEasyFormGeneratorFieldsModel : '=?',\n\t\t\t\t\t\n\t\t\t\t\tedaEasyFormViewerSubmitButtonText \t\t\t\t\t\t: '@?',\n\t\t\t\t\tedaEasyFormViewerCancelButtonText \t\t\t\t\t\t: '@?',\n\t\t\t\t\t\n          edaEasyFormViewerSubmitFormEvent  \t\t\t\t\t\t: '&?',\n\t\t\t\t\tedaEasyFormViewerCancelFormEvent\t\t\t\t\t\t\t: '&?'\n        },\n\t\t\t\treplace \t\t\t: false,\n\t\t\t\t\n\t\t\t\tcontroller\t\t: edaEasyFormViewerCtrl,\n\t\t\t\tcontrollerAs \t: 'vm',\n\t\t\t\ttemplateUrl \t: 'eda.easyFormViewer.Template.html',\n\t\t\t\t\n\t\t\t\tlink : linkFct\n\t\t\t};\n\t\t\treturn directive;\n\t\t\t\n\t\t\t\n\t\t\t/**\n\t\t\t * directive's link function\n\t\t\t */\n\t\t\tfunction linkFct(scope, element, attrs){\n\t\t\t\t\n\t\t\t\tscope.vm.model \t\t\t\t= {};\n\t\t\t\tscope.vm.fields \t\t\t= loadFieldsModel();\n\t\t\t\tscope.vm.submitText \t= scope.edaEasyFormViewerSubmitButtonText || 'Submit';\n\t\t\t\tscope.vm.cancelText \t= scope.edaEasyFormViewerCancelButtonText || 'Cancel';\t\n\t\t\t\t\t\t\t\t\n\t\t\t\tscope.$watch(fieldsModelToWatch, \t\tfieldsModelWatcher, \ttrue);\n\t\t\t\tscope.$watch(dataModelToWatch,\t\t\tdataModelWatcher,\t\t\ttrue);\n\t\t\t\tscope.$watch(submitBtnTextToWatch, \tsubmitBtnTextWatcher);\n\t\t\t\tscope.$watch(cancelBtnTextToWatch, \tcancelBtnTextWatcher);\n\t\t\t\tscope.$watch(submitEventToWatch, \t\tsubmitEventWatcher);\n\t\t\t\tscope.$watch(cancelEventToWatch, \t\tcancelEventWatcher);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tfunction dataModelToWatch(){\n\t\t\t\t\treturn scope.vm.model;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tfunction fieldsModelToWatch(){\n\t\t\t\t\treturn scope.edaEasyFormViewerEasyFormGeneratorFieldsModel;\n\t\t\t\t}\n\n\t\t\t\tfunction submitBtnTextToWatch(){\n\t\t\t\t\treturn scope.edaEasyFormViewerSubmitButtonText;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction cancelBtnTextToWatch(){\n\t\t\t\t\treturn scope.edaEasyFormViewerCancelButtonText;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction submitEventToWatch(){\n\t\t\t\t\treturn scope.vm.hasJustSumitted;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction cancelEventToWatch(){\n\t\t\t\t\treturn scope.vm.hasJustCancelled;\n\t\t\t\t}\t\t\t\t\n\t\t\t\t\n\t\t\t\tfunction fieldsModelWatcher(newFieldsModel, oldFieldsModel){\t\t\t\t\t\n\t\t\t\t\tscope.vm.fields = loadExistingConfigurationModel(newFieldsModel);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction submitBtnTextWatcher(newSubmitBtntext, oldSubmitBtntext){\n\t\t\t\t\tif (newSubmitBtntext !== oldSubmitBtntext) {\n\t\t\t\t\t\tscope.vm.submitText \t= newSubmitBtntext || 'Submit';\t\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\t\t\t\t\n\t\t\t\n\t\t\t\tfunction cancelBtnTextWatcher(newCancelBtntext, oldCancelBtntext){\n\t\t\t\t\tif (newCancelBtntext !== oldCancelBtntext) {\n\t\t\t\t\t\tscope.vm.cancelText \t= newCancelBtntext || 'Submit';\t\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\t\n\t\t\t\t\n\t\t\t\tfunction dataModelWatcher(newDataModel, PreiousDataModel){\n\t\t\t\t\tscope.edaEasyFormViewerDataModel = newDataModel;\n\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\n\t\t\t\tfunction submitEventWatcher(newSubmitEvent, oldSubmitEvent){\n\t\t\t\t\tif (newSubmitEvent === true) {\n\t\t\t\t\t\t\tif (angular.isFunction(scope.edaEasyFormViewerSubmitFormEvent)) {\n\t\t\t\t\t\t\t\tvar _dataModelSubmitted = scope.vm.model ;\n\t\t\t\t\t\t\t\tscope.edaEasyFormViewerSubmitFormEvent({ dataModelSubmitted : _dataModelSubmitted });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tscope.vm.hasJustSumitted = false;\t\t\t\t\t\n\t\t\t\t}\t\t\t\n\t\t\t\n\t\t\t\tfunction cancelEventWatcher(newCancelEvent, oldCancelEvent){\n\t\t\t\t\tif (newCancelEvent === true) {\n\t\t\t\t\t\t\tif (angular.isFunction(scope.edaEasyFormViewerCancelFormEvent)) {\n\t\t\t\t\t\t\t\tscope.edaEasyFormViewerCancelFormEvent();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tscope.vm.hasJustCancelled = false;\t\t\t\t\t\n\t\t\t\t}\t\t\t\t\n\t\t\t\n\t\t\t\t/**\n\t\t\t\t * TODO : check if formly or easy form generato fields model\n\t\t\t\t * \n\t\t\t\t * by default or if both -> easy for generator is chosen\n\t\t\t\t */\n\t\t\t\tfunction loadFieldsModel(){\n\t\t\t\t\t\n\t\t\t\t\tvar initialFieldsModel = angular\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.isArray(scope.edaEasyFormViewerEasyFormGeneratorFieldsModel) ?\n\t\t\t\t\t\t//translate easy form generator to formly fields model\n\t\t\t\t\t\tloadExistingConfigurationModel(scope.edaEasyFormViewerEasyFormGeneratorFieldsModel)\n\t\t\t\t\t\t: {};\n\t\t\t\t\t\n\t\t\t\t\treturn initialFieldsModel;\n\t\t\t\t}\n\t\t\t\t\n        function loadExistingConfigurationModel(loadedFieldModel){\n          \n          if(angular.isArray(loadedFieldModel)){\n            var configlines           = returnAttributeConfigurationLinesIfNotEmpty(loadedFieldModel); \n\t\t\t\t\t\tvar formlyFieldsModel \t\t= [];          \n            \n\t\t\t\t\t\tscope.configurationLoaded = {};\n            \n            modelsTranslator.bindConfigurationLines(scope.configurationLoaded,configlines);\n            /**\n             * rebind special control properties :\n             * \n             * formly expression properties\n             * Validators\n             * Validation\n             */\n            modelsTranslator.refreshControlFormlyExpressionProperties(scope.configurationLoaded);\n            modelsTranslator.refreshControlFormlyValidators(scope.configurationLoaded);\n            modelsTranslator.refreshControlFormlyValidation(scope.configurationLoaded);\n            \n            //apply configuration model\n            scope.configuration = angular.copy(scope.configurationLoaded);\n            \n            //apply formly model\n            modelsTranslator.applyConfigurationToformlyModel(scope.configurationLoaded, formlyFieldsModel, scope.vm.model);          \n          \t\n\t\t\t\t\t\treturn  formlyFieldsModel;\n          }  \n   \n\t\t\t  } \n\t\n\t\n\t        function returnAttributeConfigurationLinesIfNotEmpty(loadedFieldModel){\n            var edaEasyFormGeneratorModelToReturn = (\n                angular.isArray(loadedFieldModel) ?  ( \n                    loadedFieldModel.length > 0 ? \n                      loadedFieldModel \n                    : emptyEdaFieldsModel()\n                    ) \n                : emptyEdaFieldsModel()\n            );\n             return edaEasyFormGeneratorModelToReturn;  \n          }\n          \n          /**\n           * empty fields model : to display at least an empty line\n           * otherwise would look like ugly empty line like it were a bug\n           */\n\t\t\t\t\tfunction emptyEdaFieldsModel(){\n\t\t\t\t\t\tvar emptyModel = [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"line\": 1,\n\t\t\t\t\t\t\t\t\"activeColumn\": 1,\n\t\t\t\t\t\t\t\t\"columns\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"numColumn\": 1,\n\t\t\t\t\t\t\t\t\t\t\"exist\": true,\n\t\t\t\t\t\t\t\t\t\t\"control\": {\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"none\",\n\t\t\t\t\t\t\t\t\t\t\t\"key\": \"none\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t];\n\t\t\t\t\t\treturn emptyModel;\n\t\t\t\t\t}\n          \n          function returnAttributeDataModelIfNotEmpty(){\n            var dataModelToReturn = (\n                angular.isArray(scope.edaEasyFormGeneratorModel.dataModel)   ?  ( \n                    scope.edaEasyFormGeneratorModel.dataModel.length > 0 ? \n                    scope.edaEasyFormGeneratorModel.dataModel \n                    : []\n                   ) \n                : []\n            );\n             return dataModelToReturn;  \n          } \n\t\n\t\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t/**\n\t\t\t * directive's controller : controllerAs syntax\n\t\t\t */\n\t\t\tfunction edaEasyFormViewerCtrl(){\n\t\t\t\t/* jshint validthis:true */\n\t\t\t\tvar vm = this;\n\t\t\t\t//default :\n\t\t\t\tvm.model \t\t\t\t\t\t\t\t\t= {};\n\t\t\t\tvm.fields \t\t\t\t\t\t\t\t= {};\n\t\t\t\tvm.hasJustSumitted \t\t\t\t= false;\n\t\t\t\tvm.hasJustCancelled \t\t\t= false;\n\t\t\t\tvm.edaSubmitThisDataModel = edaSubmitThisDataModel;\n\t\t\t\tvm.edaCancelEvent \t\t\t\t= edaCancelEvent;\n\t\t\t\t\n\t\t\t\tfunction edaSubmitThisDataModel(){\n\t\t\t\t\tvm.hasJustSumitted = true;\n\t\t\t\t}\n\t\t\t\tfunction edaCancelEvent(){\n\t\t\t\t\tvm.hasJustCancelled = true;\n\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n})();\n/**\n *  ------------------------------------------------------\n *  service : modelsTranslator\n *  ------------------------------------------------------\n *\n *  this service helps translating easy form configuration model to angualr formly model\n *\n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n;(function(){\n\t'use strict';\n\n\tangular\n\t\t.module('eda.modelsTranslator.Service', [])\n\t\t.factory('modelsTranslator', controllerModalProxy);\n\n\t\tcontrollerModalProxy.$inject = [];\n\t\tfunction controllerModalProxy(){\n\n\t\t\tvar service = {\n\t\t\t\tinitNyaSelect \t\t\t\t\t\t\t\t\t\t\t\t\t: initNyaSelect,\n\t\t\t\tgetControlsDefinition \t\t\t\t\t\t\t\t\t: getControlsDefinition,\n\t\t\t\trefreshControlFormlyExpressionProperties: refreshControlFormlyExpressionProperties,\n\t\t\t\trefreshControlFormlyValidators\t\t\t\t\t: refreshControlFormlyValidators,\n\t\t\t\trefreshControlFormlyValidation\t\t\t\t\t: refreshControlFormlyValidation,\n\n        initConfigurationEditFromScratch \t\t\t\t: initConfigurationEditFromScratch,\n        bindConfigurationLines           \t\t\t\t: bindConfigurationLines,\n        applyConfigurationToformlyModel  \t\t\t\t: applyConfigurationToformlyModel\n\t\t\t};\n\n\t\t\treturn service;\n\n\t\t}\n\n\t\tfunction initNyaSelect(nyaSelectObj){\n\t\t\treturn resetNyaSelect(nyaSelectObj);\n\t\t}\n\n\t\t/**\n\t\t\t* get all controls definition (nyaSelectObj)\n\t\t\t*\n\t\t\t* needed to bind these properties :\n\t\t\t*\n\t\t\t* formlyExpressionProperties: {},\n\t\t\t* formlyValidators: {},\n\t\t\t* formlyValidation\n\t\t\t*/\n\t\tfunction getControlsDefinition(){\n\t\t\tvar controls = {};\n\t\t\tresetNyaSelect(controls);\n\t\t\treturn controls;\n\t\t}\n\n\t\t/**\n\t\t\t* loading forms will not be able to retrieve formlyExpressionProperties\n\t\t\t* -> here does the job\n\t\t\t*/\n\t\tfunction refreshControlFormlyExpressionProperties(configurationModel){\n\n\t\t\tif (angular.isObject(configurationModel)) {\n\t\t\t\t//iterates lines\n\t\t\t\tangular.forEach(configurationModel.lines, function(line, indexLine){\n\t\t\t\t\tangular.forEach(line.columns, function(column, controlIndex){\n\t\t\t\t\t\tvar _controlsDefinition = getControlsDefinition();\n\t\t\t\t\t\tangular.forEach(_controlsDefinition.controls, function(aControl, aControlIndex){\n\n\t\t\t\t\t\t\tif (column.control.type === aControl.formlyType &&\n\t\t\t\t\t\t\t\t\tcolumn.control.subtype === aControl.formlySubtype) {\n\t\t\t\t\t\t\t\t\t//----> update control formlyExpressionProperties property\n\t\t\t\t\t\t\t\t\tcolumn.control.formlyExpressionProperties = aControl.formlyExpressionProperties;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t\t* loading forms will not be able to retrieve formlyValidators\n\t\t\t* -> here does the job\n\t\t\t*/\n\t\tfunction refreshControlFormlyValidators(configurationModel){\n\n\t\t\tif (angular.isObject(configurationModel)) {\n\t\t\t\t//iterates lines\n\t\t\t\tangular.forEach(configurationModel.lines, function(line, indexLine){\n\t\t\t\t\tangular.forEach(line.columns, function(column, controlIndex){\n\t\t\t\t\t\tvar _controlsDefinition = getControlsDefinition();\n\t\t\t\t\t\tangular.forEach(_controlsDefinition.controls, function(aControl, aControlIndex){\n\t\t\t\t\t\t\tif (column.control.type === aControl.formlyType &&\n\t\t\t\t\t\t\t\t\tcolumn.control.subtype === aControl.formlySubtype) {\n\t\t\t\t\t\t\t\t\t//----> update control formlyValidators property\n\t\t\t\t\t\t\t\t\tcolumn.control.formlyValidators = aControl.formlyValidators;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\n\t\t/**\n\t\t\t* loading forms will not be able to retrieve formlyValidation\n\t\t\t* -> here does the job\n\t\t\t*/\n\t\tfunction refreshControlFormlyValidation(configurationModel){\n\n\t\t\tif (angular.isObject(configurationModel)) {\n\t\t\t\t//iterates lines\n\t\t\t\tangular.forEach(configurationModel.lines, function(line, indexLine){\n\t\t\t\t\tangular.forEach(line.columns, function(column, controlIndex){\n\t\t\t\t\t\tvar _controlsDefinition = getControlsDefinition();\n\t\t\t\t\t\tangular.forEach(_controlsDefinition.controls, function(aControl, aControlIndex){\n\t\t\t\t\t\t\tif (column.control.type === aControl.formlyType &&\n\t\t\t\t\t\t\t\t\tcolumn.control.subtype === aControl.formlySubtype) {\n\t\t\t\t\t\t\t\t\t//----> update control formlyValidation property\n\t\t\t\t\t\t\t\t\tcolumn.control.formlyValidation = aControl.formlyValidation;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\n\n\t\t/**\n\t\t\t* init object : return true (if not true, you may have problem^^)\n\t\t\t*/\n\t\tfunction resetNyaSelect(nyaSelectObj){\n\t\t\tvar newNyaSelectObj = {\n\n\t\t\t\t\t\t\t\t\t\t\tcontrols : [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 'empty',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: 'no control',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubtitle: 'no control',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgroup: 'Blank',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyType: 'blank',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlySubtype: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyLabel: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyRequired: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyDesciption: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyOptions: [] ,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyExpressionProperties: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidators: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidation: {}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{id: 'Header',  name: 'Header', subtitle: 'no control', group: 'Decoration', formlyType: 'header', formlySubtype: '', formlyLabel: '', formlyRequired: false, formlyDesciption: '', formlyOptions: [] , formlyExpressionProperties: {}, formlyValidators: {}, formlyValidation: {}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{id: 'Subtitle',  name: 'Subtitle', subtitle: 'no control', group: 'Decoration', formlyType: 'subTitle', formlySubtype: '', formlyLabel: '', formlyRequired: false, formlyDesciption: '', formlyOptions: [] , formlyExpressionProperties: {}, formlyValidators: {}, formlyValidation: {}},\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 'TextInput',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: 'Text input',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubtitle: 'Text input',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgroup: 'input',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyType: 'input',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlySubtype: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyLabel: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyRequired: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyDesciption: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyOptions: [] ,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyExpressionProperties: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidators: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidation: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//return a required validation message :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar defaultReturnMsg = 'this Text input field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 'FileUpload',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: 'File upload',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubtitle: 'File upload',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgroup: 'input',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyType: 'fileupload',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlySubtype: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyLabel: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyRequired: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyDesciption: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyOptions: [] ,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyExpressionProperties: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidators: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidation: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//return a required validation message :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar defaultReturnMsg = 'this File upload field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 'Password',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: 'Password',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubtitle: 'Password',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgroup: 'input',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyType: 'input',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlySubtype: 'password',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyLabel: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyRequired: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyDesciption: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyOptions: [] ,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyExpressionProperties: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidators: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidation: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//return a required validation message :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar defaultReturnMsg = 'this Password field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid \t\t\t\t\t\t\t\t\t\t\t\t\t: 'Email',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname \t\t\t\t\t\t\t\t\t\t\t\t: 'Email',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubtitle \t\t\t\t\t\t\t\t\t\t: 'Email',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgroup \t\t\t\t\t\t\t\t\t\t\t: 'input',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyType\t\t\t\t\t\t\t\t\t: 'input',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlySubtype \t\t\t\t\t\t\t: 'email',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyLabel \t\t\t\t\t\t\t\t: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyRequired \t\t\t\t\t\t\t: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyDesciption \t\t\t\t\t\t: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyOptions \t\t\t\t\t\t\t: [],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyExpressionProperties \t: {},\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidators \t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temailShape : {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texpression : function(viewValue, modelValue) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar value = modelValue || viewValue;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn /^[a-z]+[a-z0-9._]+@[a-z]+\\.[a-z.]{2,5}$/.test(value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: '$viewValue + \\' is not a valid email\\''\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidation: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//return a required validation message :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//-> or if not exists or empty just 'this field is required'\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar defaultReturnMsg = 'this Email field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//check if validation is really dued to require validation\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//and not another validation like emailShape validator\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (scope.to.required) return returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 'Date',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: 'Date',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubtitle: 'Date',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgroup: 'input',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyType: 'datepicker',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlySubtype: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyLabel: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyRequired: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyDesciption: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyOptions: [],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdatepickerPopup: 'dd-MMMM-yyyy',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyExpressionProperties: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidators: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidation: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//return a required validation message :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar defaultReturnMsg = 'this Date field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 'Texarea',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: 'Textarea',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubtitle: 'Textarea',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgroup: 'Textarea',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyType: 'textarea',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlySubtype: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyLabel: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyRequired: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyDesciption: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyOptions: [],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyExpressionProperties: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidators: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidation: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//return a required validation message :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar defaultReturnMsg = 'this Textarea field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 'RichTextEditor',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: 'RichTextEditor',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubtitle: 'RichTextEditor',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgroup: 'Textarea',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyType: 'richEditor',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlySubtype: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyLabel: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyRequired: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyDesciption: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyOptions: [],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyExpressionProperties: {},\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidators \t\t\t\t\t\t: {},\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidation: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//return a required validation message :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar defaultReturnMsg = 'this RichTextEditor field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 'Radio',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: 'Radio',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubtitle: 'Radio',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions: [],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgroup: 'Radio',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyType: 'radio',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlySubtype: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyLabel: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyRequired: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyDesciption: '' ,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyOptions: [],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyExpressionProperties: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidators: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidation: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//return a required validation message :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar defaultReturnMsg = 'this Password field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 'Checkbox',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: 'Checkbox',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubtitle: 'Checkbox',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgroup: 'Checkbox',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyType: 'checkbox',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlySubtype: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyLabel: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyRequired: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyDesciption: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyOptions: [],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyExpressionProperties: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidators: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidation: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//return a required validation message :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar defaultReturnMsg = 'this Checkbox field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 'BasicSelect',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: 'Basic select',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubtitle: 'Basic select',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions: [],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgroup: 'Select',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyType: 'basicSelect',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlySubtype: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyLabel: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyRequired: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyDesciption: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyOptions: [],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyExpressionProperties: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidators: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidation: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//return a required validation message :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar defaultReturnMsg = 'this Basic select field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 'GroupedSelect',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: 'Grouped Select',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubtitle: 'Grouped Select',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions: [],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgroup: 'Select',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyType: 'groupedSelect',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlySubtype: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyLabel: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyRequired: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyDesciption: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyOptions: [],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyExpressionProperties: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidators: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidation: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//return a required validation message :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar defaultReturnMsg = 'this Grouped Select field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\n\t\t\t\t\t\t\t\t\t\t\t\tselectedControl : 'none' ,\n\t\t\t\t\t\t\t\t\t\t\t\ttemporyConfig : {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectedControl: 'none',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyLabel: 'label',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyRequired: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyDesciption: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyPlaceholder: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyOptions : [],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//expressions/validation fields\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyExpressionProperties: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidators: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyValidation: {}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t};\n\n\t\t\t//reset\n\t\t\tangular.copy(newNyaSelectObj, nyaSelectObj);\n\t\t\treturn true;\n\t\t}\n\n\n\n\n\n\t\t/**\n\t\t * equivalent to formFielManage service in easy form generator\n\t\t */\n\t\tfunction initConfigurationEditFromScratch(configurationModel){\n\t\t\tvar configurationModelInit = {\n\t\t\t\tactiveLine: 1,\n\t\t\t\tlistConfigStep: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t'init',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'first',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'second',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'third'\n\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\tstepIndicators:  [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\tconfigStepCounter : 0,\n\t\t\t\tsubmitButtonText  : 'submit',\n\t\t\t\tcancelButtonText  : 'cancel',\n\t\t\t\tlines: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tline:1,\n\t\t\t\t\t\t\t\t\tactiveColumn : 1,\n\t\t\t\t\t\t\t\t\tcolumns: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnumColumn: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texist:true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype:'none',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey: 'none',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// templateOptions: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//                     label: 'none',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//                     placeholder: 'none',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//                     required: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//                     description: 'Descriptive text'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//                   }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t};\n\t\t\tangular.copy(configurationModelInit, configurationModel);\n\t\t}\n\n\t\tfunction bindConfigurationLines(configurationModel, lines){\n\t\t\tif( Object.prototype.toString.call(lines) === '[object Array]' ) {\n\t\t\t\tvar configurationModelResult = {\n\t\t\t\t\tactiveLine: 1,\n\t\t\t\t\tlistConfigStep: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'init',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'first',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'second',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'third'\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\tstepIndicators:  [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\tconfigStepCounter: 0,\n\t\t\t\t\tsubmitButtonText : 'submit',\n\t\t\t\t\tcancelButtonText: 'cancel',\n\t\t\t\t\tlines: []\n\t\t\t\t};\n\t\t\t\tconfigurationModelResult.lines = [].concat(lines);\n\n\t\t\t\tangular.copy(configurationModelResult, configurationModel);\n\n\t\t\t\treturn getMessageObject('configuration model is bound','lines are bound to configuration model.');\n\t\t\t}else{\n\t\t\t\treturn getErrorObject('lines is not an array', 'Checks lines type, it is not an array.');\n\t\t\t}\n\t\t}\n\n\t\tfunction applyConfigurationToformlyModel(configurationModel, formlyModel, formlyDataModel){\n\t\t\tresetFormlyModel(formlyModel);\n\t\t\tresetDataModel(formlyDataModel);\n\t\t\t/**\n\t\t\t\t* manage header here line0\n\t\t\t\t*/\n\t\t\tvar lineNumber = configurationModel.lines.length;\n\t\t\tfor (var i = 0; i < lineNumber; i++) {\n\t\t\t\t\t//1 column line control\n\t\t\t\t\tif (configurationModel.lines[i].columns.length === 1) {\n\t\t\t\t\t\t//test if template control = header\n\t\t\t\t\t\tif (configurationModel.lines[i].columns[0].control.type === 'header') {\n\t\t\t\t\t\t\taddOneColumnHeader(formlyModel, configurationModel, i);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\taddOneColumnControl(formlyModel, configurationModel, i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (configurationModel.lines[i].columns.length === 2) {\n\t\t\t\t\t\taddTwoColumnControl(formlyModel, configurationModel,i);\n\t\t\t\t\t}\n\t\t\t\t\tif (configurationModel.lines[i].columns.length === 3) {\n\t\t\t\t\t\taddThreeColumnControl(formlyModel, configurationModel,i);\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction resetFormlyModel(formlyModel){\n\t\t\tvar resetformly = [];\n\t\t\tangular.copy(resetformly, formlyModel);\n\t\t}\n\n\n\n\t\tfunction addOneColumnHeader(formlyModel, configurationModel,lineIndex){\n\t\t\t/**\n\t\t\t\t* text header is stored in \"description\" in templateOtion model\n\t\t\t\t*/\n\t\t\tvar headerTemplateCol0 = '<div class=\"row\"><div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\"><h2 class=\"text-center\">' + extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[0].control) + '<h2></div></div><hr/>';\n\n\t\t\tformlyModel.push(\n\t\t\t\t{\n\t\t\t\t\ttemplate: typeof configurationModel\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.lines[lineIndex]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.columns[0]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.control\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.type !== 'undefined' ? (configurationModel.lines[lineIndex].columns[0].control.type === 'header' ? headerTemplateCol0 : '<div></div>') : '<div></div>'\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tfunction addDatepickerPopupProperty(fieldToPush, configurationModel,lineIndex){\n\t\t\t\tfieldToPush.templateOptions.datepickerPopup = extractTemplateOptionDatepickerPopup(configurationModel.lines[lineIndex].columns[0].control);\n\t\t}\n\n\t\tfunction addOneColumnControl(formlyModel, configurationModel,lineIndex){\n\t\t\tvar fieldToPush = {\n\t\t\t\tclassName: 'col-xs-12',\n\t\t\t\ttype: typeof configurationModel.lines[lineIndex].columns[0].control.type !== 'undefined' ? (configurationModel.lines[lineIndex].columns[0].control.type === 'none' ? 'blank': configurationModel.lines[lineIndex].columns[0].control.type): 'blank',\n\t\t\t\tkey: typeof configurationModel.lines[lineIndex].columns[0].control.key !== 'undefined' ?  configurationModel.lines[lineIndex].columns[0].control.key : 'blank' + Date.now(),\n\t\t\t\ttemplateOptions: {\n\t\t\t\t\ttype                  : extractTemplateOptionType(configurationModel.lines[lineIndex].columns[0].control),\n\t\t\t\t\tlabel                 : extractTemplateOptionLabel(configurationModel.lines[lineIndex].columns[0].control),\n\t\t\t\t\trequired              : extractTemplateOptionRequired(configurationModel.lines[lineIndex].columns[0].control),\n\t\t\t\t\tplaceholder           : extractTemplateOptionPlaceholder(configurationModel.lines[lineIndex].columns[0].control),\n\t\t\t\t\tdescription           : extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[0].control),\n\t\t\t\t\toptions               : extractTemplateOptionOptions(configurationModel.lines[lineIndex].columns[0].control)\n\t\t\t\t},\n\t\t\t\texpressionProperties  : extractFormlyExpressionProperties(configurationModel.lines[lineIndex].columns[0].control),\n\t\t\t\tvalidators            : extractFormlyValidators(configurationModel.lines[lineIndex].columns[0].control),\n\t\t\t\tvalidation            : extractFormlyValidation(configurationModel.lines[lineIndex].columns[0].control)\n\t\t\t};\n\t\t\t//////////////////////////////////////////////\n\t\t\t//datepicker additionnal particular property\n\t\t\t//////////////////////////////////////////////\n\t\t\tif (configurationModel.lines[lineIndex].columns[0].control.type === 'datepicker') {\n\t\t\t\taddDatepickerPopupProperty(fieldToPush, configurationModel,lineIndex);\n\t\t\t}\n\n\t\t\tformlyModel.push(\n\t\t\t\tfieldToPush\n\t\t\t);\n\t\t}\n\n\t\tfunction addTwoColumnControl(formlyModel, configurationModel,lineIndex){\n\n\t\t\t//text header is stored in \"description\" in templateOtion model\n\t\t\tvar headerTemplateCol0 =  {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName: 'col-xs-6',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttemplate : '<div class=\"row\"><div class=\"\"><h2 class=\"text-center\">' + extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[0].control) + '<h2><hr/></div></div>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\tvar headerTemplateCol1 =  {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName: 'col-xs-6',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttemplate:'<div class=\"row\"><div class=\"\"><h2 class=\"text-center\">' + extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[1].control) + '<h2><hr/></div></div>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\tvar controlCol0 =     {\n\t\t\t\t\tclassName: 'col-xs-6',\n\t\t\t\t\ttype: typeof configurationModel.lines[lineIndex].columns[0].control.type !== 'undefined' ? (configurationModel.lines[lineIndex].columns[0].control.type === 'none' ? 'blank': configurationModel.lines[lineIndex].columns[0].control.type): 'blank',\n\t\t\t\t\tkey: typeof configurationModel.lines[lineIndex].columns[0].control.key !== 'undefined' ?  configurationModel.lines[lineIndex].columns[0].control.key : 'blank' + Date.now(),\n\t\t\t\t\ttemplateOptions: {\n\t\t\t\t\t\t\ttype: extractTemplateOptionType(configurationModel.lines[lineIndex].columns[0].control),\n\t\t\t\t\t\t\tlabel: extractTemplateOptionLabel(configurationModel.lines[lineIndex].columns[0].control),\n\t\t\t\t\t\t\trequired : extractTemplateOptionRequired(configurationModel.lines[lineIndex].columns[0].control),\n\t\t\t\t\t\t\tplaceholder : extractTemplateOptionPlaceholder(configurationModel.lines[lineIndex].columns[0].control),\n\t\t\t\t\t\t\tdescription : extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[0].control),\n\t\t\t\t\t\t\toptions : extractTemplateOptionOptions(configurationModel.lines[lineIndex].columns[0].control)\n\t\t\t\t\t},\n\t\t\t\t\t\t\texpressionProperties : extractFormlyExpressionProperties(configurationModel.lines[lineIndex].columns[0].control),\n\t\t\t\t\t\t\tvalidators : extractFormlyValidators(configurationModel.lines[lineIndex].columns[0].control),\n\t\t\t\t\t\t\tvalidation : extractFormlyValidation(configurationModel.lines[lineIndex].columns[0].control)\n\t\t\t\t};\n\t\t\t//////////////////////////////////////////////\n\t\t\t//datepicker additionnal particular property\n\t\t\t//////////////////////////////////////////////\n\t\t\tif (configurationModel.lines[lineIndex].columns[0].control.type === 'datepicker') {\n\t\t\t\taddDatepickerPopupProperty(controlCol0, configurationModel,lineIndex);\n\t\t\t}\n\n\t\t\tvar controlCol1 =  {\n\t\t\t\t\t\t\t\tclassName: 'col-xs-6',\n\t\t\t\t\t\t\t\ttype: typeof configurationModel.lines[lineIndex].columns[1].control.type !== 'undefined' ?  (configurationModel.lines[lineIndex].columns[1].control.type === 'none' ? 'blank': configurationModel.lines[lineIndex].columns[1].control.type) : 'blank',\n\t\t\t\t\t\t\t\tkey: typeof configurationModel.lines[lineIndex].columns[1].control.key !== 'undefined' ?  configurationModel.lines[lineIndex].columns[1].control.key : 'blank' + Date.now(),\n\t\t\t\t\t\t\t\ttemplateOptions: {\n\t\t\t\t\t\t\t\t\t\ttype: extractTemplateOptionType(configurationModel.lines[lineIndex].columns[1].control),\n\t\t\t\t\t\t\t\t\t\tlabel: extractTemplateOptionLabel(configurationModel.lines[lineIndex].columns[1].control),\n\t\t\t\t\t\t\t\t\t\trequired : extractTemplateOptionRequired(configurationModel.lines[lineIndex].columns[1].control),\n\t\t\t\t\t\t\t\t\t\tplaceholder : extractTemplateOptionPlaceholder(configurationModel.lines[lineIndex].columns[1].control),\n\t\t\t\t\t\t\t\t\t\tdescription : extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[1].control),\n\t\t\t\t\t\t\t\t\t\toptions : extractTemplateOptionOptions(configurationModel.lines[lineIndex].columns[1].control)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\texpressionProperties : extractFormlyExpressionProperties(configurationModel.lines[lineIndex].columns[1].control),\n\t\t\t\t\t\t\t\t\t\tvalidators : extractFormlyValidators(configurationModel.lines[lineIndex].columns[1].control),\n\t\t\t\t\t\t\t\t\t\tvalidation : extractFormlyValidation(configurationModel.lines[lineIndex].columns[1].control)\n\t\t\t\t};\n\n\t\t\t//////////////////////////////////////////////\n\t\t\t//datepicker additionnal particular property\n\t\t\t//////////////////////////////////////////////\n\t\t\tif (configurationModel.lines[lineIndex].columns[1].control.type === 'datepicker') {\n\t\t\t\taddDatepickerPopupProperty(controlCol1, configurationModel,lineIndex);\n\t\t\t}\n\n\t\t\tvar FieldGroup = [];\n\n\t\t\tif (configurationModel.lines[lineIndex].columns[0].control.type === 'header') {\n\t\t\t\tFieldGroup.push(headerTemplateCol0);\n\t\t\t}else{\n\t\t\t\tFieldGroup.push(controlCol0);\n\t\t\t}\n\n\t\t\tif (configurationModel.lines[lineIndex].columns[1].control.type === 'header') {\n\t\t\t\tFieldGroup.push(headerTemplateCol1);\n\t\t\t}else{\n\t\t\t\tFieldGroup.push(controlCol1);\n\t\t\t}\n\n\t\t\tformlyModel.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tclassName: 'row',\n\t\t\t\t\t\tfieldGroup: FieldGroup\n\t\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tfunction addThreeColumnControl(formlyModel, configurationModel,lineIndex){\n\t\t\t//text header is stored in \"description\" in templateOtion model\n\t\t\tvar headerTemplateCol0 =  {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName: 'col-xs-4',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttemplate : '<div class=\"row\"><div class=\"\"><h2 class=\"text-center\">' + extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[0].control) + '<h2><hr/></div></div>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\tvar headerTemplateCol1 =  {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName: 'col-xs-4',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttemplate:'<div class=\"row\"><div class=\"\"><h2 class=\"text-center\">' + extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[1].control) + '<h2><hr/></div></div>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\tvar headerTemplateCol2 =  {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName: 'col-xs-4',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttemplate:'<div class=\"row\"><div class=\"\"><h2 class=\"text-center\">' + extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[2].control) + '<h2><hr/></div></div>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\tvar controlCol0 =     {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName: 'col-xs-4',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: typeof configurationModel.lines[lineIndex].columns[0].control.type !== 'undefined' ? (configurationModel.lines[lineIndex].columns[0].control.type === 'none' ? 'blank': configurationModel.lines[lineIndex].columns[0].control.type): 'blank',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey: typeof configurationModel.lines[lineIndex].columns[0].control.key !== 'undefined' ?  configurationModel.lines[lineIndex].columns[0].control.key : 'blank' + Date.now(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttemplateOptions: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: extractTemplateOptionType(configurationModel.lines[lineIndex].columns[0].control),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: extractTemplateOptionLabel(configurationModel.lines[lineIndex].columns[0].control),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired : extractTemplateOptionRequired(configurationModel.lines[lineIndex].columns[0].control),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder : extractTemplateOptionPlaceholder(configurationModel.lines[lineIndex].columns[0].control),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdescription : extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[0].control),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions : extractTemplateOptionOptions(configurationModel.lines[lineIndex].columns[0].control)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texpressionProperties : extractFormlyExpressionProperties(configurationModel.lines[lineIndex].columns[0].control),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidators : extractFormlyValidators(configurationModel.lines[lineIndex].columns[0].control),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidation : extractFormlyValidation(configurationModel.lines[lineIndex].columns[0].control)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t//////////////////////////////////////////////\n\t\t\t//datepicker additionnal particular property\n\t\t\t//////////////////////////////////////////////\n\t\t\tif (configurationModel.lines[lineIndex].columns[0].control.type === 'datepicker') {\n\t\t\t\taddDatepickerPopupProperty(controlCol0, configurationModel,lineIndex);\n\t\t\t}\n\n\t\t\tvar controlCol1 =  {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName: 'col-xs-4',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: typeof configurationModel.lines[lineIndex].columns[1].control.type !== 'undefined' ?  (configurationModel.lines[lineIndex].columns[1].control.type === 'none' ? 'blank': configurationModel.lines[lineIndex].columns[1].control.type) : 'blank',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey: typeof configurationModel.lines[lineIndex].columns[1].control.key !== 'undefined' ?  configurationModel.lines[lineIndex].columns[1].control.key : 'blank' + Date.now(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttemplateOptions: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: extractTemplateOptionType(configurationModel.lines[lineIndex].columns[1].control),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: extractTemplateOptionLabel(configurationModel.lines[lineIndex].columns[1].control),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired : extractTemplateOptionRequired(configurationModel.lines[lineIndex].columns[1].control),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder : extractTemplateOptionPlaceholder(configurationModel.lines[lineIndex].columns[1].control),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdescription : extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[1].control),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions : extractTemplateOptionOptions(configurationModel.lines[lineIndex].columns[1].control)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texpressionProperties : extractFormlyExpressionProperties(configurationModel.lines[lineIndex].columns[1].control),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidators : extractFormlyValidators(configurationModel.lines[lineIndex].columns[1].control),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidation : extractFormlyValidation(configurationModel.lines[lineIndex].columns[1].control)\n\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t//////////////////////////////////////////////\n\t\t\t//datepicker additionnal particular property\n\t\t\t//////////////////////////////////////////////\n\t\t\tif (configurationModel.lines[lineIndex].columns[1].control.type === 'datepicker') {\n\t\t\t\taddDatepickerPopupProperty(controlCol1, configurationModel,lineIndex);\n\t\t\t}\n\t\t\tvar controlCol2 =  {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName: 'col-xs-4',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: typeof configurationModel.lines[lineIndex].columns[2].control.type !== 'undefined' ?  (configurationModel.lines[lineIndex].columns[2].control.type === 'none' ? 'blank': configurationModel.lines[lineIndex].columns[2].control.type) : 'blank',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey: typeof configurationModel.lines[lineIndex].columns[2].control.key !== 'undefined' ?  configurationModel.lines[lineIndex].columns[2].control.key : 'blank' + Date.now(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttemplateOptions: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: extractTemplateOptionType(configurationModel.lines[lineIndex].columns[2].control),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: extractTemplateOptionLabel(configurationModel.lines[lineIndex].columns[2].control),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired : extractTemplateOptionRequired(configurationModel.lines[lineIndex].columns[2].control),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder : extractTemplateOptionPlaceholder(configurationModel.lines[lineIndex].columns[2].control),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdescription : extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[2].control),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions : extractTemplateOptionOptions(configurationModel.lines[lineIndex].columns[2].control)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texpressionProperties : extractFormlyExpressionProperties(configurationModel.lines[lineIndex].columns[2].control),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidators : extractFormlyValidators(configurationModel.lines[lineIndex].columns[2].control),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidation : extractFormlyValidation(configurationModel.lines[lineIndex].columns[2].control)\n\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t//////////////////////////////////////////////\n\t\t\t//datepicker additionnal particular property\n\t\t\t//////////////////////////////////////////////\n\t\t\tif (configurationModel.lines[lineIndex].columns[2].control.type === 'datepicker') {\n\t\t\t\taddDatepickerPopupProperty(controlCol2, configurationModel,lineIndex);\n\t\t\t}\n\n\t\t\tvar FieldGroup = [];\n\n\t\t\tif (configurationModel.lines[lineIndex].columns[0].control.type === 'header') {\n\t\t\t\tFieldGroup.push(headerTemplateCol0);\n\t\t\t}else{\n\t\t\t\tFieldGroup.push(controlCol0);\n\t\t\t}\n\n\t\t\tif (configurationModel.lines[lineIndex].columns[1].control.type === 'header') {\n\t\t\t\tFieldGroup.push(headerTemplateCol1);\n\t\t\t}else{\n\t\t\t\tFieldGroup.push(controlCol1);\n\t\t\t}\n\n\t\t\tif (configurationModel.lines[lineIndex].columns[2].control.type === 'header') {\n\t\t\t\tFieldGroup.push(headerTemplateCol2);\n\t\t\t}else{\n\t\t\t\tFieldGroup.push(controlCol2);\n\t\t\t}\n\n\n\t\t\tformlyModel.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tclassName: 'row',\n\t\t\t\t\t\tfieldGroup: FieldGroup\n\t\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tfunction isTemplateOptionDefined(obj){\n\t\t\treturn typeof obj.templateOptions !== 'undefined' ? true : false;\n\t\t}\n\n\t\tfunction extractTemplateOptionLabel(obj){\n\t\t\treturn  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.label !== 'undefined'? obj.templateOptions.label: '') : '';\n\t\t}\n\n\n\t\tfunction extractTemplateOptionDatepickerPopup(obj){\n\t\t\treturn  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.datepickerPopup !== 'undefined'? obj.templateOptions.datepickerPopup: '') : '';\n\t\t}\n\n\t\tfunction extractFormlyExpressionProperties(obj){\n\t\t\treturn  typeof obj.formlyExpressionProperties !== 'undefined' ? angular.copy(obj.formlyExpressionProperties) : {};\n\t\t}\n\n\t\tfunction extractFormlyValidators(obj){\n\t\t\treturn  typeof obj.formlyValidators !== 'undefined' ? angular.copy(obj.formlyValidators): {};\n\t\t}\n\n\t\tfunction extractFormlyValidation(obj){\n\t\t\treturn  typeof obj.formlyValidation !== 'undefined' ?  angular.copy(obj.formlyValidation) : {};\n\t\t}\n\n\t\tfunction extractTemplateOptionRequired(obj){\n\t\t\treturn  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.required !== 'undefined'? obj.templateOptions.required: '') : '';\n\t\t}\n\n\t\tfunction extractTemplateOptionOptions(obj){\n\t\t\treturn  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.options !== 'undefined'? obj.templateOptions.options: '') : '';\n\t\t}\n\n\t\tfunction extractTemplateOptionType(obj){\n\t\t\treturn  typeof obj.subtype !== 'undefined'? obj.subtype: '';\n\t\t}\n\n\t\tfunction extractTemplateOptionPlaceholder(obj){\n\t\t\treturn  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.placeholder !== 'undefined'? obj.templateOptions.placeholder: '') : '';\n\t\t}\n\n\t\tfunction extractTemplateOptionDescription(obj){\n\t\t\treturn  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.description !== 'undefined'? obj.templateOptions.description: '') : '';\n\t\t}\n\n\t\tfunction resetDataModel(obj){\n\t\t\tvar emptyDataModel = {};\n\t\t\tangular.copy(emptyDataModel, obj);\n\t\t\treturn true;\n\t\t}\n\n\t\tfunction getErrorObject(errorTitle, errorMessage){\n\n\t\t\tvar messageObj = {\n\t\t\t\tnoError : false,\n\t\t\t\ttitle: '',\n\t\t\t\tMessage: ''\n\t\t\t};\n\n\t\t\tmessageObj.noError = false;\n\t\t\tmessageObj.title = errorTitle;\n\t\t\tmessageObj.Message = errorMessage;\n\t\t\treturn messageObj;\n\t\t}\n\n\t\tfunction getMessageObject(messageTitle, messageBody){\n\t\t\tvar messageObj = {\n\t\t\t\tnoError : false,\n\t\t\t\ttitle: '',\n\t\t\t\tMessage: ''\n\t\t\t};\n\n\t\t\tmessageObj.noError = true;\n\t\t\tmessageObj.title = messageTitle;\n\t\t\tmessageObj.Message = messageBody;\n\t\t\treturn messageObj;\n\t\t}\n\n\n\n\n\n})();\n\n})(this);"],"sourceRoot":"/source/"}