{"version":3,"sources":["eda.dragdropway.min.js"],"names":["runfct","$templateCache","validEditFooterTpl","join","editPanelBlankCtrlTpls","validEditFooter","editPanelHeaderCtrlTpl","editPanelSubTitleCtrlTpl","editPanelTextInputCtrlTpl","editPanelPasswordCtrlTpl","editPanelDateCtrlTpl","editPanelTextareaCtrlTpl","editPanelRichTextEditorCtrlTpl","editPanelRadioCtrlTpl","editPanelCheckboxCtrlTpl","editPanelBasicSelectCtrlTpl","editPanelGroupedSelectCtrlTpl","put","angular","module","value","run","$inject","config","dragDropConfigProvider","setItemsNotTocount","itemBeingDragged","formlyConfigProvider","EasyFormGenFormlyBindingModelsProvider","camelize","string","replace","match","chr","toUpperCase","toLowerCase","console","info","setType","name","template","addEasyFormControlToList","id","subtitle","group","formlyType","formlySubtype","formlyLabel","formlyRequired","formlyDesciption","formlyOptions","addControlToDragDropPresentationModel","label","control","cssClass","addToGroupCtrl","subTitleTemplate","attributes","bindings","ngModelAttrs","forEach","attr","attribute","binding","bound","angularUIDatePickerTemplate","wrapper","controller","$scope","open","$event","preventDefault","stopPropagation","opened","defaultOptions","templateOptions","addonLeft","class","onClick","options","isOpen","onFocus","$viewValue","$modelValue","scope","to","datepickerOptions","datepickerPopup","richTexEditorTemplate","basicSelectTemplate","groupedSelectTemplate","provider","addToGroupControl","thisControl","thisGroup","_dragDropPresentationModel","length","_dragDropConfigModel","containerConfig","decoration","missingGroupNumber","i","push","groupConfig","groupId","WhenIndex","_listDragDropItemCssClasses","numberItemPerRow","dropZoneConfig","ApplycssClass","fontAwesomeIcon","title","verboseMode","isCollapsed","collapseEnabled","collapseCtrl","atIndex","collapse","itemConfig","_itemsNotToCountFoReal","this","setListItemCssClass","fromConfig","concat","getItemsNotTocount","copy","controlToAdd","groupToAdd","getDragDropPresentationModel","$get","Service","getListItemCssClass","getItemsNotToCount","getItemCssDependingNumberItemsInRow","numberOfItems","classToReturn","getDistinctItemCssClass","distinctCssClass","valueRef","cssClassRef","canAdd","valueProc","cssClassProc","getDragDropConfigModel","setDragDropConfigContainerDecorationCollapse","dragDropConfigModel","indexValue","isCollapsedBool","parseInt","_easyFormListControls","controls","selectedControl","temporyConfig","formlyPlaceholder","_easyFormEmptyConfigurationLineModel","line","activeColumn","columns","numColumn","exist","type","key","_emptyControlFieldModel","_easyFormInitialStateConfigurationModel","submitButtonText","cancelButtonText","lines","_easyFormInitialStateConfigurationModelAddOnForStepWay","activeLine","listConfigStep","stepIndicators","configStepCounter","_easyFormReloadConfigurationModel","_headerTemplates","textContent","html_part1","selectedClass","html_part2","html_part3","html_part4","simpleHtml1","simpleHtml2","_formlyControlTemplates","className","required","placeholder","description","_particularControlProperties","controlType","properties","isRoot","isTemplateOptions","getAllParticularControlProperties","addParticularControlProperties","newParticularControlProperty","isAnUpdate","controlProp","getEasyFormListControls","controlDeclaration","getHeaderTemplates","addHeaderTemplateCssClass","cssClassToAdd","getFormlyControlTemplate","addformlyControlTemplatesCssClass","setFormlyControlTemplate","newFormlyControlTemplate","getEasyFormInitialStateConfigurationModel","addStepWayProperties","initialConfigurationModel","extend","getEasyFormReloadConfigurationModel","getEasyFormEmptyConfigurationLineModel","getEasyFormConfigurationEmptyControlModel","getRawHeaderTemplates","getHeaderTemplateForNcolumnLine","nbColInLines","headerToReturn","getRawFormlyControlTemplates","getFormlyControlTemplateForNcolumnLine","controlToReturn","aPropToAdd","easyFormGenVersion","$filter","$anchorScroll","toaster","$timeout","$modal","$log","formFieldManage","controllerModalProxy","dragDropItemDecorationService","dragDropConfig","ddModelConfModelProxyService","ddItemRightClickedManager","onSubmit","pop","timeout","body","vm","model","showCloseButton","addNewline","applyConfigurationToformlyModel","configuration","wfFormFields","wfFormFieldsOnlyNeededProperties","easyFormGeneratorVERSION","tab","editTab","active","previewTab","ihm","preview","formlyModelViewExpanded","formlyFieldsViewExpanded","customizeFormButtonsExpanded","saveThisFormExpanded","easyFormDragDropProperties","dragDropModel","numberOfColumns","MaxNumberOfColumns","MinNumberOfColumns","initConfigurationEditFromScratch","initProxyModel","collapseAllGroupControl","allExceptThisGroupIndex","resetToZeroModel","splice","countConfigurationModelLines","setActiveLineNumber","lineNumber","upThisLine","indexLine","currentLineObj","downThisLine","removeThisLine","index","increaseNumberOfColumns","newNumberOfColumns","decreaseNumberOfColumns","indexColumn","saveThisForm","formName","clear","nyaSelect","initNyaSelect","animationsEnabled","showModalAddCtrlToColumn","size","numcolumn","modalInstance","animation","templateUrl","resolve","getNyASelectFromSelectedLineColumn","result","then","modalAddCtrlModel","bindConfigurationModelFromModalReturn","Date","dragoverCallbackContainer","parentparentIndex","parentIndex","dropCallback","event","item","external","allowedType","isArray","timerRefreshDDToConfig","refreshAllConfigurationFromDragAndDropModel","refreshControlsKeys","$on","cancel","dndItemMoved","parentParentIndex","itemIndex","dragoverCallbackItems","ParentParentIndex","disableItemDropIf","dropCallbackItems","realIndex","parentParentParentIndex","setUnRightClicked","editPanelModel","toggle","saveFromEditPanel","bindSpecialCtrlTemporyModelsToProxyModel","bindConfigurationModelFromProxyModel","getEditPanelModelLineIndex","getEditPanelModelColumnIndex","setEditPanelModelToggle","getEditPanelModelToggle","resetAllDragDropItemSelectedState","closeEditPanel","debugProxyModel","ProxyModel","setRightClicked","previousState","rightCliked","toggleEditPanel","lineIndex","colIndex","getEditPanelModelControl","equals","timerCloseOpenedEditPanel","setEditPanelModelLineIndex","setEditPanelModelColumnIndex","setEditPanelModelControl","setProxyModelFromConfigurationSelection","insertNewLine","$modalInstance","selectOptionManage","bindRadioFromNYA","newOption","option","order","radioRowCollection","rows","bindRadioToNya","resetNyASelectOptions","bindBasicSelectFromNYA","basicSelectRowCollection","bindBasicSelectToNya","bindGroupedSelectFromNYA","groupedSelectRowCollection","filteredgroup","_","uniq","pluck","GroupedSelectGroups","list","bindGroupedSelectToNya","initDatePicker","demodt","formats","resetTemporyConfig","initOptionModel","newOptionRadio","saisie","addNewOptionRadio","resultFlag","details","removeRadioRow","removeOption","upThisRadioRow","upthisOption","downThisRadioRow","downthisOption","newOptionBasicSelect","addNewOptionBasicSelect","removeRow","upThisRow","downThisRow","newOptionGroupedSelect","newGroupGroupedSelect","groupSelectGroupClick","showList","showGroupListToChoose","addNewGroupToGroupedSelect","addNewOptionGroupedSelect","removeGroupedSelectRow","upThisGroupedSelectRow","downThisGroupedSelectRow","today","dt","dateOptions","formatYear","startingDay","showWeeks","initDate","modelNyaSelect","selectThisControl","controlName","ok","applyConfigToSelectedControl","close","dismiss","self","proxyModel","resetAllTemporyModels","modelproxyModel","bindBasicSelectFromProxyModel","bindGroupedSelectFromProxyModel","bindRadioFromProxyModel","updateSpecialControl","resetControl","directive","dragDropItemCounterService","valueWhenPlaceholder","valueWhendragging","fullModel","currentIndex","forceRefresh","restrict","link","element","timer","$watch","children","newValue","oldValue","newRealCount","listClassForThisRow","isHtmlElementToCount","classList","isReal","contentRealCount","updateLineItemCss","warn","htmlTemplate","styleParam","isStillCollapsed","collpaseAll","transclude","isEnabled","collapseFct","exceptThisOne","icons","closedClass","currentIconClass","attrs","ctrl","verboseModeActive","verbose","lowercase","dir","whoAmI","verbodeMode","$parent","$index","ParentIndex","columnindex","newVal","oldVal","currentTitle","contentClone","childDiv","append","addNewLineFct","headerConfig","HeaderButtonVisible","affixAttr","affixEnabled","currentFontAwesome","lineItemsCount","listClass","css","removeClass","addClass","removeLine","deleteLine","readyToDelete","dblClickCount","removeMe","cancelDelete","on","edaDragDropWayEasyFormGen","linkFct","returnAttributeConfigurationLinesIfNotEmpty","edaEasyFormGeneratorModelToReturn","edaEasyFormGeneratorModel","edaFieldsModel","emptyEdaFieldsModel","emptyModel","returnAttributeDataModelIfNotEmpty","dataModelToReturn","dataModel","watchEdaEasyFormModelExpression","watchEdaEasyFormModelHasChanged","loadExistingConfigurationModel","watchReturnSaveEventExpression","returnSaveEvent","watchReturnSaveEventhasChanged","_easyFormGeneratorModel","btnSubmitText","btnCancelText","edaFieldsModelStringified","toJson","formlyFieldsModel","edaSaveFormEvent","isDefined","configlines","configurationLoaded","bindConfigurationLines","loadDragDropModelFromConfigurationModel","updateConfigurationClassName","loaded one","bound one","isString","configModel","aline","cssClassToApply","aControl","edaDragDropWayEasyFormGenCtrl","controllerAs","$parse","fn","edaRightClick","columnIndex","edaRightClickColIndex","fctSetRightclicked","edaSetRightClicked","$apply","ratio","factory","_modelItemRealCounter","_itemsNotToCount","getModelItemsRealCounter","htmlvalue","isToCount","classes","listCssToApply","columIndex","realCount","j","dragDropModelItem","_listItemClass","getListClass","getCssClassWhenNumberItemsInRowIs","thisNumber","applyCssClassWholeLine","numberItems","restrictToThisIndexColumn","updateCssClassWholeColumn","cpt","EasyFormGenFormlyBindingModels","getFormlyDetailedControlModelFromDragDropObject","dragDrapCtrlModel","controlModel","listControl","controlsListGetter","ctrlListValue","validKeyUniqueness","thisKey","configurationObj","isUnique","createUniqueKey","baseKeyValue","newKey","now","applyThisLine","linevalue","aLineValue","aLineKey","bindConfigCtrlModelFromFormlyDetailedCtrlModel","formlyDetailCtrlModel","configurationCtrlModel","assign","ddModel","lineValue","keyValue","colValue","controlToBind","formlyDetailedControlModel","configModelControl","newClassName","aConfigLine","aConfigLineIndex","aConfigControl","aConfigControlIndex","dragdropControlRef","groupOfCtrlRef","groupOfCtrlRefIndex","aCtrlref","aCtrlRefIndex","ddControlToUpdate","resetNyaSelect","nyaSelectObj","newNyaSelectObj","resetProxyModel","newProxyModel","returnControlFromAddCtrlModalModel","CtrlModalModel","modelToReturn","getSelectedProxyModel","configurationSelectedCtrl","selectedProxyModelControl","listProxyModelCTRL","subtype","extractedProps","edited","thisProxyModelToInit","getProxyModel","getEditPanelModelAllModel","newEditPanelModel","successfullDone","newColumnIndex","newLineIndex","newControl","newToggleValue","bindBasicSelectToProxyModel","bindGroupedSelectToProxyModel","bindRadioToProxyModel","resetproxyModelOptions","resetFormlyModel","formlyModel","resetformly","AddNColumnControl","configurationModel","indexFormlyModel","fieldGroup","column","controlTemplate","headerTextContent","resetDataModel","obj","emptyDataModel","getErrorObject","errorTitle","errorMessage","messageObj","noError","Message","getMessageObject","messageTitle","messageBody","configurationModelInit","Object","prototype","toString","call","configurationModelResult","formlyDataModel","$resource","validOption","selectObj","newOptionText","fullResponse","resetModel","zeroModel","testMe","initModel","isOptionUnique","textValue","isOptionValidFormat","checkResult","newOptionGroup","AtIndex","indexOption","currentOption","filter","$sce","trustAs","dndDropEffectWorkaround","dndDragTypeWorkaround","dndDisableIf","disabled","originalEvent","dataTransfer","setData","$eval","dndDraggable","effectAllowed","dndEffectAllowed","dropEffect","isDragging","dragType","dndType","undefined","dndDragstart","dndMoved","dndCopied","dndSelected","dragDrop","isMouseInFirstHalf","targetNode","relativeToParent","mousePointer","horizontal","offsetX","layerX","offsetY","layerY","targetSize","offsetWidth","offsetHeight","targetPosition","offsetLeft","offsetTop","getPlaceholderIndex","Array","indexOf","listNode","placeholderNode","isDropAllowed","externalSources","hasTextMimetype","types","dndAllowedTypes","allowed","stopDragover","remove","invokeCallback","expression","dndHorizontalList","dndExternalSources","parentNode","target","listItemNode","insertBefore","nextSibling","previousElementSibling","nextElementSibling","dndDragover","transferredObject","data","getData","JSON","parse","e","dndDrop","targetArray","dndList","ctrlKey","hasClass","psOpen","psAutoClose","psSide","psSpeed","psClass","psSize","psSqueeze","psCloak","psPush","psContainer","el","psClose","slider","param","style","width","cloak","content","side","squeeze","right","left","height","top","bottom","setTimeout","speed","zindex","Boolean","container","document","getElementById","tagName","Error","appendChild","zIndex","position","overflow","transitionDuration","webkitTransitionDuration","transitionProperty","psCustomHeight","psCustomTop","psCustomBottom","psCustomRight","psCustomLeft","psCustomWidth","removeChild"],"mappings":"CAOE,WACA,YAkDA,SAASA,GAAOC,GAsBd,QAASC,KACR,OACI,6BAGA,4CACO,4CACA,6CACA,aAGP,8CACO,0EACA,6CACA,aAEP,UACCC,KAAK,IAQX,QAASC,KACR,OACI,oCACA,+BAEA,yBACA,mCACA,4FACA,kBACA,eAGA,yBACA,mCACA,0EACA,kBACA,cACA,YACAC,EACA,UACCF,KAAK,IAQX,QAASG,KACR,OACQ,oCACA,+BAEA,wBACA,kCACA,sGACA,iBACA,cAGA,8CAEA,wBACA,uCACA,iCAEA,iIACA,+BACA,2LACA,uBAEA,gBACA,qBACA,aAEA,WACAD,EACA,WACEF,KAAK,IAQjB,QAASI,KACR,OACM,oCACA,+BAEA,wBACA,kCACA,sGACA,iBACA,cAGA,8CAEA,wBACA,uCAEA,iCAEA,mIACA,+BACA,+LACA,uBAEA,gBAEA,qBACA,aAEA,WACAF,EACA,WACCF,KAAK,IAQb,QAASK,KACR,OACK,oCACA,+BAEA,wBACA,kCACA,sGACA,iBACA,cAGA,8CAGA,wBACA,uCAEA,iCAES,2HACA,+BACA,uLACA,uBAET,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,iCAES,iIACA,+BACA,sMACA,uBAET,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,wBAES,oIACA,uCACA,kEACA,gIACA,uBAET,gBAEA,qBACA,aAGA,8CAGA,wBACA,uCAEA,iCAES,iIACA,+BACA,gMACA,uBAET,gBAEA,qBACA,aAGA,WACAH,EACA,WACCF,KAAK,IAQZ,QAASM,KACR,OACM,oCACA,+BAEA,wBACA,kCACA,sGACA,iBACA,cAGA,8CAGA,wBACA,uCAEA,iCAEU,2HACA,+BACA,uLACA,uBAEV,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,iCAEU,wHACA,+BACA,sMACA,uBAEV,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,wBAEU,2HACA,uCACA,kEACA,uHACA,uBAEV,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,iCAEU,wHACA,+BACA,uLACA,uBAEV,gBAEA,qBACA,aAGA,WACAJ,EACA,WACCF,KAAK,IAQb,QAASO,KACR,OACK,oCACA,+BAEA,wBACA,kCACA,sGACA,iBACA,cAGA,8CAGS,uFACA,uBACA,4JACA,6GACA,oCACA,kBACA,gBACA,eAGT,8CAGA,wBACA,uCAEA,iCAES,2HACA,+BACA,uLACA,uBAET,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,wBAES,2HACA,uCACA,kEACA,uHACA,uBAET,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,iCAES,wHACA,+BACA,uLACA,uBAET,gBAEA,qBACA,aAGA,WACAL,EACA,WACCF,KAAK,IAQZ,QAASQ,KACR,OACK,oCACA,+BAEA,wBACA,kCACA,sGACA,iBACA,cAGA,8CAGA,wBACA,uCAEA,iCAES,2HACA,+BACA,uLACA,uBAET,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,wBAES,2HACA,uCACA,kEACA,uHACA,uBAET,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,iCAES,wHACA,+BACA,uLACA,uBAET,gBAEA,qBACA,aAGA,WACAN,EACA,WACCF,KAAK,IAQZ,QAASS,KACR,OACK,oCACA,+BAEA,wBACA,kCACA,sGACA,iBACA,cAGA,8CAGA,wBACA,uCAEA,iCAES,wHACA,+BACA,uLACA,uBAET,gBAEA,qBACA,aAGA,WACAP,EACA,WACCF,KAAK,IAQZ,QAASU,KACR,OACK,oCACA,+BAEA,wBACA,kCACA,sGACA,iBACA,cAIA,8CAGS,sBACA,0CACA,sHACA,cACA,WACA,sBACA,cACA,qCACA,kEACA,wJACA,uBACA,kEACA,sGACA,uBACA,mBACA,eACA,WACA,sBACA,0CACA,0HACA,cACA,WACA,sBACA,oCAEA,sEACA,4CACA,mFACA,+GACA,iCACA,6GACA,oCACA,iCACA,6DACA,8DACA,wDACA,kCACA,iCACA,wDACA,mDACA,gJACA,sCACA,wDACA,kCACA,qCACA,sCACA,4HACA,sEACA,+EACA,uDACA,iEACA,4JACA,oKACA,2JACA,gDACA,0CACA,sCACA,qCACA,iCACA,2BACA,uBAEA,kBACA,WAGT,8CAGA,wBACA,uCAEA,iCAES,2HACA,+BACA,uLACA,uBAET,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,wBAES,2HACA,uCACA,kEACA,uHACA,uBAET,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,iCAES,wHACA,+BACA,uLACA,uBAET,gBAEA,qBACA,aAGA,WACAR,EACA,WACCF,KAAK,IAQZ,QAASW,KACR,OACK,oCACA,+BAEA,wBACA,kCACA,sGACA,iBACA,cAGA,8CAGA,wBACA,uCAEA,iCAES,2HACA,+BACA,uLACA,uBAET,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,wBAES,2HACA,uCACA,kEACA,uHACA,uBAET,gBAEA,qBACA,aAEA,8CAGA,wBACA,uCAEA,iCAES,wHACA,+BACA,uLACA,uBAET,gBAEA,qBACA,aAGA,WACAT,EACA,WACCF,KAAK,IAQZ,QAASY,KACR,OACK,oCACA,+BAEA,wBACA,kCACA,sGACA,iBACA,cAGA,8CAIS,sBACA,0CACA,8HACA,cACA,WACA,sBACA,cACA,qCACA,kEACA,+JACA,uBACA,kEACA,4GACA,uBACA,mBACA,eACA,WAGA,qBACA,0CACA,oGACA,cACA,WACA,sBACA,oCACA,kEACA,wCACA,mFACA,uGACA,2BACA,+GACA,gCACA,6BACA,yDACA,0DACA,oDACA,8BACA,6BACA,oDACA,+CACA,wJACA,kCACA,oDACA,8BACA,iCACA,gCACA,4IACA,8DACA,6EACA,+CACA,yDACA,6IACA,iJACA,4IACA,wCACA,kCACA,8BACA,iCACA,6BACA,uBACA,mBACA,kBACA,WAGA,4CAGT,wBACA,uCACA,iCACS,wHACA,+BACA,uLACA,uBACT,gBACA,qBACA,aAEA,WACAV,EACA,WACCF,KAAK,IAQZ,QAASa,KACR,OACK,oCACA,+BAEA,wBACA,kCACA,sGACA,iBACA,cAGA,8CAGS,sBACA,0CACA,+HACA,cACA,WACA,sBACA,cACA,qCACA,kEACA,mKACA,uBACA,kEACA,8GACA,uBACA,kBACA,eACA,YAGA,sBACA,0CACA,+HACA,cACA,WACA,sBACA,cACA,qCACA,kEACA,kNACA,uBACA,kEACA,+GACA,uBACA,mBACA,eACA,WAGA,sBACA,0CACA,0GACA,cACA,WACA,sBACA,oCACA,kEACA,wCACA,qFACA,uGACA,2BACA,iHACA,gCACA,6BACA,yDACA,yDACA,0DACA,oDACA,8BACA,6BACA,oDACA,oDACA,+CACA,oJACA,kCACA,oDACA,8BACA,iCACA,gCACA,oJACA,8DACA,+CACA,4FACA,0FACA,4FACA,uCACA,wFACA,uMACA,4FACA,iKACA,sEACA,4CACA,0CACA,uCACA,uCACA,6FACA,2DACA,uCACA,kCACA,+EACA,+CACA,yDACA,4JACA,gKACA,6JACA,2JACA,wCACA,kCACA,8BACA,iCACA,6BACA,uBACA,mBACA,kBACA,WAGT,8CAGA,wBACA,uCAEA,iCAES,wHACA,+BACA,uLACA,uBAET,gBAEA,qBACA,aAGA,WACAX,EACA,WACCF,KAAK,IA3gCV,GAAIE,GAAkBH,GACtBD,GAAegB,IAAI,+BAAgCb,KACnDH,EAAegB,IAAI,gCAAiCX,KACpDL,EAAegB,IAAI,kCAAmCV,KACtDN,EAAegB,IAAI,mCAAoCT,KACvDP,EAAegB,IAAI,kCAAoCR,KACvDR,EAAegB,IAAI,8BAA+BP,KAClDT,EAAegB,IAAI,kCAAmCN,KACtDV,EAAegB,IAAI,wCAAyCL,KAC5DX,EAAegB,IAAI,+BAAgCJ,KACnDZ,EAAegB,IAAI,kCAAmCH,KACtDb,EAAegB,IAAI,qCAAsCF,KACzDd,EAAegB,IAAI,uCAAwCD,KA9ChEE,QACGC,OAAO,+BAAgC,WAG1CD,QACGC,OAAO,UACc,mBACZ,qBACA,kBACA,iBACA,oBACA,cACA,mBACA,YACA,UACA,SACA,kBACA,eACA,uBACY,WACA,uBACA,wBAGrBC,MAAM,qBAAsB,WAC5BC,IAAIrB;AAILA,EAAOsB,SAAW,kBAiiCpBJ,QACEC,OAAO,UACPI,QAAQ,yBAET,SAAUC,GAEPA,EAAuBC,oBAEqBC,iBAAsB,y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","file":"eda.dragdropway.min.js","sourcesContent":["/** \n  *easyFormGenerator — drag and drop way — version \n  *Version 1.0.33 \n  *Author : Erwan Datin (MacKentoch) \n  *Link: https://github.com/MacKentoch/easyFormGenerator \n  *License : MIT (2015) \n **/ \n ;(function(){\n \t'use strict';\n/// <reference path=\"../../../typings/lodash/lodash.d.ts\"/>\n/// <reference path=\"../../../typings/angularjs/angular.d.ts\"/>\n/**\n *  -----------------------------------------------------------------------\n *  application module of the drag and drop version of easy form generator\n *  -----------------------------------------------------------------------\n *\n *  This version is not finished and is under heavy developments\n *  \n *   \n *     - do not use as production -\n *\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n  //alias module to distinguish the drag and drop way\nangular\n  .module('eda.easyformGen.dragdropway', ['edaApp']);\n\n\nangular\n  .module('edaApp', [\n                        'edaApp.providers',\t\n\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.controllers',\n\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.services', \n\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.filters',\n\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.directives',\n\t\t\t\t\t\t\t\t\t\t\t\t'textAngular',\n\t\t\t\t\t\t\t\t\t\t\t\t'textAngularSetup',\n\t\t\t\t\t\t\t\t\t\t\t\t'ngAnimate',\n\t\t\t\t\t\t\t\t\t\t\t\t'toaster',\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t'formly', \n\t\t\t\t\t\t\t\t\t\t\t\t'formlyBootstrap',\n\t\t\t\t\t\t\t\t\t\t\t\t'ui.bootstrap',\n\t\t\t\t\t\t\t\t\t\t\t\t'nya.bootstrap.select',\n                        'dndLists',\n                        'mgcrea.ngStrap.affix',\n                        'pageslide-directive'\n\t                     ])\n\n  .value('easyFormGenVersion', 'v1.0.33')\n  .run(runfct);\n\n\n\n  runfct.$inject = ['$templateCache'];\n  function runfct($templateCache){\n\t\t\n\t\t\n  \t\t\n  \t\t var validEditFooter = validEditFooterTpl();\n  \t\t $templateCache.put('editPanelBlankCtrl-tpls.html', editPanelBlankCtrlTpls());\n  \t\t $templateCache.put('editPanelHeaderCtrl-tpls.html', editPanelHeaderCtrlTpl());\n  \t\t $templateCache.put('editPanelSubTitleCtrl-tpls.html', editPanelSubTitleCtrlTpl());\n  \t\t $templateCache.put('editPanelTextInputCtrl-tpls.html', editPanelTextInputCtrlTpl());\n  \t\t $templateCache.put('editPanelPasswordCtrl-tpls.html', \teditPanelPasswordCtrlTpl());\n  \t\t $templateCache.put('editPanelDateCtrl-tpls.html', editPanelDateCtrlTpl());\t\n  \t\t $templateCache.put('editPanelTextareaCtrl-tpls.html', editPanelTextareaCtrlTpl());\n  \t\t $templateCache.put('editPanelRichTextEditorCtrl-tpls.html', editPanelRichTextEditorCtrlTpl());\n  \t\t $templateCache.put('editPanelRadioCtrl-tpls.html', editPanelRadioCtrlTpl());\n  \t\t $templateCache.put('editPanelCheckboxCtrl-tpls.html', editPanelCheckboxCtrlTpl());\n  \t\t $templateCache.put('editPanelBasicSelectCtrl-tpls.html', editPanelBasicSelectCtrlTpl());\n  \t\t $templateCache.put('editPanelGroupedSelectCtrl-tpls.html', editPanelGroupedSelectCtrlTpl());\n\n  \t\t/**\n  \t\t * commun to all control edit templates\n  \t\t *  -> footer valid button\n  \t\t */\n  \t\tfunction validEditFooterTpl() {\n  \t\t\treturn\t[\n\t\t\t\t\t\t\t\t\t'<div class=\"modal-footer\">',\n\n\t\t\t\t\t\t\t\t\t//reset button\n\t\t\t\t\t\t\t\t\t'\t<button class=\"btn btn-danger pull-left\"',\n\t\t              '\t        ng-click=\"panel.resetControl()\">',\n\t\t              ' \t<i class=\"fa fa-refresh\"></i>&nbsp;Reset',\n\t\t              ' </button>',\n\n\t\t\t\t\t\t\t\t\t//save button\n\t\t\t\t\t\t\t\t\t'\t<button class=\"btn btn-success pull-right\"',\n\t\t              '\t        ng-click=\"panel.updateSpecialControl(); saveFromEditPanel();\">',\n\t\t              ' \t<i class=\"fa fa-floppy-o\"></i>&nbsp;Save',\n\t\t              ' </button>',\n\t\t              //\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t'</div>'\n\t\t\t\t\t\t\t\t].join('');\n  \t\t} \n\n\t\t\t/**\n  \t\t * register template cache for side edit control panel\n  \t\t * \n  \t\t * control : \"blank\"\n  \t\t */\n  \t\tfunction editPanelBlankCtrlTpls() {\n  \t\t\treturn\t[\n\t\t\t\t\t\t\t\t\t'<div class=\"panel panel-default\">',\n\t\t\t\t\t\t\t\t\t'    <div class=\"panel-body\">',\n\n\t\t\t\t\t\t\t\t\t'\t    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'\t        <div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t'\t            <h5 class=\"greyText\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp; Edit :</h5>',\n\t\t\t\t\t\t\t\t\t'\t        </div>',\n\t\t\t\t\t\t\t\t\t'\t    </div> ',\n\t\t\t\t\t\t\t\t\t//'\t    <hr/>',\n\n\t\t\t\t\t\t\t\t\t'\t    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'\t        <div class=\"col-sm-12\">',\n\t\t\t\t\t\t\t\t\t'\t            <h5 class=\"text-center greyText\">Column will be blank</h5>',\n\t\t\t\t\t\t\t\t\t'\t        </div>',\n\t\t\t\t\t\t\t\t\t'\t    </div>',\n\t\t\t\t\t\t\t\t\t'   </div>',\n\t\t\t\t\t\t\t\t\tvalidEditFooter,\n\t\t\t\t\t\t\t\t\t'</div>'\n\t\t\t\t\t\t\t\t].join('');\n\t\t\t}\n\n  \t\t/**\n  \t\t * register template cache for side edit control panel\n  \t\t * \n  \t\t * control : \"Header\"\n  \t\t */\n  \t\tfunction editPanelHeaderCtrlTpl(){\n  \t\t\treturn   \t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t'<div class=\"panel panel-default\">',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'    <div class=\"panel-body\">',\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'        <div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'            <h5 class=\"greyText\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp; Edit properties :</h5>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'        </div>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'    </div> ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t//'    <hr/>',\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t'              <label for=\"inputTextDescriptionUpdate\" class=\"control-label greyText editPropertiesLabel\">Header text :</label>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'              <div class=\"\">',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyDesciption\" id=\"inputHeaderTextUpdate\" placeholder=\"Add / edit header text here\">',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'              </div>',\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'    </div>',\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t'  </div>',\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidEditFooter,\n\t\t\t\t\t\t\t\t\t\t\t\t\t'</div> '\n  \t\t\t\t\t\t\t\t\t\t\t].join('');\n  \t\t}  \n\n\t \t\t/**\n\t\t\t * register template cache for side edit control panel\n\t\t\t * \n\t\t\t * control : \"SubTitle\"\n\t\t\t */\n\t\t\tfunction editPanelSubTitleCtrlTpl(){\n\t\t\t\treturn \t[\n\t\t\t\t\t\t\t\t\t\t'<div class=\"panel panel-default\">',\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"panel-body\">',\n\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t\t'        <div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t\t'            <h5 class=\"greyText\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp; Edit properties :</h5>',\n\t\t\t\t\t\t\t\t\t\t'        </div>',\n\t\t\t\t\t\t\t\t\t\t'    </div> ',\n\t\t\t\t\t\t\t\t\t\t//'    <hr/>',\n\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n\t\t\t\t\t\t\t\t\t\t'              <label for=\"inputTextDescriptionUpdate\" class=\"control-label greyText editPropertiesLabel\">Subtitle text :</label>',\n\t\t\t\t\t\t\t\t\t\t'              <div class=\"\">',\n\t\t\t\t\t\t\t\t\t\t'                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyDesciption\" id=\"inputSubtitleTextUpdate\" placeholder=\"Add / edit subtitle text here\">',\n\t\t\t\t\t\t\t\t\t\t'              </div>',\n\n\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t\t'    </div>',\n\n\t\t\t\t\t\t\t\t\t\t'  </div>',\n\t\t\t\t\t\t\t\t\t\tvalidEditFooter,\n\t\t\t\t\t\t\t\t\t\t'</div> '\n\t\t\t\t\t\t\t\t\t].join('');\n\t\t\t} \n\n\t \t\t/**\n\t\t\t * register template cache for side edit control panel\n\t\t\t * \n\t\t\t * control : \"TextInput\"\n\t\t\t */\n\t\t\tfunction editPanelTextInputCtrlTpl(){\n\t\t\t\treturn \t[\n\t\t\t\t\t\t\t\t\t'<div class=\"panel panel-default\">',\n\t\t\t\t\t\t\t\t\t'    <div class=\"panel-body\">',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'        <div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t'            <h5 class=\"greyText\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp; Edit properties :</h5>',\n\t\t\t\t\t\t\t\t\t'        </div>',\n\t\t\t\t\t\t\t\t\t'    </div> ',\n\t\t\t\t\t\t\t\t\t//'    <hr/>',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//label text\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"inputTextLabelUpdate\" class=\" control-label greyText editPropertiesLabel\">Label text :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyLabel\" id=\"inputTextLabelUpdate\" placeholder=\"Add / edit control label here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//placeholder\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"inputTextplaceholderUpdate\" class=\"control-label greyText editPropertiesLabel\">placeholder :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyPlaceholder\" id=\"inputTextplaceholderUpdate\" placeholder=\"Add / edit placeholder text here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\t\t\t\t\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//required\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"\">',\n\n                  '              <label for=\"inputTextRequiredUpdate\" class=\"col-md-4 control-label greyText editPropertiesLabel\">Required :</label>',\n                  '              <div class=\"col-md-8\">',\n                  '                <div class=\"checkboxCssCorrection\">&nbsp;</div>',\n                  '                <input type=\"checkbox\" ng-model=\"panel.proxyModel.temporyConfig.formlyRequired\" id=\"inputTextRequiredUpdate\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//description\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"inputTextDescriptionUpdate\" class=\"control-label greyText editPropertiesLabel\">Description :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyDesciption\" id=\"inputTextDescriptionUpdate\" placeholder=\"Add / edit description here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\n\t\t\t\t\t\t\t\t\t'  </div>',\n\t\t\t\t\t\t\t\t\tvalidEditFooter,\n\t\t\t\t\t\t\t\t\t'</div> '\n\t\t\t\t\t\t\t\t].join('');\n\t\t\t}\n\n\t \t\t/**\n\t\t\t * register template cache for side edit control panel\n\t\t\t * \n\t\t\t * control : \"Password\"\n\t\t\t */\n\t\t\tfunction editPanelPasswordCtrlTpl(){\n\t\t\t\treturn [\n\t\t\t\t\t\t\t\t\t\t'<div class=\"panel panel-default\">',\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"panel-body\">',\n\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t\t'        <div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t\t'            <h5 class=\"greyText\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp; Edit properties :</h5>',\n\t\t\t\t\t\t\t\t\t\t'        </div>',\n\t\t\t\t\t\t\t\t\t\t'    </div> ',\n\t\t\t\t\t\t\t\t\t\t//'    <hr/>',\n\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t\t//label text\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                    '              <label for=\"inputTextLabelUpdate\" class=\" control-label greyText editPropertiesLabel\">Label text :</label>',\n                    '              <div class=\"\">',\n                    '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyLabel\" id=\"inputTextLabelUpdate\" placeholder=\"Add / edit control label here\">',\n                    '              </div>',\n\n\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t\t'    </div>',\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t\t//placeholder\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                    '              <label for=\"placeholderUpdate\" class=\"control-label greyText editPropertiesLabel\">placeholder :</label>',\n                    '              <div class=\"\">',\n                    '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyPlaceholder\" id=\"inputTextplaceholderUpdate\" placeholder=\"Add / edit placeholder text here\">',\n                    '              </div>',\n\n\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t\t'    </div>',\t\t\t\t\t\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t\t//required\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"\">',\n\n                    '              <label for=\"RequiredUpdate\" class=\"col-md-4 control-label greyText editPropertiesLabel\">Required :</label>',\n                    '              <div class=\"col-md-8\">',\n                    '                <div class=\"checkboxCssCorrection\">&nbsp;</div>',\n                    '                <input type=\"checkbox\" ng-model=\"panel.proxyModel.temporyConfig.formlyRequired\" id=\"RequiredUpdate\">',\n                    '              </div>',\n\n\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t\t//description\n\t\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                    '              <label for=\"DescriptionUpdate\" class=\"control-label greyText editPropertiesLabel\">Description :</label>',\n                    '              <div class=\"\">',\n                    '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyDesciption\" id=\"DescriptionUpdate\" placeholder=\"Add / edit description here\">',\n                    '              </div>',\n\n\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\n\t\t\t\t\t\t\t\t\t\t'  </div>',\n\t\t\t\t\t\t\t\t\t\tvalidEditFooter,\n\t\t\t\t\t\t\t\t\t\t'</div> '\n\t\t\t\t\t\t\t\t\t].join('');\n\t\t\t} \n\n\t \t\t/**\n\t\t\t * register template cache for side edit control panel\n\t\t\t * \n\t\t\t * control : \"Date\"\n\t\t\t */\n\t\t\tfunction editPanelDateCtrlTpl(){\n\t\t\t\treturn \t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t'<div class=\"panel panel-default\">',\n\t\t\t\t\t\t\t\t\t'    <div class=\"panel-body\">',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'        <div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t'            <h5 class=\"greyText\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp; Edit properties :</h5>',\n\t\t\t\t\t\t\t\t\t'        </div>',\n\t\t\t\t\t\t\t\t\t'    </div> ',\n\t\t\t\t\t\t\t\t\t//'    <hr/>',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//date format\n                  '     <label class=\"control-label greyText editPropertiesLabel\">Date format :</label>',\n                  '      <div class=\"\">',\n                  '        <ol class=\"nya-bs-select col-sm-12 col-xs-12 col-md-12 col-lg12\" ng-model=\"panel.proxyModel.temporyConfig.datepickerPopup\" id=\"dateformatSelect\">',\n                  '          <li class=\"nya-bs-option\" nya-bs-option=\"dateformat in panel.demodt.formats\" value=\"dateformat\">',\n                  '            <a>{{dateformat}}</a>',\n                  '          </li>',\n                  '        </ol>',\n                  '      </div>',\n\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//label text\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"inputTextLabelUpdate\" class=\" control-label greyText editPropertiesLabel\">Label text :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyLabel\" id=\"inputTextLabelUpdate\" placeholder=\"Add / edit control label here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//required\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"\">',\n\n                  '              <label for=\"RequiredUpdate\" class=\"col-md-4 control-label greyText editPropertiesLabel\">Required :</label>',\n                  '              <div class=\"col-md-8\">',\n                  '                <div class=\"checkboxCssCorrection\">&nbsp;</div>',\n                  '                <input type=\"checkbox\" ng-model=\"panel.proxyModel.temporyConfig.formlyRequired\" id=\"RequiredUpdate\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//description\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"DescriptionUpdate\" class=\"control-label greyText editPropertiesLabel\">Description :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyDesciption\" id=\"DescriptionUpdate\" placeholder=\"Add / edit description here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\n\t\t\t\t\t\t\t\t\t'  </div>',\n\t\t\t\t\t\t\t\t\tvalidEditFooter,\n\t\t\t\t\t\t\t\t\t'</div> '\n\t\t\t\t\t\t\t\t].join('');\n\t\t\t}\n\n\t \t\t/**\n\t\t\t * register template cache for side edit control panel\n\t\t\t * \n\t\t\t * control : \"Textarea\"\n\t\t\t */\n\t\t\tfunction editPanelTextareaCtrlTpl(){\n\t\t\t\treturn \t[\n\t\t\t\t\t\t\t\t\t'<div class=\"panel panel-default\">',\n\t\t\t\t\t\t\t\t\t'    <div class=\"panel-body\">',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'        <div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t'            <h5 class=\"greyText\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp; Edit properties :</h5>',\n\t\t\t\t\t\t\t\t\t'        </div>',\n\t\t\t\t\t\t\t\t\t'    </div> ',\n\t\t\t\t\t\t\t\t\t//'    <hr/>',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//label text\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"inputTextLabelUpdate\" class=\" control-label greyText editPropertiesLabel\">Label text :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyLabel\" id=\"inputTextLabelUpdate\" placeholder=\"Add / edit control label here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//required\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"\">',\n\n                  '              <label for=\"RequiredUpdate\" class=\"col-md-4 control-label greyText editPropertiesLabel\">Required :</label>',\n                  '              <div class=\"col-md-8\">',\n                  '                <div class=\"checkboxCssCorrection\">&nbsp;</div>',\n                  '                <input type=\"checkbox\" ng-model=\"panel.proxyModel.temporyConfig.formlyRequired\" id=\"RequiredUpdate\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//description\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"DescriptionUpdate\" class=\"control-label greyText editPropertiesLabel\">Description :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyDesciption\" id=\"DescriptionUpdate\" placeholder=\"Add / edit description here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\n\t\t\t\t\t\t\t\t\t'  </div>',\n\t\t\t\t\t\t\t\t\tvalidEditFooter,\n\t\t\t\t\t\t\t\t\t'</div> '\n\t\t\t\t\t\t\t\t].join('');\n\t\t\t} \n\n\t \t\t/**\n\t\t\t * register template cache for side edit control panel\n\t\t\t * \n\t\t\t * control : \"RichTextEditor\"\n\t\t\t */\n\t\t\tfunction editPanelRichTextEditorCtrlTpl(){\n\t\t\t\treturn \t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t'<div class=\"panel panel-default\">',\n\t\t\t\t\t\t\t\t\t'    <div class=\"panel-body\">',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'        <div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t'            <h5 class=\"greyText\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp; Edit properties :</h5>',\n\t\t\t\t\t\t\t\t\t'        </div>',\n\t\t\t\t\t\t\t\t\t'    </div> ',\n\t\t\t\t\t\t\t\t\t//'    <hr/>',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//description\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"DescriptionUpdate\" class=\"control-label greyText editPropertiesLabel\">Description :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyDesciption\" id=\"DescriptionUpdate\" placeholder=\"Add / edit description here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\n\t\t\t\t\t\t\t\t\t'  </div>',\n\t\t\t\t\t\t\t\t\tvalidEditFooter,\n\t\t\t\t\t\t\t\t\t'</div> '\n\t\t\t\t\t\t\t\t].join('');\n\t\t\t}\n\n\t \t\t/**\n\t\t\t * register template cache for side edit control panel\n\t\t\t * \n\t\t\t * control : \"radio\"\n\t\t\t */\n\t\t\tfunction editPanelRadioCtrlTpl(){\n\t\t\t\treturn \t[\n\t\t\t\t\t\t\t\t\t'<div class=\"panel panel-default\">',\n\t\t\t\t\t\t\t\t\t'    <div class=\"panel-body\">',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'        <div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t'            <h5 class=\"greyText\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp; Edit properties :</h5>',\n\t\t\t\t\t\t\t\t\t'        </div>',\n\t\t\t\t\t\t\t\t\t'    </div> ',\n\t\t\t\t\t\t\t\t\t//'    <hr/>',\n\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//add options\n                  '  <div class=\"row\">',\n                  '      <div class=\"col-lg-12 col-md-12\">',\n                  '        <label for=\"radioRowCollection\" class=\" control-label greyText editPropertiesLabel\">Add new radio :</label>',\n                  '     </div>',\n                  '  </div>',\n                  '  <div class=\"row\">',\n                  '      <div>',\n                  '          <div class=\"form-group\">',\n                  '              <div class=\"col-sm-9 col-xs-9 col-md-9 col-lg-9\">',\n                  '              <input type=\"text\" class=\"form-control\" id=\"inputAddNewRadioOption\" placeholder=\"add new radio\" ng-model=\"panel.newOptionRadio.saisie\">',\n                  '              </div>',\n                  '              <div class=\"col-sm-3 col-xs-3 col-md-3 col-lg-3\">',\n                  '                  <button class=\"btn btn-primary\" ng-click=\"panel.addNewOptionRadio()\">add</button>',\n                  '              </div>',\n                  '          </div>',\n                  '      </div>',\n                  '  </div>',\n                  '  <div class=\"row\">',\n                  '      <div class=\"col-lg-12 col-md-12\">',\n                  '        <label for=\"radioRowCollection\" class=\" control-label greyText editPropertiesLabel\">Edit/Remove radio :</label>',\n                  '     </div>',\n                  '  </div>',\n                  '  <div class=\"row\">',\n                  '         <div class=\"form-group\">',\n\n                  '              <div class-\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">',\n                  '                  <div class=\"container\">',\n                  '                      <div ng-show=\"panel.radioRowCollection.rows.length === 0\">',\n                  '                          <h5 class=\"text-center greyText\"><em>- no radio : add new radio values -</em></h5>',\n                  '                      </div>  ',\n                  '                      <table ng-if=\"panel.radioRowCollection.rows.length > 0\" class=\"table table-striped\">',\n                  '                          <thead>',\n                  '                          <tr>',\n                  '                              <th st-ratio=\"20\">order</th>',\n                  '                              <th st-ratio=\"55\">option</th>',\n                  '                              <th st-ratio=\"25\"></th>',\n                  '                          </tr>',\n                  '                          <tr>',\n                  '                              <th st-ratio=\"20\"></th>',\n                  '                              <th st-ratio=\"55\">',\n                  '                                  <input ng-model=\"radioFilter\" placeholder=\"search for option\" class=\"input-sm form-control\" type=\"search\"/>',\n                  '                              </th>',\n                  '                              <th st-ratio=\"25\"></th>',\n                  '                          </tr>',\n                  '                          </thead>',\n                  '                          <tbody>  ',\n                  '                              <tr ng-repeat=\"radioRow in panel.radioRowCollection.rows | filter:radioFilter as radioRow\">',\n                  '                                  <td st-ratio=\"20\">{{$index}}</td>',\n                  '                                  <td st-ratio=\"55\">{{radioRow.option}}</td>',\n                  '                                  <td st-ratio=\"25\">',\n                  '                                      <div class=\"pull-right\">',\n                  '                                          <button class=\"btn btn-primary\" ng-click=\"panel.upThisRadioRow($index)\"><i class=\"fa fa-arrow-up\"></i></button>',\n                  '                                          <button class=\"btn btn-primary\" ng-click=\"panel.downThisRadioRow($index)\"><i class=\"fa fa-arrow-down\"></i></button>    ',\n                  '                                          <button class=\"btn btn-danger\"  ng-click=\"panel.removeRadioRow($index)\"><i class=\"fa fa-trash-o\"></i></button>',\n                  '                                       </div>',   \n                  '                                  </td>',\n                  '                              </tr>',\n                  '                          </tbody>',\n                  '                      </table>',\n                  '                  </div>',\n                  '              </div>',\n\n                  '         </div>',\n                  '  </div>',\n\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//label text\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"inputTextLabelUpdate\" class=\" control-label greyText editPropertiesLabel\">Label text :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyLabel\" id=\"inputTextLabelUpdate\" placeholder=\"Add / edit control label here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//required\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"\">',\n\n                  '              <label for=\"RequiredUpdate\" class=\"col-md-4 control-label greyText editPropertiesLabel\">Required :</label>',\n                  '              <div class=\"col-md-8\">',\n                  '                <div class=\"checkboxCssCorrection\">&nbsp;</div>',\n                  '                <input type=\"checkbox\" ng-model=\"panel.proxyModel.temporyConfig.formlyRequired\" id=\"RequiredUpdate\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//description\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"DescriptionUpdate\" class=\"control-label greyText editPropertiesLabel\">Description :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyDesciption\" id=\"DescriptionUpdate\" placeholder=\"Add / edit description here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\n\t\t\t\t\t\t\t\t\t'  </div>',\n\t\t\t\t\t\t\t\t\tvalidEditFooter,\n\t\t\t\t\t\t\t\t\t'</div> '\n\t\t\t\t\t\t\t\t].join('');\n\t\t\t} \n\n\t \t\t/**\n\t\t\t * register template cache for side edit control panel\n\t\t\t * \n\t\t\t * control : \"Checkbox\"\n\t\t\t */\n\t\t\tfunction editPanelCheckboxCtrlTpl(){\n\t\t\t\treturn \t[\n\t\t\t\t\t\t\t\t\t'<div class=\"panel panel-default\">',\n\t\t\t\t\t\t\t\t\t'    <div class=\"panel-body\">',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'        <div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t'            <h5 class=\"greyText\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp; Edit properties :</h5>',\n\t\t\t\t\t\t\t\t\t'        </div>',\n\t\t\t\t\t\t\t\t\t'    </div> ',\n\t\t\t\t\t\t\t\t\t//'    <hr/>',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//label text\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"inputTextLabelUpdate\" class=\" control-label greyText editPropertiesLabel\">Label text :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyLabel\" id=\"inputTextLabelUpdate\" placeholder=\"Add / edit control label here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//required\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"\">',\n\n                  '              <label for=\"RequiredUpdate\" class=\"col-md-4 control-label greyText editPropertiesLabel\">Required :</label>',\n                  '              <div class=\"col-md-8\">',\n                  '                <div class=\"checkboxCssCorrection\">&nbsp;</div>',\n                  '                <input type=\"checkbox\" ng-model=\"panel.proxyModel.temporyConfig.formlyRequired\" id=\"RequiredUpdate\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//description\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"DescriptionUpdate\" class=\"control-label greyText editPropertiesLabel\">Description :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyDesciption\" id=\"DescriptionUpdate\" placeholder=\"Add / edit description here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\n\t\t\t\t\t\t\t\t\t'  </div>',\n\t\t\t\t\t\t\t\t\tvalidEditFooter,\n\t\t\t\t\t\t\t\t\t'</div> '\n\t\t\t\t\t\t\t\t].join('');\n\t\t\t} \n\n\t \t\t/**\n\t\t\t * register template cache for side edit control panel\n\t\t\t * \n\t\t\t * control : \"Basic Select\"\n\t\t\t */\n\t\t\tfunction editPanelBasicSelectCtrlTpl(){\n\t\t\t\treturn \t[\n\t\t\t\t\t\t\t\t\t'<div class=\"panel panel-default\">',\n\t\t\t\t\t\t\t\t\t'    <div class=\"panel-body\">',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'        <div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t'            <h5 class=\"greyText\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp; Edit properties :</h5>',\n\t\t\t\t\t\t\t\t\t'        </div>',\n\t\t\t\t\t\t\t\t\t'    </div> ',\n\t\t\t\t\t\t\t\t\t//'    <hr/>',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t//add option input\n                  '  <div class=\"row\">',\n                  '      <div class=\"col-lg-12 col-md-12\">',\n                  '        <label for=\"basicSelectRowCollection\" class=\" control-label greyText editPropertiesLabel\">Add new options :</label>',\n                  '     </div>',\n                  '  </div>',\n                  '  <div class=\"row\">',\n                  '      <div>',\n                  '          <div class=\"form-group\">',\n                  '              <div class=\"col-sm-9 col-xs-9 col-md-9 col-lg-9\">',\n                  '              <input type=\"text\" class=\"form-control\" id=\"inputAddNewBasicOption\" placeholder=\"add new option\" ng-model=\"panel.newOptionBasicSelect.saisie\">',\n                  '              </div>',\n                  '              <div class=\"col-sm-3 col-xs-3 col-md-3 col-lg-3\">',\n                  '                  <button class=\"btn btn-primary\" ng-click=\"panel.addNewOptionBasicSelect()\">add</button>',\n                  '              </div>',\n                  '          </div>',\n                  '      </div>',\n                  '  </div>',                            \n\n                  //options table\n                  ' <div class=\"row\">',\n                  '      <div class=\"col-lg-12 col-md-12\">',\n                  '        <label  class=\" control-label greyText editPropertiesLabel\">Edit/Remove options :</label>',  \n                  '     </div>',\n                  '  </div>',\n                  '  <div class=\"row\">',\n                  '         <div class=\"form-group\">',\n                  '          <div class-\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">',\n                  '              <div class=\"container\">',\n                  '                  <div ng-if=\"panel.basicSelectRowCollection.rows.length === 0\">',\n                  '                      <h5 class=\"text-center greyText\"><em>- no option : add new options -</em></h5>',\n                  '                  </div>',  \n                  '                  <table ng-if=\"panel.basicSelectRowCollection.rows.length > 0\" class=\"table table-striped\">',\n                  '                      <thead>',\n                  '                      <tr>',\n                  '                          <th st-ratio=\"20\">order</th>',\n                  '                          <th st-ratio=\"55\">option</th>',\n                  '                          <th st-ratio=\"25\"></th>',\n                  '                      </tr>',\n                  '                      <tr>',\n                  '                          <th st-ratio=\"20\"></th>',\n                  '                          <th st-ratio=\"55\">',\n                  '                              <input ng-model=\"panel.basicSelectFilter\" placeholder=\"search for option\" class=\"input-sm form-control\" type=\"search\"/>',\n                  '                          </th>',\n                  '                          <th st-ratio=\"25\"></th>',\n                  '                      </tr>',\n                  '                      </thead>',\n                  '                      <tbody>',\n                  '                      <tr ng-repeat=\"basicSelectRow in panel.basicSelectRowCollection.rows | filter:basicSelectFilter as basicSelectRow\">',\n                  '                          <td st-ratio=\"20\">{{$index}}</td>',\n                  '                          <td st-ratio=\"55\">{{basicSelectRow.option}}</td>',\n                  '                          <td st-ratio=\"25\">',\n                  '                              <div class=\"pull-right\">',\n                  '                                <button class=\"btn btn-primary\" ng-click=\"panel.upThisRow($index)\"><i class=\"fa fa-arrow-up\"></i></button>',\n                  '                                <button class=\"btn btn-primary\" ng-click=\"panel.downThisRow($index)\"><i class=\"fa fa-arrow-down\"></i></button>',\n                  '                                \t<button class=\"btn btn-danger\" ng-click=\"panel.removeRow($index)\"><i class=\"fa fa-trash-o\"></i></button>',\n                  '                               </div>',   \n                  '                          </td>',\n                  '                      </tr>',\n                  '                      </tbody>',\n                  '                  </table>',\n                  '              </div>',\n                  '          </div>',\n                  '         </div>',\n                  '  </div>',\n\t\n\n                  '  <div class=\"marginTopFivepixels\"></div>',\n                    \n                  //description\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n                  '              <label for=\"DescriptionUpdate\" class=\"control-label greyText editPropertiesLabel\">Description :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyDesciption\" id=\"DescriptionUpdate\" placeholder=\"Add / edit description here\">',\n                  '              </div>',\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\t\t\t\t\t\t\t\t\t'  </div>',\n\t\t\t\t\t\t\t\t\tvalidEditFooter,\n\t\t\t\t\t\t\t\t\t'</div> '\n\t\t\t\t\t\t\t\t].join('');\n\t\t\t}\n\n\t \t\t/**\n\t\t\t * register template cache for side edit control panel\n\t\t\t * \n\t\t\t * control : \"Grouped Select\"\n\t\t\t */\n\t\t\tfunction editPanelGroupedSelectCtrlTpl(){\n\t\t\t\treturn \t[\n\t\t\t\t\t\t\t\t\t'<div class=\"panel panel-default\">',\n\t\t\t\t\t\t\t\t\t'    <div class=\"panel-body\">',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'        <div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t'            <h5 class=\"greyText\"><i class=\"fa fa-pencil-square-o\"></i>&nbsp; Edit properties :</h5>',\n\t\t\t\t\t\t\t\t\t'        </div>',\n\t\t\t\t\t\t\t\t\t'    </div> ',\n\t\t\t\t\t\t\t\t\t//'    <hr/>',\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//add options input  \n                  '  <div class=\"row\">',\n                  '      <div class=\"col-lg-12 col-md-12\">',\n                  '        <label for=\"groupedSelectRowCollection\" class=\"control-label greyText editPropertiesLabel\">Add new options :</label>',\n                  '     </div>',\n                  '  </div>',\n                  '  <div class=\"row\">',\n                  '      <div>',\n                  '          <div class=\"form-group\">',\n                  '              <div class=\"col-sm-9 col-xs-9 col-md-9 col-lg-9\">',\n                  '              <input type=\"text\" class=\"form-control\" id=\"inputAddNewGroupedOption\" placeholder=\"add new option\" ng-model=\"panel.newOptionGroupedSelect.saisie\">',\n                  '              </div>',\n                  '              <div class=\"col-sm-3 col-xs-3 col-md-3 col-lg-3\">',\n                  '                  <button class=\"btn btn-primary\" ng-click=\"panel.addNewOptionGroupedSelect()\">add</button>',\n                  '              </div>',\n                  '         </div>',\n                  '      </div>',\n                  '  </div> ',\n\n                  //add group input\n                  '  <div class=\"row\">',\n                  '      <div class=\"col-lg-12 col-md-12\">',\n                  '        <label for=\"groupedSelectRowCollection\" class=\" control-label greyText editPropertiesLabel\">Add new groups :</label>',\n                  '     </div>',\n                  '  </div>',\n                  '  <div class=\"row\">',\n                  '      <div>',\n                  '          <div class=\"form-group\">',\n                  '              <div class=\"col-sm-9 col-xs-9 col-md-9 col-lg-9\">',\n                  '                  <input  id=\"inputAddNewGroupGroupedOption\" type=\"text\" class=\"form-control\" ng-model=\"panel.newGroupGroupedSelect.saisie\" id=\"inputTextLabelUpdateGroupedSelect\" placeholder=\"Add new group\">',\n                  '              </div>',\n                  '              <div class=\"col-sm-3 col-xs-3 col-md-3 col-lg-3\">',\n                  '                  <button class=\"btn btn-primary\" ng-click=\"panel.addNewGroupToGroupedSelect()\">add</button>',\n                  '              </div>',\n                  '          </div>',\n                  '      </div>',\n                  '  </div>',\n\n                  //options/groups table\n                  '  <div class=\"row\">',\n                  '      <div class=\"col-lg-12 col-md-12\">',\n                  '        <label  class=\" control-label greyText editPropertiesLabel\">Edit/Remove options/groups:</label>',\n                  '     </div>',\n                  '  </div>',\n                  '  <div class=\"row\">',\n                  '         <div class=\"form-group\">',\n                  '          <div class-\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">',\n                  '              <div class=\"container\">',\n                  '                  <div ng-if=\"panel.groupedSelectRowCollection.rows.length === 0\">',\n                  '                      <h5 class=\"text-center greyText\"><em>- no option : add new options -</em></h5>',\n                  '                  </div>',  \n                  '                  <table ng-if=\"panel.groupedSelectRowCollection.rows.length > 0\" class=\"table table-striped\">',\n                  '                      <thead>',\n                  '                      <tr>',\n                  '                          <th st-ratio=\"20\">order</th>',\n                  '                          <th st-ratio=\"25\">group</th>',\n                  '                          <th st-ratio=\"30\">option</th>',\n                  '                          <th st-ratio=\"25\"></th>',\n                  '                      </tr>',\n                  '                      <tr>',\n                  '                          <th st-ratio=\"20\"></th>',\n                  '                          <th st-ratio=\"25\"></th>',\n                  '                          <th st-ratio=\"30\">',\n                  '                              <input ng-model=\"groupedSelectFilter\" placeholder=\"search for option\" class=\"input-sm form-control\" type=\"search\"/>',\n                  '                          </th>',\n                  '                          <th st-ratio=\"25\"></th>',\n                  '                      </tr>',\n                  '                      </thead>',\n                  '                      <tbody>',\n                  '                      <tr ng-repeat=\"groupedSelectRow in panel.groupedSelectRowCollection.rows | filter:groupedSelectFilter as groupedSelectRow\">',\n                  '                          <td st-ratio=\"20\">{{$index}}</td>',\n                  '                          <td st-ratio=\"25\">',\n                  '                              <div ng-if=\"panel.groupSelectGroupClick.showList === true\">',\n                  '                              <div ng-if=\"panel.GroupedSelectGroups.list.length === 0\">',\n                  '                                  <p class=\"text-left noGroupText\">- add new groups -</p>',\n                  '                              </div>',\n                  '                              <div ng-if=\"panel.GroupedSelectGroups.list.length > 0\">',\n                  '                                  <ol class=\"nya-bs-select col-sm-12 col-xs-12 col-md-12 col-lg12 editGroupedSelectnyaSelect\" ng-model=\"groupedSelectRow.group\" id=\"modelGroupedOptionGroupedChoose\"',\n                  '                                  disabled=\"panel.GroupedSelectGroups.list.length === 0\">',\n                  '                                    <li class=\"nya-bs-option\" nya-bs-option=\"GroupedSelectGroup in panel.GroupedSelectGroups.list\" value=\"GroupedSelectGroup\">',\n                  '                                      <a>{{GroupedSelectGroup}}</a>',\n                  '                                    </li>',\n                  '                                  </ol>',\n                  '                              </div>',\n                  '                              </div>',\n                  '                              <div ng-if=\"panel.groupSelectGroupClick.showList === false\">',\n                  '                              {{groupedSelectRow.group}}',\n                  '                              </div>',\n                  '                          </td>',\n                  '                          <td st-ratio=\"30\">{{groupedSelectRow.option}}</td>',\n                  '                          <td st-ratio=\"25\">',\n                  '                              <div class=\"pull-right\">',\n                  '                                  <button class=\"btn btn-primary\" ng-click=\"panel.upThisGroupedSelectRow($index)\"><i class=\"fa fa-arrow-up\"></i></button>',\n                  '                                  <button class=\"btn btn-primary\" ng-click=\"panel.downThisGroupedSelectRow($index)\"><i class=\"fa fa-arrow-down\"></i></button>',\n                  '                                  <button class=\"btn btn-warning\" ng-click=\"panel.showGroupListToChoose()\"><i class=\"fa fa-pencil-square-o\"></i> </button>',\n                  '                                  <button class=\"btn btn-danger\"  ng-click=\"panel.removeGroupedSelectRow($index)\"><i class=\"fa fa-trash-o\"></i></button>',\n                  '                               </div>',   \n                  '                          </td>',\n                  '                      </tr>',\n                  '                      </tbody>',\n                  '                  </table>',\n                  '              </div>',\n                  '          </div>',\n                  '         </div>',\n                  '  </div>',\n\t\t\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t\t'    <div class=\"marginTopFivepixels\"></div>',\n\n\t\t\t\t\t\t\t\t\t//description\n\t\t\t\t\t\t\t\t\t'    <div class=\"row\">',\n\t\t\t\t\t\t\t\t\t'            <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t<div class=\"col-md-12\">',\n\n                  '              <label for=\"DescriptionUpdate\" class=\"control-label greyText editPropertiesLabel\">Description :</label>',\n                  '              <div class=\"\">',\n                  '                <input type=\"text\" class=\"form-control\" ng-model=\"panel.proxyModel.temporyConfig.formlyDesciption\" id=\"DescriptionUpdate\" placeholder=\"Add / edit description here\">',\n                  '              </div>',\n\n\t\t\t\t\t\t\t\t\t'\t\t\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t'            </div>',\n\t\t\t\t\t\t\t\t\t'    </div>',\t\n\n\n\t\t\t\t\t\t\t\t\t'  </div>',\n\t\t\t\t\t\t\t\t\tvalidEditFooter,\n\t\t\t\t\t\t\t\t\t'</div> '\n\t\t\t\t\t\t\t\t].join('');\n\t\t\t} \n\n  }\n\n/**\n *  ------------------------------------------------------\n *  configuration edaDragAndDropConfig\n *  ------------------------------------------------------\n *\n * configuration related to drag and drop\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp')\n\t.config(['dragDropConfigProvider',\n\t\n\tfunction (dragDropConfigProvider) {\n\n    dragDropConfigProvider.setItemsNotTocount({\n                                                //placeholder :         '',\n                                                itemBeingDragged :    'dndDraggingSource'    \n                                              });\n \n\t}]);\n\n\n/**\n *  ------------------------------------------------------\n *  configuration edaFormlyConfig\n *  ------------------------------------------------------\n *\n *  formly configuration\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp')\n\t.config([\t'formlyConfigProvider',\n\t\t\t\t\t\t'EasyFormGenFormlyBindingModelsProvider',\n\t\t\t\t\t\t'dragDropConfigProvider',\n\n\tfunction (formlyConfigProvider, EasyFormGenFormlyBindingModelsProvider, dragDropConfigProvider) {\n\t\t\n\t\tconsole.info('app in config');\n\n\t\t/**\n\t\t * Add blanck control\n\t\t *\n\t\t * 1- in formlyConfigProvider\n\t\t * 2- in EasyFormGenFormlyBindingModelsProvider\n\t\t */\n\t\tformlyConfigProvider.setType(\n\t\t \t{\n\t\t\t\tname  \t\t: 'blank',\n\t\t\t\ttemplate \t: '<div></div>'\n\t\t  }\n\t\t);\n\n\t\tEasyFormGenFormlyBindingModelsProvider.addEasyFormControlToList(\n\t\t\t\t{\n\t\t\t\t\t\tid \t\t\t\t\t\t\t\t: 'empty',  \n\t\t\t\t\t\tname \t\t\t\t\t\t\t: 'no control', \n\t\t\t\t\t\tsubtitle \t\t\t\t\t: 'no control', \n\t\t\t\t\t\tgroup \t\t\t\t\t\t: 'Blank', \n\t\t\t\t\t\tformlyType \t\t\t\t: 'blank', \n\t\t\t\t\t\tformlySubtype \t\t: '', \n\t\t\t\t\t\tformlyLabel \t\t\t: '', \n\t\t\t\t\t\tformlyRequired \t\t: false, \n\t\t\t\t\t\tformlyDesciption \t: '', \n\t\t\t\t\t\tformlyOptions \t\t: []\n\t\t\t\t}\n\t\t);\n\n\t\t/**\n\t\t * drag and drop control template\n\t\t *\n\t\t * @PARAM 1 : control template object (drag an drop)\n\t\t * @PARAM 2 : object to indicates in which group of control it will be inserted\n\t\t * \t\t\t\t\t\t(related to _dragDropConfigModel.containerConfig.decoration in dragDropConfig provider)\n\t\t *\n\t\t */\n\t\tdragDropConfigProvider.addControlToDragDropPresentationModel(\n\t\t\t\t{\n          label \t: [  \n\t\t\t                  '<div class=\"col-md-12\">',\n\t\t\t                  '    <div class=\"form-group\">',                                          \n\t\t\t                  '      <div class=\"\">',\n\t\t\t                  '      </div>',\n\t\t\t                  '    </div>',\n\t\t\t                  '</div>'\n\t                   ].join(''),          \n          control : 'empty',\n          cssClass: 'col-xs-12'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\taddToGroupCtrl : 'blank'\n\t\t\t\t}\n\t\t);\t\n\n\t\t/**\n\t\t * Add header\n\t\t *\n\t\t * note : formly header template already exists\n\t\t * no need to create a custom one\n\t\t *\n\t\t * just declare in EasyFormGenFormlyBindingModelsProvider\n\t\t * \n\t\t */\n\t\tEasyFormGenFormlyBindingModelsProvider.addEasyFormControlToList(\n\t\t\t\t{\n\t\t\t\t\tid \t\t\t\t\t\t\t\t: 'Header',  \n\t\t\t\t\tname \t\t\t\t\t\t\t: 'Header', \n\t\t\t\t\tsubtitle \t\t\t\t\t: 'no control', \n\t\t\t\t\tgroup \t\t\t\t\t\t: 'Decoration', \n\t\t\t\t\tformlyType \t\t\t\t: 'header', \n\t\t\t\t\tformlySubtype \t\t: '', \n\t\t\t\t\tformlyLabel \t\t\t: '', \n\t\t\t\t\tformlyRequired \t\t: false, \n\t\t\t\t\tformlyDesciption \t: '', \n\t\t\t\t\tformlyOptions \t\t: []\n\t\t\t\t}\n\t\t);\n\t\t/**\n\t\t * drag and drop header control template\n\t\t *\n\t\t *\n\t\t * @PARAM 1 : control template object (drag an drop)\n\t\t * @PARAM 2 : object to indicates in which group of control it will be inserted\n\t\t *  \t\t\t\t\t(related to _dragDropConfigModel.containerConfig.decoration in dragDropConfig provider)\n\t\t */\n\t\tdragDropConfigProvider.addControlToDragDropPresentationModel(\n\t\t\t\t{\n          label \t: [  \n\t\t\t                  '<div class=\"col-md-12\">',\n\t\t\t                  '    <div class=\"form-group\">',                                          \n\t\t\t                  '      <div class=\"\">',\n\t\t\t                  '        <h2 class=\"text-center\">Header</h2>',\n\t\t\t                  '        <hr/>',\n\t\t\t                  '      </div>',\n\t\t\t                  '    </div>',\n\t\t\t                  '</div>'\n\t                   ].join(''),          \n          control : 'Header',\n          cssClass: 'col-xs-12'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\taddToGroupCtrl : 'headers'\n\t\t\t\t}\t\t\t\t\n\t\t);\n\n\t\t/**\n\t\t * Add subTitle control\n\t\t *\n\t\t * 1- in formlyConfigProvider\n\t\t * 2- in EasyFormGenFormlyBindingModelsProvider\n\t\t */\n\t\tvar subTitleTemplate =\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'<div class=\"row\">', \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'  <div class=\"\">', \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'    <h4 class=\"text-center\">{{options.templateOptions.placeholder}}<h4>', \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'    <hr/>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'  </div>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'</div>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t].join(' ');\n\n\t\tformlyConfigProvider.setType(\n\t\t \t{\n\t\t\t\tname \t\t\t: 'subTitle',\n\t\t\t\ttemplate \t: subTitleTemplate\n\t\t  }\n\t\t);\n\n\t\tEasyFormGenFormlyBindingModelsProvider.addEasyFormControlToList(\n\t\t\t\t{\n\t\t\t\t\tid \t\t\t\t\t\t\t\t: 'Subtitle',  \n\t\t\t\t\tname \t\t\t\t\t\t\t: 'Subtitle', \n\t\t\t\t\tsubtitle \t\t\t\t\t: 'no control', \n\t\t\t\t\tgroup \t\t\t\t\t\t: 'Decoration', \n\t\t\t\t\tformlyType \t\t\t\t: 'subTitle', \n\t\t\t\t\tformlySubtype \t\t: '', \n\t\t\t\t\tformlyLabel \t\t\t: '', \n\t\t\t\t\tformlyRequired \t\t: false, \n\t\t\t\t\tformlyDesciption \t: '', \n\t\t\t\t\tformlyOptions \t\t: []\n\t\t\t\t}\n\t\t);\n\t\t/**\n\t\t * drag and drop subtitles control template\n\t\t *\n\t\t *\n\t\t * @PARAM 1 : control template object (drag an drop)\n\t\t * @PARAM 2 : object to indicates in which group of control it will be inserted\n\t\t * \t\t\t\t\t\t(related to _dragDropConfigModel.containerConfig.decoration in dragDropConfig provider)\n\t\t */\t\n\t\tdragDropConfigProvider.addControlToDragDropPresentationModel(\n        {\n          'label' \t: [  \n\t\t\t                  '<div class=\"col-md-12\">',\n\t\t\t                  '    <div class=\"form-group\">',                                          \n\t\t\t                  '      <div class=\"\">',\n\t\t\t                  '        <h4 class=\"text-center\">SubTitle</h4>',\n\t\t\t                  '        <hr/>',\n\t\t\t                  '      </div>',\n\t\t\t                  '    </div>',\n\t\t\t                  '</div>'\n\t                    ].join(''),\n          'control'\t: 'Subtitle',\n          'cssClass': 'col-xs-12'\n        },\n\t\t\t\t{\n\t\t\t\t\taddToGroupCtrl : 'headers'\n\t\t\t\t}        \n\t\t);\t\t\n\n\t\t/**\n\t\t * Add text input (basic)\n\t\t *\n\t\t * note : formly template already exists\n\t\t * no need to create a custom one\n\t\t *\n\t\t * just declare in EasyFormGenFormlyBindingModelsProvider\n\t\t */\n\t\tEasyFormGenFormlyBindingModelsProvider.addEasyFormControlToList(\n\t\t\t\t{\n\t\t\t\t\tid \t\t\t\t\t\t\t\t: 'TextInput',  \n\t\t\t\t\tname \t\t\t\t\t\t\t: 'Text input', \n\t\t\t\t\tsubtitle \t\t\t\t\t: 'Text input', \n\t\t\t\t\tgroup \t\t\t\t\t\t: 'input', \n\t\t\t\t\tformlyType \t\t\t\t: 'input', \n\t\t\t\t\tformlySubtype \t\t: '', \n\t\t\t\t\tformlyLabel \t\t\t: '', \n\t\t\t\t\tformlyRequired \t\t: false, \n\t\t\t\t\tformlyDesciption \t: '', \n\t\t\t\t\tformlyOptions \t\t: []\n\t\t\t\t}\n\t\t);\n\t\t/**\n\t\t * drag and drop text input (basic) control template\n\t\t *\n\t\t *\n\t\t * @PARAM 1 : control template object (drag an drop)\n\t\t * @PARAM 2 : object to indicates in which group of control it will be inserted\n\t\t *  \t\t\t\t\t(related to _dragDropConfigModel.containerConfig.decoration in dragDropConfig provider)\n\t\t */\t\n\t\tdragDropConfigProvider.addControlToDragDropPresentationModel(\n\t      {\n\t        'label' \t: [  \n\t\t\t                  '<div class=\"col-md-12\">',\n\t\t\t                  '<div class=\"form-group\">',\n\t\t\t                  '  <label for=\"inputText\" class=\"control-label textControlLabel pull-left\">',\n\t\t\t                  '   title for text input<span class=\"textControlLabel ng-scope\">*</span>',\n\t\t\t                  '  </label>',\n\t\t\t                  '  <div class=\"\">',\n\t\t\t                  '    <input type=\"text\" disabled class=\"form-control fakeControl\" id=\"inputText\" placeholder=\"basic input\">',\n\t\t\t                  '    <p class=\"help-block pull-left\">Description</p>',\n\t\t\t                  '  </div>',\n\t\t\t                  '</div>',\n\t\t\t                  '</div>'\n\t                  \t].join(''),\n\n\t        'control'\t: 'TextInput',\n\t        'cssClass': 'col-xs-12'\n\t      },\n\t\t\t\t{\n\t\t\t\t\taddToGroupCtrl : 'inputs'\n\t\t\t\t}  \t      \n\t\t);\t\t\t\n\n\t\t/**\n\t\t * Add text input (Password)\n\t\t *\n\t\t * note : formly template already exists\n\t\t * no need to create a custom one\n\t\t *\n\t\t * just declare in EasyFormGenFormlyBindingModelsProvider\n\t\t */\n\t\tEasyFormGenFormlyBindingModelsProvider.addEasyFormControlToList(\n\t\t\t\t{\n\t\t\t\t\tid \t\t\t\t\t\t\t\t: 'Password',  \n\t\t\t\t\tname \t\t\t\t\t\t\t: 'Password', \n\t\t\t\t\tsubtitle \t\t\t\t\t: 'Password', \n\t\t\t\t\tgroup \t\t\t\t\t\t: 'input', \n\t\t\t\t\tformlyType \t\t\t\t: 'input', \n\t\t\t\t\tformlySubtype \t\t: 'password', \n\t\t\t\t\tformlyLabel \t\t\t: '', \n\t\t\t\t\tformlyRequired \t\t: false, \n\t\t\t\t\tformlyDesciption \t: '', \n\t\t\t\t\tformlyOptions \t\t: []\n\t\t\t\t}\n\t\t);\n\t\t/**\n\t\t * drag and drop text input — password —control template\n\t\t *\n\t\t *\n\t\t * @PARAM 1 : control template object (drag an drop)\n\t\t * @PARAM 2 : object to indicates in which group of control it will be inserted\n\t\t *  \t\t\t\t\t(related to _dragDropConfigModel.containerConfig.decoration in dragDropConfig provider)\n\t\t */\t\n\t\tdragDropConfigProvider.addControlToDragDropPresentationModel(\n        {\n\n          'label' \t: [\n\t\t                    '<div class=\"col-md-12\">',\n\t\t                    '<div class=\"form-group\">',\n\t\t                    '  <label for=\"inputPass\" class=\"control-label textControlLabel ng-binding pull-left\">',\n\t\t                    '   title for password input<span class=\"textControlLabel ng-scope\">*</span>',\n\t\t                    '  </label>',\n\t\t                    '  <div class=\"\">',\n\t\t                    '    <input type=\"password\" disabled class=\"form-control fakeControl\" id=\"inputPass\" placeholder=\"password input\">',\n\t\t                    '    <p class=\"help-block ng-binding pull-left\">Description</p>',\n\t\t                    '  </div>',\n\t\t                    '</div>',\n\t\t                    '</div>'\n\t                    ].join(''),\n\n          'control'\t: 'Password',\n          'cssClass': 'col-xs-12'\n        },\n\t\t\t\t{\n\t\t\t\t\taddToGroupCtrl : 'inputs'\n\t\t\t\t} \n\n\t\t);\t\t\n\t\t\n\t\t/**\n\t\t * Add angular UI date picker\n\t\t *\n\t\t * thx Kent C. Dodds for formly config template (since it was a huge config)\n\t\t */\n\t\tvar attributes =\t[\n\t\t\t\t\t\t\t\t\t\t\t\t'date-disabled',\n\t\t\t\t\t\t\t\t\t\t\t\t'custom-class',\n\t\t\t\t\t\t\t\t\t\t\t\t'show-weeks',\n\t\t\t\t\t\t\t\t\t\t\t\t'starting-day',\n\t\t\t\t\t\t\t\t\t\t\t\t'init-date',\n\t\t\t\t\t\t\t\t\t\t\t\t'min-mode',\n\t\t\t\t\t\t\t\t\t\t\t\t'max-mode',\n\t\t\t\t\t\t\t\t\t\t\t\t'format-day',\n\t\t\t\t\t\t\t\t\t\t\t\t'format-month',\n\t\t\t\t\t\t\t\t\t\t\t\t'format-year',\n\t\t\t\t\t\t\t\t\t\t\t\t'format-day-header',\n\t\t\t\t\t\t\t\t\t\t\t\t'format-day-title',\n\t\t\t\t\t\t\t\t\t\t\t\t'format-month-title',\n\t\t\t\t\t\t\t\t\t\t\t\t'year-range',\n\t\t\t\t\t\t\t\t\t\t\t\t'shortcut-propagation',\n\t\t\t\t\t\t\t\t\t\t\t\t'datepicker-popup',\n\t\t\t\t\t\t\t\t\t\t\t\t'show-button-bar',\n\t\t\t\t\t\t\t\t\t\t\t\t'current-text',\n\t\t\t\t\t\t\t\t\t\t\t\t'clear-text',\n\t\t\t\t\t\t\t\t\t\t\t\t'close-text',\n\t\t\t\t\t\t\t\t\t\t\t\t'close-on-date-selection',\n\t\t\t\t\t\t\t\t\t\t\t\t'datepicker-append-to-body'\n\t\t\t\t\t\t\t\t\t\t\t];\n\n\t\tvar bindings =\t[\n\t\t\t\t\t\t\t\t\t\t\t'datepicker-mode',\n\t\t\t\t\t\t\t\t\t\t\t'min-date',\n\t\t\t\t\t\t\t\t\t\t\t'max-date'\n\t\t\t\t\t\t\t\t\t\t];\n\n\t\tvar ngModelAttrs = {};\n\n\t\tangular.forEach(attributes, function(attr) {\n\t\t  ngModelAttrs[camelize(attr)] = {attribute: attr};\n\t\t});\n\n\t\tangular.forEach(bindings, function(binding) {\n\t\t  ngModelAttrs[camelize(binding)] = {bound: binding};\n\t\t});\n\n\t  function camelize(string) {\n\t    string = string.replace(/[\\-_\\s]+(.)?/g, function(match, chr) {\n\t      return chr ? chr.toUpperCase() : '';\n\t    });\n\t    // Ensure 1st char is always lowercase\n\t    return string.replace(/^([A-Z])/, function(match, chr) {\n\t      return chr ? chr.toLowerCase() : '';\n\t    });\n\t  } \t\t\n\n\t  var angularUIDatePickerTemplate =\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'<input ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'      id=\"{{id}}\" ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'      class=\"form-control\" ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'      ng-click=\"open($event)\"',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'      ng-model=\"model[options.key || index]\" is-open=\"to.isOpen\"',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'      ng-click=\"to.isOpen = true\" ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'      datepicker-options=\"to.datepickerOptions\"',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'/>'\n\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].join(' ');\n \n\t\tformlyConfigProvider.setType({\n\t\t  name \t\t\t\t: 'datepicker',\n\t\t  template \t\t: angularUIDatePickerTemplate,\n\t\t  wrapper \t\t: ['bootstrapLabel', 'bootstrapHasError'],\n\t\t  controller \t: [\t'$scope', \n\t\t  \t\t\t\t\t\t\t\tfunction($scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t     $scope.open = function($event) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t      $event.preventDefault();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t      $event.stopPropagation();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t      $scope.opened = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    };\n\t\t   \t\t\t\t\t\t\t\t}\n\t\t   \t\t\t\t\t\t\t],\n\t\t  defaultOptions : {\n\t\t\t\t\t\t\t\t\t\t    ngModelAttrs \t\t: ngModelAttrs,\n\t\t\t\t\t\t\t\t\t\t    templateOptions : {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t      addonLeft: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t        class: 'glyphicon glyphicon-calendar',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t        onClick: function(options) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          options.templateOptions.isOpen = !options.templateOptions.isOpen;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t        }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t      },       \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t      onFocus: function($viewValue, $modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t        scope.to.isOpen = !scope.to.isOpen;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t      },\n\t\t\t\t\t\t\t\t\t\t\t      \t\t\t\t\t\t\t\tdatepickerOptions: {}\n\t\t\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t}\n\t\t  }\n\t\t});\n\n\t\tEasyFormGenFormlyBindingModelsProvider.addEasyFormControlToList(\n\t\t\t\t{\n\t\t\t\t\tid \t\t\t\t\t\t\t\t: 'Date',  \n\t\t\t\t\tname \t\t\t\t\t\t\t: 'Date', \n\t\t\t\t\tsubtitle \t\t\t\t\t: 'Date', \n\t\t\t\t\tgroup \t\t\t\t\t\t: 'input', \n\t\t\t\t\tformlyType \t\t\t\t: 'datepicker', \n\t\t\t\t\tformlySubtype \t\t: '', \n\t\t\t\t\tformlyLabel \t\t\t: '', \n\t\t\t\t\tformlyRequired \t\t: false, \n\t\t\t\t\tformlyDesciption \t: '', \n\t\t\t\t\tformlyOptions \t\t: [], \n\t\t\t\t\tdatepickerPopup \t: 'dd-MMMM-yyyy'\n\t\t\t\t}\n\t\t);\n\t\t/**\n\t\t * drag and drop text input — date — control template (using angular UI datepicker)\n\t\t *\n\t\t *\n\t\t * @PARAM 1 : control template object (drag an drop)\n\t\t * @PARAM 2 : object to indicates in which group of control it will be inserted\n\t\t *  \t\t\t\t\t(related to _dragDropConfigModel.containerConfig.decoration in dragDropConfig provider)\n\t\t */\t\n\t\tdragDropConfigProvider.addControlToDragDropPresentationModel(\n\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel \t: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'<div class=\"col-md-12\">',        \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'<div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t          \t'  <label for=\"inputDate\" class=\"control-label textControlLabel ng-binding pull-left\">',\n\t\t\t\t                    \t'   title for date input<span class=\"textControlLabel ng-scope\">*</span>',\n\t\t\t\t                    \t'  </label>',\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'          <div class=\"col-xs-12 col-sm-12 col-md-12 demoddDatepicker\">',  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'  \t\t\t\t\t<div class=\"input-group\">',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'    \t\t\t\t\t<span class=\"input-group-addon\"><span class=\"glyphicon glyphicon-calendar\"></span></span>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'    \t\t\t\t\t<input type=\"text\" disabled class=\"form-control fakeControl\">',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'  \t\t\t\t\t</div>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\t\t\t\t\t</div>',\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'           <p class=\"help-block pull-left\">description</p>',\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'</div>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'</div>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t].join(''),\n\t\t\t\t          control\t: 'Date',\n\t\t\t\t          cssClass: 'col-xs-12'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\taddToGroupCtrl : 'inputs'\n\t\t\t\t} \t\t\t\t\n\t\t);\n\n\t\t/**\n\t\t * Add textarea\n\t\t *\n\t\t * note : formly template already exists\n\t\t * no need to create a custom one\n\t\t *\n\t\t * just declare in EasyFormGenFormlyBindingModelsProvider\n\t\t */\n\t\tEasyFormGenFormlyBindingModelsProvider.addEasyFormControlToList(\n\t\t\t\t{\n\t\t\t\t\tid \t\t\t\t\t\t\t\t: 'Texarea', \n\t\t\t\t\tname \t\t\t\t\t\t\t: 'Textarea', \n\t\t\t\t\tsubtitle \t\t\t\t\t: 'Textarea', \n\t\t\t\t\tgroup \t\t\t\t\t\t: 'Textarea', \n\t\t\t\t\tformlyType \t\t\t\t: 'textarea', \n\t\t\t\t\tformlySubtype \t\t: '', \n\t\t\t\t\tformlyLabel \t\t\t: '', \n\t\t\t\t\tformlyRequired \t\t: false, \n\t\t\t\t\tformlyDesciption \t: '', \n\t\t\t\t\tformlyOptions \t\t: []\n\t\t\t\t}\n\t\t);\n\t\t/**\n\t\t * drag and drop textarea control template\n\t\t *\n\t\t *\n\t\t * @PARAM 1 : control template object (drag an drop)\n\t\t * @PARAM 2 : object to indicates in which group of control it will be inserted\n\t\t *  \t\t\t\t\t(related to _dragDropConfigModel.containerConfig.decoration in dragDropConfig provider)\n\t\t */\t\n\t\tdragDropConfigProvider.addControlToDragDropPresentationModel(\n        {\n          'label' \t: [\n                        '<div class=\"col-md-12\">',\n                        '    <div class=\"form-group\">', \n                        '      <label for=\"textArea\" class=\"control-label ',\n                        '\t\t\t\t\t\t\ttextControlLabel pull-left\">title for textarea <span class=\"textControlLabel\">*</span></label>', \n                        '      <div class=\"\">',\n                        '        <textarea disabled class=\"form-control dragItemtextarea fakeControl\" ng-model=\"model[options.key]\" rows=\"1\" id=\"textArea\"></textarea>',\n                        '        <p class=\"help-block pull-left\">description</p>',          \n                        '      </div>',\n                        '    </div>',                    \n                        '</div>'                                  \n                    \t].join(''),\n          'control'\t: 'Texarea',\n          'cssClass': 'col-xs-12'          \n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\taddToGroupCtrl : 'textareas'\n\t\t\t\t}\t\t\t\t\t\n\t\t);\t\t\t\t\n\n\t\t/**\n\t\t * Add rich text editor control (using textAngular)\n\t\t *\n\t\t */\n\t\tvar richTexEditorTemplate =\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'<text-angular name=\"{{id}}\" ', \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'              class=\"richTextAngular\" ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'              ng-model=\"model[options.key || index]\">', \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'</text-angular>'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].join(' ');\n\t\tformlyConfigProvider.setType(\n\t\t  {\n\t\t\t\tname     \t: 'richEditor',\n\t\t\t\ttemplate \t: richTexEditorTemplate\n\t\t  }\n\t\t);\n\n\t\tEasyFormGenFormlyBindingModelsProvider.addEasyFormControlToList(\n\t\t\t\t{\n\t\t\t\t\tid \t\t\t\t\t\t\t\t: 'RichTextEditor', \n\t\t\t\t\tname \t\t\t\t\t\t\t: 'RichTextEditor', \n\t\t\t\t\tsubtitle \t\t\t\t\t: 'RichTextEditor', \n\t\t\t\t\tgroup \t\t\t\t\t\t: 'Textarea', \n\t\t\t\t\tformlyType \t\t\t\t: 'richEditor', \n\t\t\t\t\tformlySubtype \t\t: '', \n\t\t\t\t\tformlyLabel \t\t\t: '', \n\t\t\t\t\tformlyRequired \t\t: false, \n\t\t\t\t\tformlyDesciption \t: '', \n\t\t\t\t\tformlyOptions \t\t: []\n\t\t\t\t}\n\t\t);\n\t\t/**\n\t\t * drag and drop rich text editor control template (using textAngular)\n\t\t *\n\t\t *\n\t\t * @PARAM 1 : control template object (drag an drop)\n\t\t * @PARAM 2 : object to indicates in which group of control it will be inserted\n\t\t *  \t\t\t\t\t(related to _dragDropConfigModel.containerConfig.decoration in dragDropConfig provider)\n\t\t */\t\n\t\tdragDropConfigProvider.addControlToDragDropPresentationModel(\n\t\t\t\t{\n\t\t\t\t\tlabel \t: [\n\t\t\t\t\t\t\t\t\t\t\t'<div class=\"col-md-12\">', \n\t\t\t\t\t\t\t\t\t\t\t'    <div class=\"form-group\">', \n                      '      <label for=\"textArea\" class=\"control-label ',\n                      '\t\t\t\t\t\t\ttextControlLabel pull-left\">title for rich text editor <span class=\"textControlLabel\">*</span></label>', \n\t\t\t\t\t\t\t\t\t\t\t'      <div class=\"\">',\n\t\t\t\t\t\t\t\t\t\t\t'        <textarea disabled class=\"form-control dragItemtextarea fakeControl\" ng-model=\"model[options.key]\" rows=\"1\" id=\"textArea\"></textarea>',\n\t\t\t\t\t\t\t\t\t\t\t'        <p class=\"help-block\">description</p>',\n\t\t\t\t\t\t\t\t\t\t\t'      </div>',\n\t\t\t\t\t\t\t\t\t\t\t'    </div>',\n\t\t\t\t\t\t\t\t\t\t\t'</div>'\n\t\t\t\t\t\t\t\t\t\t].join(''),\n\t\t\t    control\t: 'RichTextEditor',\n\t\t\t    cssClass: 'col-xs-12'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\taddToGroupCtrl : 'textareas'\n\t\t\t\t}\t\t\t\t\n\t\t);\n\n\t\t/**\n\t\t * Add radio\n\t\t *\n\t\t * note : formly template already exists\n\t\t * no need to create a custom one\n\t\t *\n\t\t * just declare in EasyFormGenFormlyBindingModelsProvider\n\t\t */\n\t\tEasyFormGenFormlyBindingModelsProvider.addEasyFormControlToList(\n\t\t\t\t{\n\t\t\t\t\tid \t\t\t\t\t\t\t\t: 'Radio', \n\t\t\t\t\tname \t\t\t\t\t\t\t: 'Radio', \n\t\t\t\t\tsubtitle \t\t\t\t\t: 'Radio', \n\t\t\t\t\toptions \t\t\t\t\t: [], \n\t\t\t\t\tgroup \t\t\t\t\t\t: 'Radio', \n\t\t\t\t\tformlyType \t\t\t\t: 'radio', \n\t\t\t\t\tformlySubtype \t\t: '', \n\t\t\t\t\tformlyLabel \t\t\t: '', \n\t\t\t\t\tformlyRequired \t\t: false, \n\t\t\t\t\tformlyDesciption \t: '' , \n\t\t\t\t\tformlyOptions \t\t: []\n\t\t\t\t}\n\t\t);\n\t\t/**\n\t\t * drag and drop radio control template (using textAngular)\n\t\t *\n\t\t *\n\t\t * @PARAM 1 : control template object (drag an drop)\n\t\t * @PARAM 2 : object to indicates in which group of control it will be inserted\n\t\t *  \t\t\t\t\t(related to _dragDropConfigModel.containerConfig.decoration in dragDropConfig provider)\n\t\t */\n\t\tdragDropConfigProvider.addControlToDragDropPresentationModel(\n        {\n          'label' \t: [\n                        '<div class=\"col-md-12\">',        \n                        '  <div class=\"form-group\">',\n                        '    <label for=\"vertRadio\" class=\"control-label textControlLabel pull-left\">title for radio <span class=\"textControlLabel\">*</span></label>',\n                        '    <div class=\"interligne\"></div>',\n                        '    <div class=\"pull-left\">',\n                        '      <div class=\"radio\">',\n                        '        <label class=\"fakeCheck\">',\n                        '          <input type=\"radio\" disabled name=\"optionsRadios\" class=\"fakeCheck\" id=\"optionsRadio-0\" value=\"verticalRadio0\" checked=\"\">',\n                        '          option1',\n                        '        </label>',\n                        '      </div><div class=\"radio\">',\n                        '        <label class=\"fakeCheck\">',\n                        '          <input type=\"radio\" disabled name=\"optionsRadios\" class=\"fakeCheck\"  id=\"optionsRadio-1\" value=\"verticalRadio1\" checked=\"\">',\n                        '          option2',\n                        '        </label>',\n                        '      </div>',\n                        '      <p class=\"help-block pull-left\">description</p>',\n                        '    </div>',\n                        '  </div>',                            \n                        '</div>'\n                      ].join(''),\n          'control'\t: 'Radio',\n          'cssClass': 'col-xs-12'            \n        },\n\t\t\t\t{\n\t\t\t\t\taddToGroupCtrl : 'radios'\n\t\t\t\t}\t\n\t\t);\t\t\t\t\n\n\t\t/**\n\t\t * Add checkbox\n\t\t *\n\t\t * note : formly template already exists\n\t\t * no need to create a custom one\n\t\t *\n\t\t * just declare in EasyFormGenFormlyBindingModelsProvider\n\t\t */\n\t\tEasyFormGenFormlyBindingModelsProvider.addEasyFormControlToList(\n\t\t\t\t{\n\t\t\t\t\tid \t\t\t\t\t\t\t\t: 'Checkbox', \n\t\t\t\t\tname \t\t\t\t\t\t\t: 'Checkbox', \n\t\t\t\t\tsubtitle \t\t\t\t\t: 'Checkbox', \n\t\t\t\t\tgroup \t\t\t\t\t\t: 'Checkbox', \n\t\t\t\t\tformlyType \t\t\t\t: 'checkbox', \n\t\t\t\t\tformlySubtype \t\t: '', \n\t\t\t\t\tformlyLabel \t\t\t: '', \n\t\t\t\t\tformlyRequired \t\t: false, \n\t\t\t\t\tformlyDesciption \t: '', \n\t\t\t\t\tformlyOptions \t\t: []\n\t\t\t\t}\n\t\t);\n\t\t/**\n\t\t * drag and drop checkbox control template (using textAngular)\n\t\t *\n\t\t *\n\t\t * @PARAM 1 : control template object (drag an drop)\n\t\t * @PARAM 2 : object to indicates in which group of control it will be inserted\n\t\t *  \t\t\t\t\t(related to _dragDropConfigModel.containerConfig.decoration in dragDropConfig provider)\n\t\t */\n\t\tdragDropConfigProvider.addControlToDragDropPresentationModel(\n\t\t\t\t{\n\n\t\t\t\t\tlabel \t: [\n\t\t\t\t\t\t\t\t\t\t\t'<div class=\"col-md-12\">',                               \n\t\t\t\t\t\t\t\t\t\t\t'<div class=\"checkbox\">',\n\t\t\t\t\t\t\t\t\t\t\t'  <label class=\"fakeCheck\">',\n\t\t\t\t\t\t\t\t\t\t\t'    <input type=\"checkbox\" disabled class=\"fakeCheck\" id=\"checkBox\">',\n\t\t\t\t\t\t\t\t\t\t\t'\t\t<span class=\"blackText ng-binding\">label for checkbox </span>',\n\t\t\t\t\t\t\t\t\t\t\t'\t\t<span class=\"textControlLabel ng-scope\">*</span>',\n\t\t\t\t\t\t\t\t\t\t\t'  </label>', \n\t\t\t\t\t\t\t\t\t\t\t'</div>',\n\t\t\t\t\t\t\t\t\t\t\t'<p class=\"help-block ng-binding\">description</p>',\n\t\t\t\t\t\t\t\t\t\t\t'</div>' \n\t\t\t\t\t\t\t\t\t\t].join(''),\n\t\t\t\t  control\t: 'Checkbox',\n\t\t\t\t  cssClass: 'col-xs-12' \n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\taddToGroupCtrl : 'checkboxes'\n\t\t\t\t}\t\t\t\t\t\n\t\t);\n\n\t\t/**\n\t\t * Add basic Select control\n\t\t *\n\t\t * using nya-bs-select\n\t\t */\n\t\tvar basicSelectTemplate =\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' <ol class=\"nya-bs-select col-sm-12 col-xs-12 col-md-12 col-lg12\" ', \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\t\tng-model=\"model[options.key || index]\"  ', \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\t\tid=\"{{id}}\"  ', \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\t\tdisabled=\"options.templateOptions.options.length === 0\"> ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'   <li class=\"nya-bs-option\" nya-bs-option=\"option in options.templateOptions.options\"> ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'     <a>{{option.name}}</a> ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'   </li> ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' </ol> '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].join(''); \t\n\n\t\tformlyConfigProvider.setType(\n\t\t \t{\n\t\t\t\tname \t\t\t: 'basicSelect',\n\t\t\t\ttemplate \t: basicSelectTemplate\n\t\t  }\n\t\t);\n\n\t\tEasyFormGenFormlyBindingModelsProvider.addEasyFormControlToList(\n\t\t\t\t{\n\t\t\t\t\tid \t\t\t\t\t\t\t\t: 'BasicSelect', \n\t\t\t\t\tname \t\t\t\t\t\t\t: 'Basic select', \n\t\t\t\t\tsubtitle \t\t\t\t\t: 'Basic select',\n\t\t\t\t\toptions \t\t\t\t\t: [], \n\t\t\t\t\tgroup \t\t\t\t\t\t: 'Select', \n\t\t\t\t\tformlyType \t\t\t\t: 'basicSelect', \n\t\t\t\t\tformlySubtype \t\t: '', \n\t\t\t\t\tformlyLabel \t\t\t: '', \n\t\t\t\t\tformlyRequired \t\t: false, \n\t\t\t\t\tformlyDesciption \t: '', \n\t\t\t\t\tformlyOptions \t\t: []\n\t\t\t\t}\n\t\t);\t\n\t\t/**\n\t\t * drag and drop basic select control template (using textAngular)\n\t\t *\n\t\t *\n\t\t * @PARAM 1 : control template object (drag an drop)\n\t\t * @PARAM 2 : object to indicates in which group of control it will be inserted\n\t\t *  \t\t\t\t\t(related to _dragDropConfigModel.containerConfig.decoration in dragDropConfig provider)\n\t\t */\n\t\tdragDropConfigProvider.addControlToDragDropPresentationModel(\n\t\t\t\t{\n\t\t\t\t\tlabel \t: [\n\t\t\t\t\t\t\t\t\t\t\t'<div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t\t\t'    <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t\t\t'<div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 selectfordemo\">',\n\t\t\t\t\t\t\t\t\t\t\t'<ol class=\"nya-bs-select col-xs-12 col-sm-12 col-md-12 col-lg-12 ng-valid btn-group ng-dirty ng-valid-parse ng-touched\"', \n\t\t\t\t\t\t\t\t\t\t\t'\tng-model=\"fakeModelNyaSelectBasic\"', \n\t\t\t\t\t\t\t\t\t\t\t'\tdata-live-search=\"false\">',\n\t\t\t\t\t\t\t\t\t\t\t'   <button class=\"btn btn-default dropdown-toggle\" disabled type=\"button\">',\n\t\t\t\t\t\t\t\t\t\t\t'\t\t <span class=\"pull-left filter-option\">',\n\t\t\t\t\t\t\t\t\t\t\t'\t\t\t <span class=\"ng-binding\">Basic select</span>',\n\t\t\t\t\t\t\t\t\t\t\t'\t\t</span>',\n\t\t\t\t\t\t\t\t\t\t\t'\t\t&nbsp;<span class=\"caret\"></span>',\n\t\t\t\t\t\t\t\t\t\t\t'</button>',\n\n\t\t\t\t\t\t\t\t\t\t\t'    </div>',\n\t\t\t\t\t\t\t\t\t\t\t'</div>' \n\t\t\t\t\t\t\t\t\t\t].join(''),\n\t\t\t\t  control\t: 'BasicSelect',\n\t\t\t\t  cssClass: 'col-xs-12' \t\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\taddToGroupCtrl : 'selects'\n\t\t\t\t}\t\t\t\t\t\n\t\t);\t\n\n\t\t/**\n\t\t * Add Grouped Select control\n\t\t *\n\t\t * using nya-bs-select\n\t\t */\n    var groupedSelectTemplate =\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'  <ol class=\"nya-bs-select col-sm-12 col-xs-12 col-md-12 col-lg12\" ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\t\t   ng-model=\"model[options.key || index]\" ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'      data-live-search=\"true\" ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'      disabled=\"options.templateOptions.options.length === 0\">',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'      <li nya-bs-option=\"option in  options.templateOptions.options group by option.group\">  ',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'        <span class=\"dropdown-header\">{{$group}}</span>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'        <a>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'          <span>{{option.name}}</span>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'          <span class=\"glyphicon glyphicon-ok check-mark\"></span>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'        </a>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'      </li>',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'  </ol>'\n     \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].join(' ');\n\t\tformlyConfigProvider.setType(\n\t\t\t{\n\t\t\t\tname   \t\t: 'groupedSelect',\n\t\t\t\ttemplate \t: groupedSelectTemplate\n\t\t\t}\n\t\t);\n\n\t\tEasyFormGenFormlyBindingModelsProvider.addEasyFormControlToList(\n\t\t\t\t{\n\t\t\t\t\tid \t\t\t\t\t\t\t\t: 'GroupedSelect', \n\t\t\t\t\tname \t\t\t\t\t\t\t: 'Grouped Select', \n\t\t\t\t\tsubtitle \t\t\t\t\t: 'Grouped Select',\n\t\t\t\t\toptions \t\t\t\t\t: [], \n\t\t\t\t\tgroup \t\t\t\t\t\t: 'Select', \n\t\t\t\t\tformlyType \t\t\t\t: 'groupedSelect', \n\t\t\t\t\tformlySubtype \t\t: '', \n\t\t\t\t\tformlyLabel \t\t\t: '', \n\t\t\t\t\tformlyRequired \t\t: false, \n\t\t\t\t\tformlyDesciption \t: '', \n\t\t\t\t\tformlyOptions \t\t: []\n\t\t\t\t}\n\t\t);\n\t\t/**\n\t\t * drag and drop grouped select control template (using textAngular)\n\t\t *\n\t\t *\n\t\t * @PARAM 1 : control template object (drag an drop)\n\t\t * @PARAM 2 : object to indicates in which group of control it will be inserted\n\t\t *  \t\t\t\t\t(related to _dragDropConfigModel.containerConfig.decoration in dragDropConfig provider)\n\t\t */\n\t\tdragDropConfigProvider.addControlToDragDropPresentationModel(\n\t\t\t\t{\n\t\t\t\t\tlabel \t: [\n\t\t\t\t\t\t\t\t\t\t\t'<div class=\"col-md-12\">',\n\t\t\t\t\t\t\t\t\t\t\t'    <div class=\"form-group\">',\n\n\t\t\t\t\t\t\t\t\t\t\t'<div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 selectfordemo\">',\n\t\t\t\t\t\t\t\t\t\t\t'<ol class=\"nya-bs-select col-xs-12 col-sm-12 col-md-12 col-lg-12 ng-valid btn-group ng-dirty ng-valid-parse ng-touched\"', \n\t\t\t\t\t\t\t\t\t\t\t'\tng-model=\"fakeModelNyaSelectBasic\"', \n\t\t\t\t\t\t\t\t\t\t\t'\tdata-live-search=\"false\">',\n\t\t\t\t\t\t\t\t\t\t\t'   <button class=\"btn btn-default dropdown-toggle\" disabled type=\"button\">',\n\t\t\t\t\t\t\t\t\t\t\t'\t\t <span class=\"pull-left filter-option\">',\n\t\t\t\t\t\t\t\t\t\t\t'\t\t\t <span class=\"ng-binding\">Grouped select</span>',\n\t\t\t\t\t\t\t\t\t\t\t'\t\t</span>',\n\t\t\t\t\t\t\t\t\t\t\t'\t\t&nbsp;<span class=\"caret\"></span>',\n\t\t\t\t\t\t\t\t\t\t\t'</button>',\n\n\t\t\t\t\t\t\t\t\t\t\t'    </div>',\n\t\t\t\t\t\t\t\t\t\t\t'</div>' \n\t\t\t\t\t\t\t\t\t\t].join(''),\n\t\t\t\t\tcontrol\t: 'GroupedSelect',\n\t\t\t\t\tcssClass: 'col-xs-12' \n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\taddToGroupCtrl : 'selects'\n\t\t\t\t}\t\t\t\t\n\t\t);\t\t\t\n\n \n\t}]);\n\n\nangular.module(\"edaApp\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"edaDragDropWayEasyFormGeneratorTemplate.html\",\"<section id=pageWfEdit><div ng-init=\\\"\\\"><div class=container><section id=preview><div id=preview-content><div class=content-container><toaster-container toaster-options=\\\"{ \\'position-class\\': \\'toast-top-full-width\\', \\'extendedTimeout\\':500, \\'timeOut\\':500, }\\\"></toaster-container><tabset justified=true><tab select=tabJustSelected(2) active=tab.editTab.active heading=\\\"Edit /Create\\\"><div class=row><div pageslide=\\\"\\\" ps-open=editPanelModel.toggle ps-side=left ps-cloak=true ps-size=400px><div id=controlEditLeftPanel ng-controller=\\\"edaEditPanelController as panel\\\"><div class=pull-right><button type=button class=close ng-click=closeEditPanel() aria-label=Close><span aria-hidden=true>&times;</span></button></div><div class=separator10pixel></div><div ng-switch=\\\"\\\" on=panel.proxyModel.temporyConfig.selectedControl><div ng-switch-when=none><div class=row><div class=col-sm-12><h5 class=\\\"text-center texteRouge\\\"><i class=\\\"fa fa-arrow-up\\\"></i>&nbsp; Select a control</h5></div></div></div><div ng-switch-when=empty><script type=text/ng-template id=editPanelBlankCtrl.tpls.html></script></div><div ng-switch-when=Header><div ng-include=\\\"\\'editPanelHeaderCtrl-tpls.html\\'\\\"></div></div><div ng-switch-when=Subtitle><div ng-include=\\\"\\'editPanelSubTitleCtrl-tpls.html\\'\\\"></div></div><div ng-switch-when=TextInput><div ng-include=\\\"\\'editPanelTextInputCtrl-tpls.html\\'\\\"></div></div><div ng-switch-when=Password><div ng-include=\\\"\\'editPanelPasswordCtrl-tpls.html\\'\\\"></div></div><div ng-switch-when=Date><div ng-include=\\\"\\'editPanelDateCtrl-tpls.html\\'\\\"></div></div><div ng-switch-when=Texarea><div ng-include=\\\"\\'editPanelTextareaCtrl-tpls.html\\'\\\"></div></div><div ng-switch-when=RichTextEditor><div ng-include=\\\"\\'editPanelRichTextEditorCtrl-tpls.html\\'\\\"></div></div><div ng-switch-when=Radio><div ng-include=\\\"\\'editPanelRadioCtrl-tpls.html\\'\\\"></div></div><div ng-switch-when=Checkbox><div ng-include=\\\"\\'editPanelCheckboxCtrl-tpls.html\\'\\\"></div></div><div ng-switch-when=BasicSelect><div ng-include=\\\"\\'editPanelBasicSelectCtrl-tpls.html\\'\\\"></div></div><div ng-switch-when=GroupedSelect><div ng-include=\\\"\\'editPanelGroupedSelectCtrl-tpls.html\\'\\\"></div></div></div><button class=\\\"btn btn-primary btn-block pull-right\\\" ng-click=closeEditPanel()>Close</button></div></div><div><div class=\\\"row advancedDemo\\\"><div ng-repeat=\\\"containers in dragDropModel\\\"><div dd-decor-drop-zone=\\\"\\\" dd-drop-zone-properties=easyFormDragDropProperties.dropZoneConfig.decoration[$index] dd-drop-zone-verbose-mode={{easyFormDragDropProperties.dropZoneConfig.verboseMode}} dd-drop-zone-current-index={{$index}} dd-drop-zone-add-new-line=insertNewLine()><div class=\\\"dropzone box box-yellow\\\"><ul dnd-list=containers dnd-allowed-types=\\\"[\\'containerType\\']\\\" dnd-external-sources=true dnd-dragover=\\\"dragoverCallbackContainer($parent.$parent.$index, $parent.$index, $index);\\\" dnd-drop=\\\"dropCallback(event, index, item, external, type, \\'containerType\\');\\\" class=row><li ng-repeat=\\\"items in containers\\\" dnd-draggable=items dnd-type=\\\"\\'containerType\\'\\\" dnd-effect-allowed=copyMove dnd-dragstart=\\\"\\\" dnd-moved=\\\"containers.splice($index, 1);\\\" dnd-disable-if=\\\"$parent.$index == 0\\\" dnd-copied=\\\"\\\"><div class=\\\"container-element box box-blue\\\" dd-decor-container=\\\"\\\" dd-container-properties=easyFormDragDropProperties.containerConfig.decoration[$index] dd-container-is-collpased=easyFormDragDropProperties.containerConfig.decoration[$index].isCollapsed dd-container-verbose-mode={{easyFormDragDropProperties.containerConfig.verboseMode}} dd-container-current-index={{$parent.$index}} dd-collapse-all=collapseAllGroupControl(exceptThisOne)><div dd-decor-include-container-here=\\\"\\\"><div dd-decor-line=\\\"\\\" dd-line-verbose-mode={{easyFormDragDropProperties.containerConfig.verboseMode}} dd-line-current-index={{$index}} dd-line-parent-index={{$parent.$index}} dd-remove-line=removeThisLine($index)><ul dnd-list=items dnd-allowed-types=\\\"[\\'itemType\\']\\\" dnd-horizontal-list=true dnd-external-sources=true dnd-disable-if=\\\"items.length > 2\\\" dnd-dragover=\\\"dragoverCallbackItems($parent.$parent.$index, $parent.$index, $index, external);\\\" dnd-drop=\\\"dropCallbackItems(event, index, $index,$parent.$index, $parent.$parent.$index, $parent.$parent.$parent.$index, item, external, type, \\'itemType\\');\\\" class=itemlist dd-content-counter=\\\"\\\" dd-value-when-placeholder=dndPlaceholder dd-value-when-dragging=dndDraggingSource dd-full-model=dragDropModel dd-content-counter-current-index={{$index}} dd-content-counter-parent-index={{$parent.$index}} dd-content-counter-force-css-refresh=command.forceRefresh><li ng-repeat=\\\"item in items\\\" dnd-draggable=item dnd-type=\\\"\\'itemType\\'\\\" dnd-effect-allowed=copyMove dnd-dragstart=\\\"\\\" dnd-moved=\\\"dndItemMoved($parent.$parent.$index, $parent.$index, $index);\\\" dnd-copied=\\\"\\\" dd-decor-item=\\\"\\\" dd-item-verbose-mode={{easyFormDragDropProperties.itemConfig.verboseMode}} dd-item-current-index={{$index}} dd-item-parent-index={{$parent.$index}} dd-item-parent-parent-index={{$parent.$parent.$index}} dd-items-count=items.length dd-item-css-class={{item.cssClass}}><div id=itemContent><div dd-no-editable-control=\\\"\\\" class=rightClickCtrl ng-class=\\\"{rightClickCtrlSelected : item.rightCliked === true}\\\" eda-set-right-clicked=\\\"setRightClicked(previousState, item)\\\" eda-right-click=\\\"toggleEditPanel($event, $parent.$index, $index, item)\\\" eda-selected-class=rightClickCtrlSelected eda-is-selected={{item.rightCliked}} eda-right-click-col-index={{$parent.$parent.$index}}><span ng-bind-html=\\\"item.label | trustThis\\\"></span></div></div></li></ul></div><div class=clearfix></div></div></div></li></ul></div></div></div></div></div></div></tab><tab select=tabJustSelected(1) active=tab.previewTab.active heading=Preview><div class=\\\"panel panel-default\\\"><div class=panel-body><form ng-submit=vm.onSubmit()><formly-form id=previewFormlyForm model=vm.model fields=vm.wfFormFields><span class=pull-right><button class=\\\"btn btn-primary\\\" type=submit>{{configuration.submitButtonText}}</button> <button class=\\\"btn btn-primary\\\" type=cancel>{{configuration.cancelButtonText}}</button></span></formly-form></form></div></div><div class=\\\"panel panel-default\\\"><div class=\\\"panel-heading heading-preview\\\" ng-click=\\\"ihm.preview.customizeFormButtonsExpanded =!ihm.preview.customizeFormButtonsExpanded\\\"><h3 class=panel-title><button class=\\\"btn btn-primary btn-xs\\\"><i class=fa ng-class=\\\"{\\'fa-angle-down\\':!ihm.preview.customizeFormButtonsExpanded, \\'fa-angle-up\\' : ihm.preview.customizeFormButtonsExpanded}\\\"></i></button> &nbsp;<i class=\\\"fa fa-wrench\\\"></i>&nbsp; Customize form buttons</h3></div><div class=panel-body><div collapse=ihm.preview.customizeFormButtonsExpanded><div class=row><div class=col-xs-6><div class=form-group><label for=inputSubmitButtontext class=\\\"greyText control-label\\\">Customize Submit button Text :</label><div><input type=text class=form-control id=inputSubmitButtontext placeholder=\\\"Submit button text\\\" ng-model=configuration.submitButtonText></div></div></div><div class=col-xs-6><div class=form-group><label for=inputCancelButtontext class=\\\"greyText control-label\\\">Customize Cancel button Text :</label><div><input type=text class=form-control id=inputCancelButtontext placeholder=\\\"Cancel button text\\\" ng-model=configuration.cancelButtonText></div></div></div></div></div></div></div><div class=\\\"panel panel-default\\\"><div class=\\\"panel-heading heading-preview\\\" ng-click=\\\"ihm.preview.formlyModelViewExpanded =!ihm.preview.formlyModelViewExpanded\\\"><h3 class=panel-title><button class=\\\"btn btn-primary btn-xs\\\"><i class=fa ng-class=\\\"{\\'fa-angle-down\\':!ihm.preview.formlyModelViewExpanded, \\'fa-angle-up\\' : ihm.preview.formlyModelViewExpanded}\\\"></i></button> &nbsp;<i class=\\\"fa fa-eye\\\"></i>&nbsp; DATA MODEL</h3></div><div class=panel-body><div collapse=ihm.preview.formlyModelViewExpanded><pre>\\n\t\t\t\t\t\t\t\t\t\t\t{{vm.model | json}}\\n\t\t\t\t\t\t\t\t\t\t</pre></div></div></div><div class=\\\"panel panel-default\\\"><div class=\\\"panel-heading heading-preview\\\" ng-click=\\\"ihm.preview.formlyFieldsViewExpanded =!ihm.preview.formlyFieldsViewExpanded\\\"><h3 class=panel-title><button class=\\\"btn btn-primary btn-xs\\\"><i class=fa ng-class=\\\"{\\'fa-angle-down\\':!ihm.preview.formlyFieldsViewExpanded, \\'fa-angle-up\\' : ihm.preview.formlyFieldsViewExpanded}\\\"></i></button> &nbsp;<i class=\\\"fa fa-eye\\\"></i>&nbsp; FIELDS MODEL (ready to save to database one)</h3></div><div class=panel-body><div collapse=ihm.preview.formlyFieldsViewExpanded><pre>\\n\t\t\t\t\t\t\t\t\t\t\t{{vm.wfFormFieldsOnlyNeededProperties | json}}\\n\t\t\t\t\t\t\t\t\t\t</pre></div></div></div><div class=\\\"panel panel-default\\\"><div class=\\\"panel-heading heading-preview\\\" ng-click=\\\"ihm.preview.saveThisFormExpanded =!ihm.preview.saveThisFormExpanded\\\"><h3 class=panel-title><button class=\\\"btn btn-primary btn-xs\\\"><i class=fa ng-class=\\\"{\\'fa-angle-down\\':!ihm.preview.saveThisFormExpanded, \\'fa-angle-up\\' : ihm.preview.saveThisFormExpanded}\\\"></i></button> &nbsp;<i class=\\\"fa fa-camera-retro\\\"></i>&nbsp; Save this form</h3></div><div class=panel-body><div collapse=ihm.preview.saveThisFormExpanded><div class=row><div class=col-xs-12><div class=form-group><label for=inputNameFormtext class=\\\"greyText control-label\\\">Name to this form :</label><div><input type=text class=form-control id=inputNameFormtext placeholder=\\\"Enter formName\\\" ng-model=configuration.formName></div></div></div></div><button class=\\\"btn btn-primary btn-block btn-lg\\\" ng-click=saveThisForm()>save this form</button></div></div></div></tab></tabset></div></div></section><hr><section><h6 class=text-right>Easy form generator : {{easyFormGeneratorVERSION}} — Erwan DATIN (MacKentoch)</h6></section></div></div></section>\");\n$templateCache.put(\"editModalTemplate.html\",\"<h1>no use right now</h1>\");}]);\n/**\n *  ------------------------------------------------------\n *   dragDropConfigProvider\n *  ------------------------------------------------------ \n *\n * All customizations to \"easy form generator - drag and drop version - \" will be placed here\n *\n * customize it in your in module_app.config \n * then use service in your application\n *\n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n */\nangular\n  .module('edaApp.providers.dragDropConfigProvider', [])\n  .provider('dragDropConfig', [\n\n    function(){\n\n      /**\n       * default drag drop item classes\n       * \n       * -> by default : up to 3 items per rows\n       */\n      var _listDragDropItemCssClasses = [\n                                            {\n                                                cssClass : 'col-md-12', \n                                                numberItemPerRow: 0\n                                            },\n                                            {\n                                                cssClass : 'col-md-12', \n                                                numberItemPerRow: 1\n                                            },                                        \n                                            {\n                                                cssClass : 'col-md-6', \n                                                numberItemPerRow: 2\n                                            },\n                                            {\n                                                cssClass : 'col-md-4', \n                                                numberItemPerRow: 3\n                                            }\n                                        ]; \n\n      /** easyFormDragDropProperties \n       *\n       * drag and drop appearance configuration properties\n       */\n      var _dragDropConfigModel =  {\n          dropZoneConfig : {\n                                decoration :  [\n                                                {\n                                                  WhenIndex: 0,\n                                                  ApplycssClass: 'col-md-4', \n                                                  fontAwesomeIcon: 'fa fa-level-up',\n                                                  title: 'Drag control from here : '\n                                                },\n                                                {\n                                                  WhenIndex: 1,\n                                                  ApplycssClass: 'col-md-8', \n                                                  fontAwesomeIcon: 'fa fa-level-down',\n                                                  title: 'Drop control into here : '\n                                                }\n                                              ],\n                                verboseMode : false\n                            },\n          containerConfig : {\n                                decoration :    [\n                                                  {\n                                                    WhenIndex     : 0,\n                                                    ApplycssClass : 'col-md-12', \n                                                    title         : 'Blank : ',\n                                                    groupId       : 'blank',\n                                                    isCollapsed   : true \n                                                  },                                \n                                                  {\n                                                    WhenIndex     : 1,\n                                                    ApplycssClass : 'col-md-12', \n                                                    title         : 'Headers : ',\n                                                    groupId       : 'headers',\n                                                    isCollapsed   : true \n                                                  },\n                                                  {\n                                                    WhenIndex     : 2,\n                                                    ApplycssClass : 'col-md-12', \n                                                    title         : 'Text inputs : ',\n                                                    groupId       : 'inputs' ,\n                                                    isCollapsed   : true\n                                                  },\n                                                  {\n                                                    WhenIndex     : 3,\n                                                    ApplycssClass : 'col-md-12',\n                                                    title         : 'Textareas : ',\n                                                    groupId       : 'textareas',\n                                                    isCollapsed   : true \n                                                  },\n                                                  {\n                                                    WhenIndex     : 4,\n                                                    ApplycssClass : 'col-md-12',\n                                                    title         : 'Radios : ',\n                                                    groupId       : 'radios',\n                                                    isCollapsed   : true \n                                                  },\n                                                  {\n                                                    WhenIndex     : 5,\n                                                    ApplycssClass : 'col-md-12',\n                                                    title         : 'Checkboxes : ',\n                                                    groupId       : 'checkboxes',\n                                                    isCollapsed   : true \n                                                  },\n                                                  {\n                                                    WhenIndex     : 6,\n                                                    ApplycssClass : 'col-md-12',\n                                                    title         : 'Selects : ',\n                                                    groupId       : 'selects',\n                                                    isCollapsed   : true \n                                                  } \n                                                ],\n\n                                verboseMode     : false, \n                                collapseEnabled : true,\n                                collapseCtrl    : [\n                                                    {\n                                                      atIndex : 0,\n                                                      collapse : true\n                                                    },\n                                                    {\n                                                      atIndex : 1,\n                                                      collapse : true\n                                                    }\n                                                  ]                                                                  \n                            },\n          itemConfig    :   {\n                              verboseMode : false, \n                            }                  \n                                  };  \n      /**\n       * drag and drop presentation model\n       *\n       * conatain all draggaable items \n       */\n      var _dragDropPresentationModel = [\n                                          //1 column here is control selection column\n                                          [],\n                                          [\n                                            //empty 1st line at initialisation\n                                            []\n                                          ]\n                                       ];\n\n      var _itemsNotToCountFoReal = {\n                                      //placeholder :         '',\n                                      itemBeingDragged :    ''\n                                   };\n      /**\n       * setListItemCssClass : to use in app.config\n       * -> if need to overrides/modify \"_defaultDragDropItemCssClasses\"\n       */\n      this.setListItemCssClass = function(fromConfig){\n                                _listDragDropItemCssClasses = [].concat(fromConfig);\n                                };            \n      \n      this.getItemsNotTocount = function(){\n                                return _itemsNotToCountFoReal;\n                                };          \n      \n      this.setItemsNotTocount = function(fromConfig){\n                                _itemsNotToCountFoReal = angular.copy(fromConfig);\n                                };\n\n      \n      this.addControlToDragDropPresentationModel = function(controlToAdd, groupToAdd){\n                                                      if (typeof controlToAdd !== 'undefined' &&\n                                                          typeof groupToAdd   !== 'undefined') {\n                                                        addToGroupControl(controlToAdd, groupToAdd);\n                                                      }\n                                                    };\n\n      this.getDragDropPresentationModel = function(){\n                                            /**\n                                             * \n                                             */\n                                            return _dragDropPresentationModel;\n                                          };\n\n      this.$get = [\n\n        function(){\n    \n          var Service = {};\n\n          Service.getListItemCssClass = function(){                                               \n                                        return _listDragDropItemCssClasses;\n                                        };\n          /**\n           * when counting items in a line : need to skip placeholder and hidden dragging source\n           * to get the right css to apply visible items\n           */\n          Service.getItemsNotToCount = function(){\n                                      return _itemsNotToCountFoReal;\n                                      }; \n         \n          /**\n           * return css class to apply depending numberOfItems (in line) as input param                 \n           */\n          Service.getItemCssDependingNumberItemsInRow =  function(numberOfItems){\n                                                          if(typeof numberOfItems !== 'undefined'){\n                                                            var classToReturn = '';\n                                                            for (var  i = _listDragDropItemCssClasses.length - 1; \n                                                                      i >= 0; \n                                                                      i--) {\n                                                              if (_listDragDropItemCssClasses[i].numberItemPerRow === numberOfItems) {\n                                                                classToReturn = _listDragDropItemCssClasses[i].cssClass;  \n                                                              }\n                                                            }\n                                                            return classToReturn;\n                                                          }else{\n                                                            return '';\n                                                          }     \n                                                          };                                          \n               \n          Service.getDistinctItemCssClass = function(){\n                                              var distinctCssClass = [];\n                                              angular.forEach(_listDragDropItemCssClasses, function(valueRef){\n\n                                                var cssClassRef = valueRef.cssClass;\n\n                                                if (distinctCssClass.length === 0){\n                                                  distinctCssClass.push(cssClassRef);\n                                                } else {\n                                                  var canAdd = true;\n\n                                                  angular.forEach(distinctCssClass, function(valueProc){\n                                                    var cssClassProc = valueProc;\n\n                                                    if (cssClassRef === cssClassProc) {\n                                                      canAdd = false;\n                                                    }\n\n                                                  });\n\n                                                  if (canAdd) distinctCssClass.push(cssClassRef);\n                                                }\n\n                                              });\n                                              return distinctCssClass;\n                                            };\n          Service.getDragDropConfigModel = function(){\n                                              /**\n                                               * \n                                               */\n                                              return _dragDropConfigModel;\n                                            };\n\n          Service.setDragDropConfigContainerDecorationCollapse = function(dragDropConfigModel, indexValue, isCollapsedBool){\n                                                                    if (typeof indexValue       !== 'undefined' &&\n                                                                        typeof isCollapsedBool  !== 'undefined') {\n\n                                                                      if (indexValue === parseInt(indexValue, 10)) {\n                                                                        dragDropConfigModel.containerConfig.decoration[indexValue].isCollapsed = isCollapsedBool;\n                                                                      }\n\n                                                                    }\n                                                                    return true;\n                                                                  };\n\n          Service.getDragDropPresentationModel = function(){\n                                                  /**\n                                                   * \n                                                   */\n                                                   return _dragDropPresentationModel;\n                                                 };\n\n          return Service;\n        } \n      ];\n\n      /**\n       * addToGroupControl : add control to _dragDropPresentationModel\n       * @param {[type]} thisControl : control to add\n       * @param {[type]} thisGroup   : groupId wher this control should be added\n       *\n       * NOTE : if _dragDropPresentationModel wrong initialized it will create list of group conforming to \n       * configModel\n       */\n      function addToGroupControl(thisControl, thisGroup){\n        /**\n         * search group if already exists\n         */\n        if (_dragDropPresentationModel[0].length > 0) {\n\n          /**\n           * case when _dragDropConfigModel.containerConfig.decoration.length is > to _dragDropPresentationModel[0].length\n           *\n           * for instance : initialization _dragDropPresentationModel[0] in between\n           */\n          if (_dragDropPresentationModel[0].length < _dragDropConfigModel.containerConfig.decoration.length) {\n            var missingGroupNumber = _dragDropConfigModel.containerConfig.decoration.length - _dragDropPresentationModel[0].length;\n\n            for (var i = 0; i < missingGroupNumber; i++) {\n              _dragDropPresentationModel[0].push([]);\n            }\n\n          }\n          /**\n           * push control to right index \n           * (deduced by _dragDropConfigModel.containerConfig.decoration.WhenIndex value for groupId === thisGroup)\n           */\n           _dragDropConfigModel.containerConfig.decoration.forEach(function(groupConfig){\n            if (thisGroup.addToGroupCtrl === groupConfig.groupId) {\n              _dragDropPresentationModel[0][groupConfig.WhenIndex].push(thisControl);\n            }\n           });\n\n        }else{\n          /**\n           * no group no control\n           *\n           * initialize _dragDropConfigModel.containerConfig.decoration list\n           */\n          _dragDropConfigModel.containerConfig.decoration.forEach(function(){\n            _dragDropPresentationModel[0].push([]);\n          });\n\n          /**\n           * push control to right index \n           * (deduced by _dragDropConfigModel.containerConfig.decoration.WhenIndex value for groupId === thisGroup)\n           */\n           _dragDropConfigModel.containerConfig.decoration.forEach(function(groupConfig){\n            if (thisGroup.addToGroupCtrl === groupConfig.groupId) {\n              _dragDropPresentationModel[0][groupConfig.WhenIndex].push(thisControl);\n            }\n           }); \n          \n        }\n      }      \n}]);\n/**\n *  ------------------------------------------------------\n *  provider : EasyFormGenFormlyBindingModels\n *  ------------------------------------------------------\n *\n *  configure all related to bing model (easy form generator - formly)\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/ \nangular\n\t.module('edaApp.providers.EasyFormGenFormlyBindingModels', [])\n\t.provider('EasyFormGenFormlyBindingModels', [\n\n\tfunction(){ \n\t \n\t\t/** \n\t\t * define all controls easy form genearator will manage\n\t\t */\n\t\tvar _easyFormListControls =\t{\n\t\t\t\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t\t\t\t * easyFormGenerator (no drag drop version) need this array in \n\t\t\t\t\t\t\t\t\t\t\t\t * the modal when adding control to row. \n\t\t\t\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t\t\t\t * drag drop version need this in control editor\n\t\t\t\t\t\t\t\t\t\t\t\t * \n\t\t\t\t\t\t\t\t\t\t\t\t * works in, pair with formlyProvider in case of special \n\t\t\t\t\t\t\t\t\t\t\t\t * control like 'RichTextEditor'\n\t\t\t\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\t\t\t\t//control array should be like :\n\t\t\t\t\t\t\t\t\t\t\t\t//\tcontrols: [\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t// \t{\n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tid \t\t\t\t\t\t\t\t: 'TextInput',  \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tname \t\t\t\t\t\t\t: 'Text input', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tsubtitle \t\t\t\t\t: 'Text input', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tgroup \t\t\t\t\t\t: 'input', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tformlyType \t\t\t\t: 'input', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tformlySubtype \t\t: '', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tformlyLabel \t\t\t: '', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tformlyRequired \t\t: false, \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tformlyDesciption \t: '', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tformlyOptions \t\t: []\n\t\t\t\t\t\t\t\t\t\t\t\t// \t},\t\n\t\t\t\t\t\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tid \t\t\t\t\t\t\t\t: 'Password',  \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tname \t\t\t\t\t\t\t: 'Password', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tsubtitle \t\t\t\t\t: 'Password', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tgroup \t\t\t\t\t\t: 'input', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tformlyType \t\t\t\t: 'input', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tformlySubtype \t\t: 'password', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tformlyLabel \t\t\t: '', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tformlyRequired \t\t: false, \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tformlyDesciption \t: '', \n\t\t\t\t\t\t\t\t\t\t\t\t// \t\tformlyOptions \t\t: []\n\t\t\t\t\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t\t\t\t\t\t// \t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t//\t] \t\t\t\t\t\t\t\t\t\t\t\t\t\n\t                    \tcontrols : [],\n\n\t                      selectedControl : 'none' ,\n\t                      temporyConfig : {\n\t                                        selectedControl\t\t: 'none',\n\t                                        formlyLabel\t\t\t\t: 'label',  \n\t                                        formlyRequired\t\t: false, \n\t                                        formlyDesciption\t: '',\n\t                                        formlyPlaceholder\t: '',\n\t                                        formlyOptions \t\t: []\n\t                                      } \n\t\t};\n\n\n\t\tvar _easyFormEmptyConfigurationLineModel =                                 \t\t\t\n\t            {\n\t              line \t\t\t\t\t: 1,                                       \n\t              activeColumn \t: 1,\n\t              columns \t\t\t: [\n\t                                {  \n\t                                  numColumn \t: 1,\n\t                                  exist \t\t\t:true, \n\t                                  control \t\t: {\n\t                                                  type:'none',\n\t                                                  key: 'none',\n\t                                                  // templateOptions: {\n\t                                                  //                     label: 'none',\n\t                                                  //                     placeholder: 'none',\n\t                                                  //                     required: false,\n\t                                                  //                     description: 'Descriptive text'\n\t                                                  //                   }\n\t                                                }\n\t                                  }\n\t                               ]\n\t             }                                 \n\t        ;\n\t    var _emptyControlFieldModel = {\n\t                                  control \t\t: {\n\t                                                  type:'none',\n\t                                                  key: 'none',\n\t                                                }\t    \t\n\t    };\n\t\t/**\n\t\t * formly field model (back model = configuration model)\n\t\t * at initial state (1 line empty)\n\t\t *\n\t\t * If need a configuration before loading from database \n\t\t * or loading from saved object better use _easyFormReloadConfigurationModel \n\t\t */\n\t\tvar _easyFormInitialStateConfigurationModel =  {                                \n\t    /**\n\t     * commun all easy form generator ways\t\n\t     */\n\t    submitButtonText \t: 'submit',\n\t    cancelButtonText \t: 'cancel',\n\t    lines : [].concat(_easyFormEmptyConfigurationLineModel)\n    };\n\n    var _easyFormInitialStateConfigurationModelAddOnForStepWay = {\n\t\t\t/**\n\t\t\t * specific easy form generator — step way — (not drag and drop way), needed for wizard management\n\t\t\t */\n\t    activeLine \t\t\t: 1,   \n\t    listConfigStep \t: [\n\t                        'init',\n\t                        'first',\n\t                        'second',\n\t                        'third'\n\t                  \t\t],\n\t    stepIndicators \t: [\n\t                        true,\n\t                        false,\n\t                        false,\n\t                        false\n\t                      ], \n\t    configStepCounter : 0,     \t\n    };\t\n\n\n    var _easyFormReloadConfigurationModel =  {                                \n\t    /**\n\t     * commun all easy form generator ways\t\n\t     *\n\t     * this model when loading as initial state \n\t     * -> when then loading a previous configuration\n\t     * i.e. : loading from database\n\t     *\n\t     * If need a model for intitial state (without loadin data)\n\t     * better use _easyFormInitialStateConfigurationModel\n\t     */\n\t    submitButtonText \t: 'submit',\n\t    cancelButtonText \t: 'cancel',\n\t    lines : []\n    };\n\n    var _headerTemplates = \t{\n    \t\t\t\t\t\t\t\t\t\t\t\t\tcssClass \t\t: ['col-xs-12', 'col-xs-6', 'col-xs-4'],\n    \t\t\t\t\t\t\t\t\t\t\t\t\ttextContent : '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n    \t\t\t\t\t\t\t\t\t\t\t\t\thtml_part1 \t: [\n\t\t                                          //'<div class=\"row\">',\n\t\t                                          '  <div class=\"',\n\n\t\t                                         ].join(''),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectedClass : '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thtml_part2 \t: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\">',\n\t\t                                          '    <h2 class=\"text-center\">'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].join(''),\t\t\t\t\t\t\t \n\t\t                          html_part3  : this.textContent,\n\t\t                          html_part4 \t:  [ \n\t\t                                          '    <h2>',\n\t\t                                          '    <hr/>',\n\t\t                                          '  </div>',\n\t\t                                          //'</div>'\n\t\t                                         ].join(''),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsimpleHtml1 : \t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'<h2 class=\"text-center\">'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].join(''),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsimpleHtml2 : \t[\n\t\t                                          '    <h2>',\n\t\t                                          '    <hr/>',\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].join('')\t\t\t\t\t\t \n    \t\t\t\t\t\t\t\t\t\t\t\t};\n\n    var _formlyControlTemplates =\t{\n\t\t                                className : ['col-xs-12', 'col-xs-6', 'col-xs-4'],\n\t\t                                type      : '',\n\t\t                                key       : '',\n\t\t                                templateOptions: {\n\t\t                                    type        : '',\n\t\t                                    label       : '',\n\t\t                                    required    : '',\n\t\t                                    placeholder : '',\n\t\t                                    description : '',\n\t\t                                    options     : ''    \n\t\t                                }\n\t\t                              };\n\n\t\tvar _particularControlProperties = \t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrolType \t: 'datepicker',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tproperties \t\t: [\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisRoot  \t\t\t\t\t: false, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisTemplateOptions : true, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue \t\t\t\t\t\t: 'datepickerPopup'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t];\n\n\n\n\t\tthis.getAllParticularControlProperties = function(){\n\t\t\t/**\n\t\t\t * \n\t\t\t */\n\t\t\treturn _particularControlProperties;\n\t\t};\n\n\t\tthis.addParticularControlProperties = function(newParticularControlProperty){\n\t\t\t/**\n\t\t\t * test object param has waited properties\n\t\t\t */\n\t\t\tif (('controlType' \tin newParticularControlProperty) &&\n\t\t\t\t\t('properties' \tin newParticularControlProperty)) {\n\t\t\t\t/**\n\t\t\t\t * test controlType does not already exists\n\t\t\t\t *\n\t\t\t\t * here will update properties (correponding controlType) if already exists\n\t\t\t\t */\n\t\t\t\tvar isAnUpdate = false;\n\t\t\t\tif ( _particularControlProperties.length > 0 ) {\n\n\t\t\t\t\t_particularControlProperties.forEach(function(controlProp){\n\n\t\t\t\t\t\tif (controlProp.controlType === newParticularControlProperty.controlType) {\n\t\t\t\t\t\t\tcontrolProp.properties = [].concat(newParticularControlProperty.properties);\n\t\t\t\t\t\t\tisAnUpdate = true;\n\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * it is no update so ; add newParticularControlProperty\n\t\t\t\t */\n\t\t\t\tif (!isAnUpdate) {\n\n\t\t\t\t\t_particularControlProperties.push(newParticularControlProperty);\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\treturn _particularControlProperties;\t\t\t\n\t\t};\n\n\n\n\n\n\t\tthis.getEasyFormListControls = function(){\n\t\t\t/**\n\t\t\t * \n\t\t\t */\n\t\t\treturn _easyFormListControls;\n\t\t};\n\n\t\tthis.addEasyFormControlToList = function(controlDeclaration){\n\t\t\tif (typeof controlDeclaration !== 'undefined'){\n\t\t\t\t_easyFormListControls.controls.push(controlDeclaration);\n\t\t\t}\n\t\t};\n\n\n\n\t\tthis.getHeaderTemplates = function(){\n\t\t\t/**\n\t\t\t * \n\t\t\t */\n\t\t\treturn _headerTemplates;\n\t\t};\n\n\t\tthis.addHeaderTemplateCssClass = function(cssClassToAdd){\n\t\t\tif (typeof cssClassToAdd !== 'undefined') {\n\t\t\t\t_headerTemplates.cssClass.push(cssClassToAdd);\n\t\t\t}\n\t\t};\n\n\n\n\n\n\t\tthis.getFormlyControlTemplate = function(){\n\t\t\t/**\n\t\t\t * \n\t\t\t */\n\t\t\treturn _formlyControlTemplates;\n\t\t};\n\n\t\tthis.addformlyControlTemplatesCssClass = function(cssClassToAdd){\n\t\t\tif (typeof cssClassToAdd !== 'undefined') {\n\t\t\t\t_formlyControlTemplates.className.push(cssClassToAdd);\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * setFormlyControlTemplate : overrides ControlTemplate\n\t\t */\n\t\tthis.setFormlyControlTemplate  = function(newFormlyControlTemplate){\n\t\t\t/**\n\t\t\t * test object param has minimum waited properties\n\t\t\t */\n\t\t\tif (('className'\t\t\t\tin newFormlyControlTemplate) &&\n\t\t\t\t\t('type' \t\t\t\t\t\tin newFormlyControlTemplate) &&\n\t\t\t\t\t('key' \t\t\t\t\t\t\tin newFormlyControlTemplate) &&\n\t\t\t\t\t('templateOptions') in newFormlyControlTemplate) {\n\t\t\t\t_formlyControlTemplates = angular.copy(newFormlyControlTemplate);\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\t/**\n\t\t * TODO : add an extend properties method to _formlyControlTemplates\n\t\t */\n\t\t\n\t\tthis.$get =\t[\n\n\t\t\tfunction(){\n\t\t\t\tvar Service = {};\n\n\t\t\t\tService.getEasyFormListControls = function(){\n\t\t\t\t\treturn _easyFormListControls;\n\t\t\t\t};\n\t\t\t\t/**\n\t\t\t\t * getEasyFormInitialStateConfigurationModel : get configuration model \n\t\t\t\t * (back model equivalent to formly field model) at \"initial state = 1 empty line\"\n\t\t\t\t * \n\t\t\t\t * @param  bool addStepWayProperties  : add or not properties specefic to easy form generator step way\n\t\t\t\t * @return object  configuration model\n\t\t\t\t */\n\t\t\t\tService.getEasyFormInitialStateConfigurationModel = function(addStepWayProperties){\n\t\t\t\t\tvar initialConfigurationModel = angular.copy(_easyFormInitialStateConfigurationModel);\n\t\t\t\t\tif (typeof addStepWayProperties !== 'undefined') {\n\t\t\t\t\t\tif (addStepWayProperties) {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * add properties specific to step way\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tangular.extend(initialConfigurationModel, _easyFormInitialStateConfigurationModelAddOnForStepWay);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn initialConfigurationModel;\n\t\t\t\t};\n\t\t\t\t/**\n\t\t\t\t * getEasyFormInitialStateConfigurationModel : get configuration model \n\t\t\t\t * (back model equivalent to formly field model) at \"initial state = 0 line\"\n\t\t\t\t * => good model to load a previous saved into it (just load lines and buttons names then)\n\t\t\t\t * \n\t\t\t\t * @param  bool addStepWayProperties  : add or not properties specefic to easy form generator step way\n\t\t\t\t * @return object  configuration model\n\t\t\t\t */\n\t\t\t\tService.getEasyFormReloadConfigurationModel = function(addStepWayProperties){\n\t\t\t\t\tvar initialConfigurationModel = angular.copy(_easyFormReloadConfigurationModel);\n\t\t\t\t\tif (typeof addStepWayProperties !== 'undefined') {\n\t\t\t\t\t\tif (addStepWayProperties) {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * add properties specific to step way\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tangular.extend(initialConfigurationModel, _easyFormInitialStateConfigurationModelAddOnForStepWay);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn initialConfigurationModel;\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * getEasyFormEmptyConfigurationLineModel to get \"empty line model template\"\n\t\t\t\t * NOTE : \"empty line\" means no control in this line\n\t\t\t\t */\n\t\t\t\tService.getEasyFormEmptyConfigurationLineModel = function(){\n\t\t\t\t\treturn _easyFormEmptyConfigurationLineModel;\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * get an empty control model from coniguration model\n\t\t\t\t */\n\t\t\t\t Service.getEasyFormConfigurationEmptyControlModel = function(){\n\t\t\t\t \treturn _emptyControlFieldModel;\n\t\t\t\t };\n\n\t\t\t\t/**\n\t\t\t\t *\n\t\t\t\t *\n\t\t\t\t * \n\t\t\t\t * TODO : helpers to improve \"formfielManage Service\"\n\t\t\t\t *\n\t\t\t\t * - objective it to replace Add N ColumnControl methods\n\t\t\t\t * \n\t\t\t\t */\n\n\t\t\t\t/**\n\t\t\t\t * getRawHeaderTemplates : return full headerTemplates object\n\t\t\t\t *\n\t\t\t\t * better use getHeaderTemplateForNcolumnLine to return a particular header template\n\t\t\t\t */\n\t\t\t\tService.getRawHeaderTemplates = function(){\n\t\t\t\t\t/**\n\t\t\t\t\t * \n\t\t\t\t\t */\n\t\t\t\t\treturn _headerTemplates;\n\t\t\t\t};\n\t\t\t\t/**\n\t\t\t\t * [getHeaderTemplateForNcolumnLine : return a particular header template depending n columns in lines\n\t\t\t\t * @param   nbColInLines : an integer reflecting numbers of column template\n\t\t\t\t * @param   textContent  : header's text\n\t\t\t\t * @return  an headerTemplate object\n\t\t\t\t */\n\t\t\t\tService.getHeaderTemplateForNcolumnLine = function(nbColInLines, textContent){\n\t\t\t\t\tif (typeof nbColInLines !== 'undefined' &&\n\t\t\t\t\t\t\ttypeof textContent \t!== 'undefined') {\n\n\t\t\t\t\t\tif (nbColInLines === parseInt(nbColInLines, 10)) {\n\n\t\t\t\t\t\t\tif (nbColInLines <=  _headerTemplates.cssClass.length) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t    \tvar headerToReturn = {};\n\t\t\t\t\t    \theaderToReturn.className = _headerTemplates.cssClass[nbColInLines - 1];\n\t\t\t\t\t    \t/**\n\t\t\t\t\t    \t * header html property depends this property dont forget to set it before reading html property\n\t\t\t\t\t    \t */\n\t\t\t\t\t    \t_headerTemplates.textContent = textContent;\n\t\t\t\t\t\t\t\t_headerTemplates.selectedClass = headerToReturn.className;\n\n\t\t\t\t\t    \t// headerToReturn.template = [\n\t\t\t\t\t    \t// \t\t\t\t\t\t\t\t\t\t\t\t\t\t_headerTemplates.html_part1,\n\t\t\t\t\t\t\t\t// \t\t\t\t\t\t\t\t\t\t\t\t\t\t_headerTemplates.selectedClass,\n\t\t\t\t\t\t\t\t// \t\t\t\t\t\t\t\t\t\t\t\t\t\t_headerTemplates.html_part2,\n\t\t\t\t\t    \t// \t\t\t\t\t\t\t\t\t\t\t\t\t\ttextContent,\n\t\t\t\t\t    \t// \t\t\t\t\t\t\t\t\t\t\t\t\t\t_headerTemplates.html_part4\n\t\t\t\t\t    \t// \t\t\t\t\t\t\t\t\t\t\t\t\t].join('');\n\n\t\t\t\t\t    \theaderToReturn.template = [\n\t\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_headerTemplates.simpleHtml1,\n\t\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextContent,\n\t\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_headerTemplates.simpleHtml2\n\t\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t].join('');\n\n\t\t\t\t\t    \treturn headerToReturn;\n\t\t\t\t    \t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\n\n\n\n\t\t\t\t/**\n\t\t\t\t * getRawFormlyControlTemplates : return full generic control templates object\n\t\t\t\t *\n\t\t\t\t * better use getFormlyControlTemplateForNcolumnLine to return a particular control template\n\t\t\t\t */\n\t\t\t\tService.getRawFormlyControlTemplates = function(){\n\t\t\t\t\treturn _formlyControlTemplates;\n\t\t\t\t};\n\t\t\t\t/**\n\t\t\t\t * [getFormlyControlTemplateForNcolumnLine : return a particular control template depending n columns in lines\n\t\t\t\t * @param   nbColInLines : an integer reflecting numbers of column template\n\t\t\t\t * @return  an empty generic control template object\n\t\t\t\t */\n\t\t\t\tService.getFormlyControlTemplateForNcolumnLine = function(nbColInLines, controlType){\n\t\t\t\t\tif (typeof nbColInLines !== 'undefined') {\n\n\t\t\t\t\t\tif (nbColInLines === parseInt(nbColInLines, 10)) {\n\t\t\t\t\t\t\tif (nbColInLines <=  _formlyControlTemplates.className.length) {\n\n\t\t\t\t\t\t\t\tvar controlToReturn = angular.copy(_formlyControlTemplates);\n\t\t\t\t\t\t\t\tcontrolToReturn.className = _formlyControlTemplates.className[nbColInLines - 1];\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * check controlType: it may require another particular property\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tif (typeof controlType !== 'undefined') {\n\n\t\t\t\t\t\t\t\t\t_particularControlProperties.forEach(function(controlProp){\n\n\t\t\t\t\t\t\t\t\t\tif (controlProp.controlType === controlType) {\n\t\t\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t\t\t * add all properties this controlType has\n\t\t\t\t\t\t\t\t\t\t\t * \n\t\t\t\t\t\t\t\t\t\t\t * NOTE : dot expression and bracket expression to access object property\n\t\t\t\t\t\t\t\t\t\t\t * http://www.ecma-international.org/ecma-262/5.1/#sec-11.2.1\n\t\t\t\t\t\t\t\t\t\t\t */\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tcontrolProp.properties.forEach(function(aPropToAdd){\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (aPropToAdd.isRoot) controlToReturn[aPropToAdd.value] = '';\n\t\t\t\t\t\t\t\t\t\t\t\tif (aPropToAdd.isTemplateOptions) controlToReturn.templateOptions[aPropToAdd.value] = '';\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t    \treturn controlToReturn;\n\t\t\t\t    \t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\treturn Service;\n\n\t\t\t}\n\n\t\t];\t\n\t\t\n\t}]);\n/**\n *  ------------------------------------------------------\n *  module = \"providers\" container\n *  ------------------------------------------------------\n *      Syntax (convention) :\n *          \"edaApp\" = application\n *          \"edaApp.providers\" = container services module\n *\n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\nangular\n\t.module('edaApp.providers', [\t'edaApp.providers.dragDropConfigProvider',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.providers.EasyFormGenFormlyBindingModels', \n\tfunction () {\n\t\n\t}]);\n\n/**\n *  ------------------------------------------------------\n *  module = \"controllers\" container\n *  ------------------------------------------------------\n *\n *  This module is a container -> it must be injected in the application -> so it will inject all controllers injected here\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp.controllers', [\t'edaApp.controllers.edaMainController',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.controllers.edaEditController',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.controllers.edaEditMODALController',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.controllers.edaEditPanelController',\t\t\t\t\t\t\t\n\t]);\n\n/**\n *  ------------------------------------------------------\n *   edaEditController\n *  ------------------------------------------------------ \n *\n * main controller for viewing / editing / managing forms\n *\n *\n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n */ \nangular\n  .module('edaApp.controllers.edaEditController', [])\n  .controller('edaEditController', [\t'$scope', \n                                        'easyFormGenVersion',\n                                        '$filter',\n                                        '$anchorScroll',\n          \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'toaster', \n          \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'$timeout',\n                                        '$modal',\n                                        '$log', \n                                        'formFieldManage',\n                                        'controllerModalProxy',\n                                        'dragDropItemDecorationService',\n                                        'dragDropConfig',\n                                        'ddModelConfModelProxyService',\n                                        'ddItemRightClickedManager',\n  function (\t$scope, \n              easyFormGenVersion,\n              $filter,\n              $anchorScroll,\n\t\t\t\t\t\t\ttoaster,\n\t\t\t\t\t\t\t$timeout, \n              $modal,\n              $log, \n              formFieldManage, \n              controllerModalProxy,\n              dragDropItemDecorationService,\n              dragDropConfig,\n              ddModelConfModelProxyService,\n              ddItemRightClickedManager) {\n\n\n\n  /**\n   * versionning\n   */\n  \n  $scope.easyFormGeneratorVERSION = easyFormGenVersion;\n\n  /**\n   * tab managment\n   */\n  $scope.tab =  {\n                  editTab : {active : true},\n                  previewTab : {active : false},\n                };\n\n\n  /**\n   * formly models\n   */\n  $scope.vm = this;\n  /**\n   * model filled by form :\n   */\n  $scope.vm.model = {};\n  /**\n   * form schema : \n   * (filled from $scope.configuration on drag an drop events)\n   */\n  $scope.vm.wfFormFields = [];\n  /**\n   * wfFormFieldsOnlyNeededProperties : formly field model \n   * (clean model : just needed properties\n   *   -> that on is not bound to angular formly \n   *   -> could be saved to database\n   * )\n   */\n  $scope.vm.wfFormFieldsOnlyNeededProperties = []; \n\n  /**\n   * preview tab : manage collapse/expend states\n   */\n  $scope.ihm = {\n                  preview : {\n                                formlyModelViewExpanded : true,\n                                formlyFieldsViewExpanded : true,\n                                customizeFormButtonsExpanded : true,\n                                saveThisFormExpanded : true  \n                            }\n\n  };\n\n\n  /**\n   * easyFormDragDropProperties : configure drag and drop apearance\n   *\n   * — see dragDropConfig provider —\n   */\n  $scope.easyFormDragDropProperties = dragDropConfig.getDragDropConfigModel();\n  /**\n   * dragDropModel : darg drop presentation model\n   *\n   * manage drag and drop UI : drag and drops events will change it then change configuration model\n   */\n  $scope.dragDropModel = [].concat(dragDropConfig.getDragDropPresentationModel());\n\n  //console.dir(  {'dragDropModel' : $scope.dragDropModel});\n\n\n \n   //column ref                         \n   $scope.numberOfColumns = 1;\n   $scope.MaxNumberOfColumns = 3;\n   $scope.MinNumberOfColumns = 1;\n\n\n  ///////////////////////////////////////////////////////////////////////////////////\n  // configuration model (contains array of lines which contains array of columns)\n  ///////////////////////////////////////////////////////////////////////////////////\n  $scope.configuration = {};\n  /**\n   * formFieldManage.initConfigurationEditFromScratch(_OBJECT TO INIT_, _BOOL ADD STEP WAY PROPERTIES_)\n   */\n  formFieldManage.initConfigurationEditFromScratch($scope.configuration , false);\n  \n  // var testModel =  [\n  //                   {\n  //                       \"line\": 1,\n  //                       \"activeColumn\": 1,\n  //                       \"columns\": [\n  //                           {\n  //                               \"numColumn\": 1,\n  //                               \"exist\": true,\n  //                               \"control\": {\n  //                                   \"className\": \"col-xs-12\",\n  //                                   \"type\": \"header\",\n  //                                   \"key\": \"\",\n  //                                   \"templateOptions\": {\n  //                                       \"label\": \"\",\n  //                                       \"required\": false,\n  //                                       \"description\": \"Welcome\",\n  //                                       \"placeholder\": \"\",\n  //                                       \"options\": [\n  //                           ],\n  //                                       \"type\": \"\"\n  //                                   },\n  //                                   \"selectedControl\": \"Header\",\n  //                                   \"subtype\": \"\",\n  //                                   \"cssClass\": \"col-xs-12\",\n  //                                   \"edited\": true\n  //                               }\n  //               }\n  //           ]\n  //       },\n  //                   {\n  //                       \"line\": 2,\n  //                       \"activeColumn\": 1,\n  //                       \"columns\": [\n  //                           {\n  //                               \"numColumn\": 1,\n  //                               \"exist\": true,\n  //                               \"control\": {\n  //                                   \"className\": \"col-xs-12\",\n  //                                   \"type\": \"subTitle\",\n  //                                   \"key\": \"\",\n  //                                   \"templateOptions\": {\n  //                                       \"label\": \"\",\n  //                                       \"required\": false,\n  //                                       \"description\": \"Hello\",\n  //                                       \"placeholder\": \"\",\n  //                                       \"options\": [\n  //                           ],\n  //                                       \"type\": \"\"\n  //                                   },\n  //                                   \"selectedControl\": \"Subtitle\",\n  //                                   \"subtype\": \"\",\n  //                                   \"edited\": true\n  //                               }\n  //               }\n  //           ]\n  //       }\n  //   ];\n  // /**\n  //  * TODO to bind model from saved one\n  //  * from @krupak :fixing loading model bug\n  //  */\n  // formFieldManage.bindConfigurationLines($scope.configuration, testModel, false);\n  // formFieldManage.applyConfigurationToformlyModel(  \n  //                                                   $scope.configuration, \n  //                                                   $scope.vm.wfFormFields, \n  //                                                   $scope.vm.model\n  //                                                 );                   \n  // $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n  // ddModelConfModelProxyService.loadDragDropModelFromConfigurationModel( \n  //                                                   $scope.configuration, \n  //                                                   $scope.dragDropModel\n  //                                                   );   \n  // \n  \n  \n  \n  \n  \n  \n  \n  \n  //need to bind dragdrop model now\n  \n  \n  /**\n   * init proxyModel \n   * (object shared between this controller and edit panel controlelr)\n   */\n  controllerModalProxy.initProxyModel();\n  /**\n   * collapse all other group of draggable controls : when a group control expands\n   */\n  $scope.collapseAllGroupControl = function(allExceptThisGroupIndex){\n    \n    angular.forEach($scope.easyFormDragDropProperties.containerConfig.decoration, function(value){\n      if (value.WhenIndex !== allExceptThisGroupIndex) {\n          dragDropConfig.setDragDropConfigContainerDecorationCollapse($scope.easyFormDragDropProperties, value.WhenIndex, true);\n      }\n    });\n    \n  };\n\n\n\n  $scope.vm.onSubmit = onSubmit;\n  \n  function onSubmit() {\n  \n       toaster.pop({\n            type: 'info',\n            timeout:2000,\n            title: 'should save data model if it were not a static example',\n            body: 'data :' + $filter('json')($scope.vm.model, 4),                \n            showCloseButton: true\n      }); \n  }\n\n\n\n  // /**\n  //  * init formly control list\n  //  */\n  // //needed for select : list all existing forms\n  // $scope.loadExistingFormsList = loadExistingFormsAsList();\n\n\n  // function loadExistingFormsAsList(){\n  //   //If it were not a static html, it should call server to retrieve data from database :\n  //   // $scope.formlyList = formsByIdService.query();  \n  // }\n\n  // //load on init\n  // loadExistingFormsAsList();\n\n  // $scope.previewLoadedForm = {fieldsModel:[]};\n  // $scope.configurationLoaded = {};\n\n  // $scope.previewExistingform = function(formlyform){\n\n  //  var configlines = JSON.parse(formlyform.formlyField);\n  //  //here to replace with $scope.configuration : initialise configuration with lines \n  //  $scope.configurationLoaded = {};\n  //  formFieldManage.bindConfigurationLines($scope.configurationLoaded,configlines);\n\n  //  formFieldManage.applyConfigurationToformlyModel($scope.configurationLoaded, $scope.previewLoadedForm.fieldsModel, $scope.vm.model);\n\n  //  $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n\n  //  $scope.previewLoadedForm.cancelButtonText = formlyform.cancelButtonText;\n  //  $scope.previewLoadedForm.submitButtonText = formlyform.submitButtonText;\n  // };\n\n\n\n\n\n\n  //init number of configuration lines\n  $scope.resetToZeroModel = function(){\n     $scope.configuration.activeLine = 1;\n\n     if ($scope.configuration.lines.length > 1) {\n        $scope.configuration.lines.splice(1, $scope.configuration.lines.length - 2);\n     }\n     return $scope.countConfigurationModelLines();\n  };  \n\n\n\n\n\n\n\n  //return count configuration lines\n  $scope.countConfigurationModelLines = function(){\n  \treturn $scope.configuration.lines.length;\n  };    \n  //switch to line\n  $scope.setActiveLineNumber = function(lineNumber){\n  \tif (lineNumber <= $scope.countConfigurationModelLines()) {\n  \t\t$scope.configuration.activeLine = lineNumber;\n  \t}\n  };                \n\n  $scope.upThisLine = function(indexLine){  \t\n  \tif (indexLine > -1) {\n  \t\t\tif ($scope.configuration.lines[indexLine - 1]) {\n  \t\t\t\tvar currentLineObj = $scope.configuration.lines[indexLine];\n  \t\t\t\t$scope.configuration.lines.splice(indexLine , 1);\n  \t\t\t\t$scope.configuration.lines.splice((indexLine - 1), 0, currentLineObj);  \t\n          //manage selected aciveLine\n          $scope.configuration.activeLine = 1;\n  \t\t\t}\n  \t}\n      //re-render formfield \n    formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n\n    $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);     \n  };\n\n\n  $scope.downThisLine = function(indexLine){\n  \tif (indexLine > -1) {\n  \t\t\tif ($scope.configuration.lines[indexLine + 1]) {\n  \t\t\t\tvar currentLineObj = $scope.configuration.lines[indexLine];\n  \t\t\t\t$scope.configuration.lines.splice(indexLine , 1);\n  \t\t\t\t$scope.configuration.lines.splice((indexLine + 1), 0, currentLineObj);  \n          //manage selected aciveLine\n          $scope.configuration.activeLine = 1;\n  \t\t\t}\n      }     \n      //re-render formfield \n    formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model); \n    $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);   \n  };\n\n\n\n  //must be remove a line with index of line to delete\n  $scope.removeThisLine = function(index){\n  \tif (index > -1) {\n  \t\tif ($scope.configuration.lines.length > 1) {\n          //manage selected aciveLine\n          if ($scope.configuration.activeLine === index + 1) {\n            $scope.configuration.activeLine = 1;\n          }\n  \t  \t\t$scope.configuration.lines.splice(index, 1);\n  \t\t}else{\n  \t  \t\t$timeout(function(){\n  \t\t        toaster.pop({\n  \t\t                type: 'warning',\n  \t\t                title: 'Last line' ,\n  \t\t                body: 'Can\\'t delete the last line',                \n  \t\t                showCloseButton: true\n  \t\t\t        });\n  \t\t    }, 100); \n  \t\t}\n\n    //re-render formfield \n    formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n    $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n  \t}\n  };\n\n\n\n\n\n  $scope.increaseNumberOfColumns = function(){\n\n    if ($scope.configuration.lines[$scope.configuration.activeLine -1].columns.length < $scope.MaxNumberOfColumns) {\n  \tvar newNumberOfColumns = $scope.configuration.lines[$scope.configuration.activeLine -1].columns.push(\n          \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n          \t\t\t\t\t\t\t\t\t\t\t\t\t\t                            numColumn: -1,\n          \t\t\t\t\t\t\t\t\t\t\t\t\t\t                            exist: true, \n          \t\t\t\t\t\t\t\t\t\t\t\t\t\t                            control: {\n          \t\t\t\t\t\t\t\t\t\t\t\t\t\t                                        type:'none',\n          \t\t\t\t\t\t\t\t\t\t\t\t\t\t                                        key: 'none'\n          \t\t\t\t\t\t\t\t\t\t\t\t\t\t                                      }                                         \n          \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t }\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n  \t\n  \t $scope.configuration.lines[$scope.configuration.activeLine -1].columns[newNumberOfColumns - 1].numColumn = newNumberOfColumns; \n  }\n     //re-render formfield \n    formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model); \n\n    $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n};\n\n\n  $scope.decreaseNumberOfColumns = function(indexLine, indexColumn){\n  \tif ($scope.configuration.lines[$scope.configuration.activeLine -1].columns.length > 1) {\n  \t\t$scope.configuration.lines[$scope.configuration.activeLine -1].columns.splice($scope.configuration.lines[$scope.configuration.activeLine -1].columns.length -1, 1);\n  \t}\n    //re-render formfield \n    formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);  \n\n    $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);  \n  };\n\n\n\n\n\n\n\n\n\n\n\n\n\n  ////////////////////////////////////////////////////////////\n  //             porperties control (STEP 3)\n  ////////////////////////////////////////////////////////////\n\n  $scope.saveThisForm = function(){\n    if (typeof $scope.configuration.formName === 'undefined') {\n    toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: 'Form name is undefined',\n            body: 'Form has not been saved.',                \n            showCloseButton: true\n      });\n      return false;\n    }\n\n    if ($scope.configuration.formName === '') {\n    toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: 'Form name is required',\n            body: 'Form has not been saved.',                \n            showCloseButton: true\n      });\n      return false;\n    }\n    /**\n     * [type description]\n     * @type {String}\n     */\n    toaster.pop({\n            type: 'wait',\n            timeout:10000,\n            title: 'Form is being saved',\n            body: 'Wait.',                \n            showCloseButton: true\n      });\n\n//       var wfForm = new formsByIdService();\n//       var formSavingIsOK = true;\n// \n//       wfForm.formName = $scope.configuration.formName;\n//       wfForm.submitButtonText = $scope.configuration.submitButtonText;\n//       wfForm.cancelButtonText = $scope.configuration.cancelButtonText;\n// \n//       wfForm.formlyField = JSON.stringify($scope.configuration.lines); \n\n      // save to database here \n      // wfForm.$save()\n      //             .then(function(res)  {    formSavingIsOK = true;    })\n      //             .catch(function(req) { \n      //                                   toaster.clear();\n      //                                   formSavingIsOK = false; \n      //                                   toaster.pop({\n      //                                           type: 'error',\n      //                                           timeout:2000,\n      //                                           title: 'Error while saving form',\n      //                                           body: 'Sorry, an Error occured while saving form.',                \n      //                                           showCloseButton: true\n      //                                     });\n      //             })\n      //             .finally(function()  { \n      //                                   if (formSavingIsOK === true) {\n      //                                     toaster.clear();  \n      //                                     toaster.pop({\n      //                                             type: 'success',\n      //                                             timeout:2000,\n      //                                             title: 'Form is successfully saved',\n      //                                             body: '',                \n      //                                             showCloseButton: true\n      //                                       });                                         \n      //                                   }\n      //              });\n\n      toaster.clear();  \n      toaster.pop({\n              type: 'info',\n              timeout:2000,\n              title: 'Form would be saved if it were not a static example',\n              body: '',                \n              showCloseButton: true\n        }); \n      return true;\n  };\n\n\n\n  ////////////////////////////////////////////////////////////\n  //            modal : add control to column\n  ////////////////////////////////////////////////////////////\n\n  $scope.nyaSelect = {};\n  controllerModalProxy.initNyaSelect($scope.nyaSelect);\n\n  $scope.animationsEnabled = true; \n\n  $scope.showModalAddCtrlToColumn = function (size, indexLine, numcolumn) {\n\n    var modalInstance = $modal.open({\n                                      animation: $scope.animationsEnabled,\n                                      templateUrl: 'editModalTemplate.html', \n                                      controller: 'edaEditMODALController',\n                                      size: 'lg',\n                                      resolve: {\n                                        nyaSelect: function () {\n                                          return controllerModalProxy\n                                                            .getNyASelectFromSelectedLineColumn(  $scope.nyaSelect, \n                                                                                                  $scope.configuration,\n                                                                                                  indexLine, \n                                                                                                  numcolumn\n                                                                                                );\n                                        }\n                                      }\n    });\n\n\n    modalInstance.result.then(function (modalAddCtrlModel) {\n        controllerModalProxy.bindConfigurationModelFromModalReturn(indexLine, numcolumn, modalAddCtrlModel, $scope.configuration);\n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n        \n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n    }, function () {\n      $log.info('Modal dismissed at: ' + new Date());\n    });\n  };\n\n\n  /**\n   *\n   * \n   *   drag and drop : may move from this controller\n   *\n   *\n   * \n   */\n\n \n  //specific Container dragoverCallback event\n  $scope.dragoverCallbackContainer = function(parentparentIndex, parentIndex, index){\n      //prevent container in layout column to be drag to control select contianer \n      if (index === 0) {\n          return false;\n      }\n      return true;\n  };\n\n  $scope.dropCallback = function(event, index, item, external, type, allowedType) {\n          \n      if (external) {\n          if (allowedType === 'itemType'      && !item.label)             return false;\n          if (allowedType === 'containerType' && !angular.isArray(item))  return false; \n      }\n\n      /**\n      * TODO : update configuration model\n      */\n\n      /**\n      * set a timeout befire binding\n      * since ddModel may not be called when already full updated\n      */\n      var timerRefreshDDToConfig = $timeout(function(){\n        \n        $scope.configuration = angular\n                                  .copy(ddModelConfModelProxyService\n                                          .refreshAllConfigurationFromDragAndDropModel(\n                                                                                        $scope.configuration, \n                                                                                        $scope.dragDropModel\n                                                                                       )\n                                       );\n        \n        formFieldManage.applyConfigurationToformlyModel(  \n                                                          $scope.configuration, \n                                                          $scope.vm.wfFormFields, \n                                                          $scope.vm.model\n                                                        );\n                                                        \n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n         \n        ddModelConfModelProxyService.refreshControlsKeys( \n                                                          $scope.configuration, \n                                                          $scope.dragDropModel\n                                                         );            \n\n      }, 200);\n\n      /**\n      * timerRefreshDDToConfig timer destruction\n      */\n      $scope.$on('$destroy', function(){\n            $timeout.cancel(timerRefreshDDToConfig);\n        }\n      );\n      \n\n      return item;\n  };\n\n\n\n      \n  $scope.dndItemMoved = function(parentParentIndex, parentIndex, itemIndex){\n    //prevent item from first container to disapear when dropped on other container\n    if (parentParentIndex > 0) {\n        $scope.dragDropModel[parentParentIndex][parentIndex].splice(itemIndex, 1);\n    }\n  };\n\n  $scope.dragoverCallbackItems = function(ParentParentIndex, parentIndex, index, external){\n        //prevent items in layout column to be drag to control select  \n        if (parentIndex === 0) {\n            return false;\n        }\n        return true;\n    };\n\n\n  /**\n   * disableItemDropIf prevent dropping on condition\n   *\n   * TODO : to replace in html : dnd-disable-if=\"items.length > 2\"\n   */\n  $scope.disableItemDropIf = function(){\n\n  };\n\n\n\n  /**\n   * [dropCallbackItems description]\n   * @param  {[type]} event                   [description]\n   * @param  {[type]} index                   [description]\n   * @param  {[type]} realIndex               [description]\n   * @param  {[type]} parentIndex             [description]\n   * @param  {[type]} parentParentIndex       [description]\n   * @param  {[type]} parentParentParentIndex [description]\n   * @param  {[type]} item                    [description]\n   * @param  {[type]} external                [description]\n   * @param  {[type]} type                    [description]\n   * @param  {[type]} allowedType             [description]\n   * @return {[type]}                         [description]\n   */\n  $scope.dropCallbackItems = function(event, index, realIndex, parentIndex, parentParentIndex, parentParentParentIndex, item, external, type, allowedType){\n    \n      if (external) {\n          if (allowedType === 'itemType' && !item.label) return false;\n          if (allowedType === 'containerType' && !angular.isArray(item)) return false; \n      }\n    \n     /**\n      * set a timeout before binding\n      * since ddModel may not be called when already full updated\n      */\n      var timerRefreshDDToConfig = $timeout(function(){\n        \n        $scope.configuration = angular.copy(ddModelConfModelProxyService\n                                                          .refreshAllConfigurationFromDragAndDropModel(\n                                                                                                        $scope.configuration, \n                                                                                                        $scope.dragDropModel\n                                                                                                      ));\n                                                                                                      \n        formFieldManage.applyConfigurationToformlyModel(  \n                                                            $scope.configuration, \n                                                            $scope.vm.wfFormFields, \n                                                            $scope.vm.model\n                                                        );\n                                                        \n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields); \n        /**\n         * refresh controls key in dragDrop Model\n         * to persist already exists controls between refreshes when item drop events\n         */\n        ddModelConfModelProxyService.refreshControlsKeys( \n                                                          $scope.configuration, \n                                                          $scope.dragDropModel\n                                                         );        \n\n      }, 200);\n\n      /**\n       * add/set rightCliked property to false\n       *\n       * will help edaRightClick directive\n       */\n      ddItemRightClickedManager.setUnRightClicked(item);\n\n      /**\n      * timerRefreshDDToConfig timer destruction\n      */\n      $scope.$on('$destroy', function(){\n            $timeout.cancel(timerRefreshDDToConfig);\n        }\n      );\n\n\n      return item;\n  };\n\n\n\n  /**\n   * left panel (edit control)\n   */\n  \n\n  $scope.editPanelModel = {\n                            toggle : false\n                          };\n\n\n\n  $scope.saveFromEditPanel = function(){\n\n        /**\n         * TODO : \n         * should be called from edit panel\n         *\n         * AND\n         *\n         * should call all these methods\n         *\n         * need to get  : \n         * \n         * - line index\n         * - column index\n         * - basicSelectRowCollection (from edpitpanelcontroller)   --> maybe in controllerModalProxy service\n         * - groupedSelectRowCollection (from edpitpanelcontroller) --> maybe in controllerModalProxy service\n         * - radioRowCollection (from edpitpanelcontroller)         --> maybe in controllerModalProxy service\n         */\n        \n        controllerModalProxy.bindSpecialCtrlTemporyModelsToProxyModel();\n    \n        //save config to control\n        //controllerModalProxy.applyConfigToSelectedControl(self.proxyModel);\n        //return current model to parent controller :\n\n\n\n        // //update configuration model and formly model\n        controllerModalProxy\n                .bindConfigurationModelFromProxyModel(  \n                                                        controllerModalProxy.getEditPanelModelLineIndex(), \n                                                        controllerModalProxy.getEditPanelModelColumnIndex(), \n                                                        $scope.configuration\n                                                      );\n\n        formFieldManage.applyConfigurationToformlyModel(\n                                                          $scope.configuration, \n                                                          $scope.vm.wfFormFields, \n                                                          $scope.vm.model\n                                                        );\n                                                            \n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields); \n        \n        ddModelConfModelProxyService.refreshControlsKeys( \n                                                  $scope.configuration, \n                                                  $scope.dragDropModel\n                                                  );    \n    \n        controllerModalProxy.setEditPanelModelToggle(false);\n        $scope.editPanelModel.toggle = controllerModalProxy.getEditPanelModelToggle();  \n        ddItemRightClickedManager.resetAllDragDropItemSelectedState($scope.dragDropModel);\n\n  };\n  /**\n   * close side panel\n   * -> no update =  cancel\n   */\n  $scope.closeEditPanel = function(){\n    /**\n     * reset all rightClicked control properties to false\n     */\n    ddItemRightClickedManager.resetAllDragDropItemSelectedState($scope.dragDropModel);\n\n\n    /**\n     * TODO : refresh configuration model \n     * uncomment pafter update these next 3 lines\n     * \n     * NOTE : indexLine AND  numcolumn should be stored in service and\n     * updated when togle sidepanel\n     */\n   \n    //controllerModalProxy.bindConfigurationModelFromProxyModel(indexLine, numcolumn, modalAddCtrlModel, $scope.configuration);\n    //formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);    \n    //$scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);     \n    \n    controllerModalProxy.setEditPanelModelToggle(false);\n    $scope.editPanelModel.toggle = controllerModalProxy.getEditPanelModelToggle();\n    \n  };\n\n  $scope.debugProxyModel = controllerModalProxy.ProxyModel;\n\n\n\n  $scope.setRightClicked = function(previousState, item){\n    item.rightCliked = true;\n  };\n\n\n  $scope.toggleEditPanel = function(event, lineIndex, colIndex, item){\n   ddItemRightClickedManager.resetAllDragDropItemSelectedState($scope.dragDropModel);\n   /**\n    * already opened (could be another control edit)\n    */\n   if (controllerModalProxy.getEditPanelModelToggle()) {\n    /**\n     * - immediate close \n     * and \n     * - refresh configuration model + formly model\n     */\n    controllerModalProxy.setEditPanelModelToggle(false);\n    $scope.editPanelModel.toggle = controllerModalProxy.getEditPanelModelToggle(); \n    \n    //TODO : for refreshing\n    //controllerModalProxy.bindConfigurationModelFromProxyModel(indexLine, numcolumn, modalAddCtrlModel, $scope.configuration);\n    //formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);    \n    //$scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);    \n            \n\n\n    /**\n     * check if new control right clicked otherwise just toggle side panel\n     */\n    if (typeof controllerModalProxy.getEditPanelModelLineIndex()    !== 'undefined' &&\n        typeof controllerModalProxy.getEditPanelModelColumnIndex()  !== 'undefined' &&\n        typeof controllerModalProxy.getEditPanelModelControl()      !== 'undefined') {\n  \n  \n      if (controllerModalProxy.getEditPanelModelLineIndex()   === lineIndex &&\n          controllerModalProxy.getEditPanelModelColumnIndex() === colIndex  &&\n          angular.equals(controllerModalProxy.getEditPanelModelControl(), item)) {\n  \n          //console.info('already opened for SAME ctrl : so close - no re-open');\n        \n      }else{\n  \n          //console.info('already opened for DIFFERENT ctrl : so re-open');\n\n          item.rightCliked = true;\n          /**\n          * set a timeout before re-opening\n          * 500ms is ok for a ps-size=\"400px\"\n          */\n          var timerCloseOpenedEditPanel = $timeout(function(){\n            \n           controllerModalProxy.setEditPanelModelLineIndex(lineIndex);\n           controllerModalProxy.setEditPanelModelColumnIndex(colIndex);\n           controllerModalProxy.setEditPanelModelControl(item);\n           \n           /**\n            * control model passed to Service : controllerModalProxy\n            * \n            */\n           controllerModalProxy.setProxyModelFromConfigurationSelection(\n                                                                        $scope.configuration,\n                                                                        lineIndex, \n                                                                        colIndex\n                                                                        );\n           \n           \n           controllerModalProxy.setEditPanelModelToggle(true);\n           $scope.editPanelModel.toggle = controllerModalProxy.getEditPanelModelToggle();                                         \n            \n          }, 200);\n  \n          /**\n          * timerCloseOpenedEditPanel timer destruction\n          */\n          $scope.$on('$destroy', function(){\n                $timeout.cancel(timerCloseOpenedEditPanel);\n            }\n          );\n      }\n    }\n  \n   }else{\n    /**\n     * previous state = closed = immediate open \n     */\n     //console.info('NOT already opened : so open');\n     item.rightCliked = true;\n      \n     controllerModalProxy.setEditPanelModelLineIndex(lineIndex);\n     controllerModalProxy.setEditPanelModelColumnIndex(colIndex);\n     controllerModalProxy.setEditPanelModelControl(item);\n     \n     /**\n      * control model passed to Service : controllerModalProxy\n      * \n      */\n     controllerModalProxy.setProxyModelFromConfigurationSelection(\n                                                                  $scope.configuration,\n                                                                  lineIndex, \n                                                                  colIndex\n                                                                  );\n\n     \n     controllerModalProxy.setEditPanelModelToggle(true);\n     $scope.editPanelModel.toggle = controllerModalProxy.getEditPanelModelToggle();\n     \n   }                       \n  };\n  // /**\n  //  * refreshModels : to call after drag and drop events\n  //  */\n  // $scope.refreshModels = function(){\n  //   $timeout(function(){\n  //     console.info('refreshing models');\n  //     formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n  //     $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields); \n  //   }, 10);\n\n\n  // };\n\n\n\n  /**\n   * removeThisLine event line deleted\n   */\n  $scope.removeThisLine = function(lineIndex){\n    $scope.dragDropModel[1].splice(lineIndex,1);\n  };\n\n\n  $scope.model = [];\n\n  function addNewline(){\n    /**\n     * re-render formfield\n     *\n     * TODO : to fix\n     */\n\n    formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n    $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields); \n  }\n\n\n  $scope.insertNewLine = function(){\n                          addNewline();\n                          $scope.dragDropModel[1].push([]);\n                          };\n\n}]);\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//  module = \"controllers\"  for view \"wfEdit\"\n//  ------------------------------------------------------\n//      Syntax (convention) :\n//          \"edaApp\" = application\n//          \"edaApp.controllers.viewNameController\" = controller module\n//\n//  This module is a view controller -> it must be injected in controller container\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nangular\n  .module('edaApp.controllers.edaEditMODALController', [])\n  .controller('edaEditMODALController', [\t'$scope', \n                                          '$modalInstance',\n                                          'nyaSelect',\n                                          'toaster' ,\n                                          '$timeout',\n                                          'selectOptionManage',\n                                          'controllerModalProxy',\n  function (\t$scope, \n              $modalInstance, \n              nyaSelect, \n              toaster,\n              $timeout,\n              selectOptionManage,\n              controllerModalProxy\n            ){\n\n  \n\nvar initOptionModel = {rows:[\n                            ]\n                  };\n\n  ////////////////////////////////////////////\n  // part : radio\n  ///////////////////////////////////////////\n\n  $scope.radioRowCollection = initOptionModel;\n  $scope.newOptionRadio = {saisie: ''};\n\n\n  function bindRadioFromNYA(){\n    if ($scope.nyaSelect.temporyConfig.formlyOptions.length > 0) {\n      for (var i = 0; i <= $scope.nyaSelect.temporyConfig.formlyOptions.length-1; i++){\n\n            var newOption = { \n                              'option': $scope.nyaSelect.temporyConfig.formlyOptions[i].name,\n                              'order': i,\n                              'group': ''\n                            };\n            $scope.radioRowCollection.rows.push(newOption);\n      }    \n    }\n  }\n\n  function bindRadioToNya(){\n    var resetNyASelectOptions = [];\n    $scope.nyaSelect.temporyConfig.formlyOptions = resetNyASelectOptions;\n\n    if ($scope.radioRowCollection.rows.length > 0) {\n\n      for (var i = 0; i <= $scope.radioRowCollection.rows.length - 1; i++){\n            var newOption = {\n                              'name': $scope.radioRowCollection.rows[i].option,\n                              'value': i,\n                              'group': ''\n                    };\n            $scope.nyaSelect.temporyConfig.formlyOptions.push(newOption);   \n        }       \n   }\n  }\n\n  $scope.addNewOptionRadio = function(){\n    var result = selectOptionManage.addNewOptionRadio($scope.radioRowCollection, $scope.newOptionRadio.saisie);\n    if (result.resultFlag === false) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: result.details,\n                  body: '\\''+ $scope.newOptionRadio.saisie + '\\'' + ' cannot be added.',                \n                  showCloseButton: true\n            });\n    }\n    //reset input\n    $scope.newOptionRadio = {saisie: \"\"};\n  };\n\n  $scope.removeRadioRow = function(index) {\n      var result = selectOptionManage.removeOption($scope.radioRowCollection, index);\n      if (result.resultFlag === false) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: result.details,\n                  body: 'Delete was cancelled.',                \n                  showCloseButton: true\n            });\n      }      \n    }; \n\n  $scope.upThisRadioRow = function(index){\n      var result = selectOptionManage.upthisOption($scope.radioRowCollection, index);\n      if (result.resultFlag === false) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: result.details,\n                  body: 'Operation cancelled.',                \n                  showCloseButton: true\n            });\n      }       \n  };                                    \n\n  $scope.downThisRadioRow = function(index){\n      var result = selectOptionManage.downthisOption($scope.radioRowCollection, index);\n      if (result.resultFlag === false) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: result.details,\n                  body: 'Operation cancelled.',                \n                  showCloseButton: true\n            });\n      }\n  };\n\n\n\n  ////////////////////////////////////////////\n  // part : basic Select\n  ///////////////////////////////////////////\n\n  $scope.basicSelectRowCollection = initOptionModel;\n  $scope.newOptionBasicSelect = {saisie: \"\"};\n\n\n  function bindBasicSelectFromNYA(){\n    // console.info('bindBasicSelectFromNYA');\n    // console.dir($scope.nyaSelect.temporyConfig);\n\n    if ($scope.nyaSelect.temporyConfig.formlyOptions.length > 0) {\n      for (var i = 0; i <= $scope.nyaSelect.temporyConfig.formlyOptions.length-1; i++){\n\n            var newOption = {\"option\": $scope.nyaSelect.temporyConfig.formlyOptions[i].name,\n                      \"order\": i,\n                      \"group\": \"\"\n                    };\n            $scope.basicSelectRowCollection.rows.push(newOption);\n      }    \n    }\n  }\n\n  function bindBasicSelectToNya(){\n    var resetNyASelectOptions = [];\n    $scope.nyaSelect.temporyConfig.formlyOptions = resetNyASelectOptions;\n    if ($scope.basicSelectRowCollection.rows.length > 0) {\n      for (var i = 0; i <= $scope.basicSelectRowCollection.rows.length - 1; i++){\n            var newOption = {\"name\": $scope.basicSelectRowCollection.rows[i].option,\n                      \"value\": i,\n                      \"group\": \"\"\n                    };\n            $scope.nyaSelect.temporyConfig.formlyOptions.push(newOption);\n        }      \n   }\n  }\n\n  $scope.addNewOptionBasicSelect = function(){\n    var result = selectOptionManage.addNewOptionBasicSelect($scope.basicSelectRowCollection, $scope.newOptionBasicSelect.saisie);\n    if (result.resultFlag === false) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: result.details,\n                  body: '\\''+ $scope.newOptionBasicSelect.saisie + '\\'' + ' cannot be added.',                \n                  showCloseButton: true\n            });\n    }\n    //reset input\n    $scope.newOptionBasicSelect = {saisie: \"\"};\n  };\n\n  $scope.removeRow = function(index) {\n      var result = selectOptionManage.removeOption($scope.basicSelectRowCollection, index);\n      if (result.resultFlag === false) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: result.details,\n                  body: 'Delete was cancelled.',                \n                  showCloseButton: true\n            });\n      }      \n    }; \n\n  $scope.upThisRow = function(index){\n      var result = selectOptionManage.upthisOption($scope.basicSelectRowCollection, index);\n      if (result.resultFlag === false) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: result.details,\n                  body: 'Operation cancelled.',                \n                  showCloseButton: true\n            });\n      }       \n  };                                    \n\n  $scope.downThisRow = function(index){\n      var result = selectOptionManage.downthisOption($scope.basicSelectRowCollection, index);\n      if (result.resultFlag === false) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: result.details,\n                  body: 'Operation cancelled.',                \n                  showCloseButton: true\n            });\n      }\n  };\n\n\n  ////////////////////////////////////////////\n  // part : grouped Select\n  ///////////////////////////////////////////\n\n  $scope.groupedSelectRowCollection = initOptionModel;\n  $scope.newOptionGroupedSelect = {saisie: \"\"};\n\n  $scope.GroupedSelectGroups =    {\n                                    list:[]\n                                  };\n  $scope.newGroupGroupedSelect = {saisie: \"\"};  \n  $scope.groupSelectGroupClick = {showList : false};                                \n\n\n  function bindGroupedSelectFromNYA(){\n    if ($scope.nyaSelect.temporyConfig.formlyOptions.length > 0) {\n      for (var i = 0; i <= $scope.nyaSelect.temporyConfig.formlyOptions.length-1; i++){\n      //for (var i = $scope.nyaSelect.temporyConfig.formlyOptions.length - 1; i >= 0; i--) {\n\n            var newOption = {\"option\": $scope.nyaSelect.temporyConfig.formlyOptions[i].name,\n                      \"order\": i,\n                      \"group\": $scope.nyaSelect.temporyConfig.formlyOptions[i].group\n                    };\n            $scope.groupedSelectRowCollection.rows.push(newOption);            \n        }\n        //grouplist : thx to lodash it is easy\n        var filteredgroup = _.uniq(_.pluck($scope.groupedSelectRowCollection.rows, 'group'));\n       angular.copy(filteredgroup, $scope.GroupedSelectGroups.list); \n       //console.dir($scope.GroupedSelectGroups.list);\n\n    }\n  }\n\n  function bindGroupedSelectToNya(){\n    $scope.nyaSelect.temporyConfig.formlyOptions = [];\n    for (var i = 0; i <= $scope.groupedSelectRowCollection.rows.length - 1; i++){\n          var newOption = {\"name\": $scope.groupedSelectRowCollection.rows[i].option,\n                    \"value\": i,\n                    \"group\": $scope.groupedSelectRowCollection.rows[i].group\n                  };\n\n          $scope.nyaSelect.temporyConfig.formlyOptions.push(newOption);\n          \n      }\n      ///console.log('\\n\\n\\n\\n\\n');\n      //console.dir($scope.nyaSelect.temporyConfig.formlyOptions);\n  }  \n\n  $scope.showGroupListToChoose = function(){\n    $scope.groupSelectGroupClick.showList = !$scope.groupSelectGroupClick.showList;\n  };\n\n  $scope.addNewGroupToGroupedSelect = function(){\n    if ($scope.newGroupGroupedSelect.saisie !== \"\") {\n      for (var i = $scope.GroupedSelectGroups.list.length - 1; i >= 0; i--) {\n        if ($scope.GroupedSelectGroups.list[i] === $scope.newGroupGroupedSelect.saisie) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: 'Group already exists',\n                  body: 'No group added.',                \n                  showCloseButton: true\n            });          \n        }\n        \n      }\n      $scope.GroupedSelectGroups.list.push($scope.newGroupGroupedSelect.saisie);\n\n    }else{\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: 'Not a valid group to add',\n                  body: 'No group added.',                \n                  showCloseButton: true\n            });\n\n    }\n    $scope.newGroupGroupedSelect.saisie = \"\";\n  };\n\n\n  $scope.addNewOptionGroupedSelect = function(){\n    var result = selectOptionManage.addNewOptionGroupedSelect($scope.groupedSelectRowCollection, $scope.newOptionGroupedSelect.saisie, '');\n    if (result.resultFlag === false) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: result.details,\n                  body: '\\''+ $scope.newOptionGroupedSelect.saisie + '\\'' + ' cannot be added.',                \n                  showCloseButton: true\n            });\n    }\n    //bind nya : dont bind here $apply is not done fast enough\n    //bindGroupedSelectToNya();\n    //reset input\n    $scope.newOptionGroupedSelect = {saisie: \"\"};\n  };\n\n  $scope.removeGroupedSelectRow = function(index) {\n      var result = selectOptionManage.removeOption($scope.groupedSelectRowCollection, index);\n      if (result.resultFlag === false) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: result.details,\n                  body: 'Delete was cancelled.',                \n                  showCloseButton: true\n            });\n      }   \n    }; \n\n  $scope.upThisGroupedSelectRow = function(index){\n      var result = selectOptionManage.upthisOption($scope.groupedSelectRowCollection, index);\n      if (result.resultFlag === false) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: result.details,\n                  body: 'Operation cancelled.',                \n                  showCloseButton: true\n            });\n      } \n  };                                    \n\n  $scope.downThisGroupedSelectRow = function(index){\n      var result = selectOptionManage.downthisOption($scope.groupedSelectRowCollection, index);\n      if (result.resultFlag === false) {\n          toaster.pop({\n                  type: 'warning',\n                  timeout:2000,\n                  title: result.details,\n                  body: 'Operation cancelled.',                \n                  showCloseButton: true\n            });\n      } \n\n  };\n\n\n  /////////////////////////////////////////////\n  // init datetimepicker model\n  /////////////////////////////////////////////\n  $scope.demodt ={};\n\n  $scope.today = function() {\n    $scope.demodt.dt = new Date();\n  };\n  $scope.today();\n\n  $scope.clear = function () {\n    $scope.demodt.dt = null;\n  };\n\n\n  $scope.open = function($event) {\n    $event.preventDefault();\n    $event.stopPropagation();\n\n    $scope.demodt.opened = true;\n  };\n\n  $scope.dateOptions = {\n           formatYear: 'yy',\n           startingDay: 1,\n           showWeeks: true,\n           initDate: null\n  };\n\n  $scope.demodt.formats = ['dd-MMMM-yyyy', 'yyyy/MM/dd', 'dd.MM.yyyy', 'shortDate'];\n  \n  function initDatePicker(){\n    $scope.nyaSelect.temporyConfig.datepickerPopup = $scope.demodt.formats[0];  \n  }\n  \n\n\n  /////////////////////////////////////////////\n  // init model from controller data\n  /////////////////////////////////////////////\n  $scope.nyaSelect = nyaSelect ;\n\n  //console.dir($scope.nyaSelect);\n  \n  //selected control from  main controller applied to current selected control\n  $scope.nyaSelect.selectedControl = $scope.nyaSelect.temporyConfig.selectedControl;\n\n\n  //place nya-select to selection if not none :\n   if (nyaSelect.selectedControl !== 'none') {\n    for (var i = $scope.nyaSelect.controls.length - 1; i >= 0; i--) {\n       if ($scope.nyaSelect.controls[i].id === nyaSelect.selectedControl) {\n          //$scope.nyaSelect.selectedControl = nyaSelect.controls[i].id;\n          $scope.modelNyaSelect = nyaSelect.controls[i];\n       }\n    }\n\n    if ($scope.nyaSelect.selectedControl === \"BasicSelect\") {\n      bindBasicSelectFromNYA();\n    }\n\n    if ($scope.nyaSelect.selectedControl === \"GroupedSelect\") {\n      bindGroupedSelectFromNYA();\n    } \n\n    if ($scope.nyaSelect.selectedControl === \"Radio\") {\n      bindRadioFromNYA();\n    }    \n\n  }\n\n\n\n  function resetTemporyConfig(){\n    $scope.nyaSelect.temporyConfig = {\n                                        formlyLabel: \"\", \n                                        formlyRequired: false, \n                                        formlyPlaceholder: \"\",\n                                        formlyDesciption: \"\",\n                                        formlyOptions: []\n                                      };   \n  }\n\n\n\n  $scope.selectThisControl = function(controlName){\n    $scope.nyaSelect.selectedControl = 'none';\n    resetTemporyConfig();\n\n    for (var i = $scope.nyaSelect.controls.length - 1; i >= 0; i--) {\n       if ($scope.nyaSelect.controls[i].id === controlName) {\n          $scope.nyaSelect.selectedControl = $scope.nyaSelect.controls[i].id;         \n       }\n    }\n\n    if ($scope.nyaSelect.selectedControl === 'Date') {\n      initDatePicker();\n    }\n  };\n\n\n\n  /////////////////////////\n  // modal buttons click\n  /////////////////////////\n  $scope.ok = function () {\n\n    if ($scope.nyaSelect.selectedControl === \"BasicSelect\") {\n      bindBasicSelectToNya();\n    }\n\n    if ($scope.nyaSelect.selectedControl === \"GroupedSelect\") {\n      bindGroupedSelectToNya();\n    }  \n\n    if ($scope.nyaSelect.selectedControl === \"Radio\") {\n      bindRadioToNya();\n    }  \n\n    //save config to control\n    controllerModalProxy.applyConfigToSelectedControl($scope.nyaSelect);\n    //return current model to parent controller :\n    $modalInstance.close($scope.nyaSelect);\n\n  };\n\n  $scope.cancel = function () {\n    $modalInstance.dismiss('cancel');\n  };\n\n\n}]);\n/**\n *  ------------------------------------------------------\n *  controller : edaEditPanelController\n *  ------------------------------------------------------\n *\n *  controller dedicated side panel (edit control panel)\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp.controllers.edaEditPanelController', [])\n\t.controller('edaEditPanelController', ['$scope', \n                                          'toaster' ,\n                                          '$timeout',\n                                          'selectOptionManage',\n                                          'controllerModalProxy',\n\t\tfunction(\t$scope,  \n              toaster,\n              $timeout,\n              selectOptionManage,\n              controllerModalProxy\n\t\t\t\t\t\t){\n\n\n\n\t\t\t/**\n\t\t\t * ==============================================================\n\t\t\t * init model from service\n\t\t\t * ==============================================================\n\t\t\t * proxy model contains :\n\t\t\t * - all controls definitions and \n\t\t\t * - selected control\n\t\t\t * - properties to customize control (then bound to configuration model)\n\t\t\t */\n\t\t\tvar self = this;\n\t\t\n\t\t\tself.proxyModel = controllerModalProxy.proxyModel;\n\t\t\t\t\t\n\t\t  //selected control from  main controller applied to current selected control\n\t\t  self.proxyModel.selectedControl = self.proxyModel.temporyConfig.selectedControl;\n\t\t\n\t\t\n\t\t\n\t\t\t/**\n\t\t\t * basic Select tempory models\n\t\t\t */\t\t\t\n\t\t  self.basicSelectRowCollection \t= controllerModalProxy.basicSelectRowCollection;\n\t\t  self.newOptionBasicSelect \t\t\t= controllerModalProxy.newOptionBasicSelect;\n\t\t\t/**\n\t\t\t * grouped Select tempory models\n\t\t\t */\n\t\t  self.groupedSelectRowCollection = controllerModalProxy.groupedSelectRowCollection;\n\t\t  self.newOptionGroupedSelect \t\t= controllerModalProxy.newOptionGroupedSelect;\n\t\t  self.GroupedSelectGroups \t\t\t\t= controllerModalProxy.GroupedSelectGroups;\n\t\t  self.newGroupGroupedSelect \t\t\t= controllerModalProxy.newGroupGroupedSelect;\n\t\t  self.groupSelectGroupClick \t\t\t= controllerModalProxy.groupSelectGroupClick;  \n\t\t\t/**\n\t\t\t * radio control tempory models\n\t\t\t */\n\t\t  self.radioRowCollection \t\t\t\t= controllerModalProxy.radioRowCollection;\n\t\t  self.newOptionRadio \t\t\t\t\t\t= controllerModalProxy.newOptionRadio;\n\t\t  /**\n\t\t   * reset all tempory modals (fo special controls)\n\t\t   */\n\t\t  controllerModalProxy.resetAllTemporyModels();\n\n\n\t\t  //place proxyModel to selection if not none :\n\t\t   if (self.proxyModel.temporyConfig.selectedControl !== 'none') {\n\t\t    for (var i = self.proxyModel.controls.length - 1; i >= 0; i--) {\n\t\t       if (self.proxyModel.controls[i].id === self.proxyModel.temporyConfig.selectedControl) {\n\t\t          self.modelproxyModel = self.proxyModel.controls[i];\n\t\t       }\n\t\t    }\n\n\t\t    if (self.proxyModel.temporyConfig.selectedControl === 'BasicSelect') {\n\t\t      controllerModalProxy.bindBasicSelectFromProxyModel(self.basicSelectRowCollection);\n\t\t    }\n\t\t\n\t\t    if (self.proxyModel.temporyConfig.selectedControl === 'GroupedSelect') {\n\t\t      controllerModalProxy.bindGroupedSelectFromProxyModel(self.groupedSelectRowCollection, self.GroupedSelectGroups);\n\t\t    } \n\t\t\n\t\t    if (self.proxyModel.temporyConfig.selectedControl === 'Radio') {\n\t\t      controllerModalProxy.bindRadioFromProxyModel(self.radioRowCollection);\n\t\t    }    \n\t\t\n\t\t  }\n\t\t\n\t\tself.updateSpecialControl = function(){\n\t\t\t\n\t\t\t//refresh service data for sepcial control as selects and radio\n\t\t\tcontrollerModalProxy.basicSelectRowCollection \t\t= self.basicSelectRowCollection;\n\t\t\tcontrollerModalProxy.newOptionBasicSelect \t\t\t\t= self.newOptionBasicSelect;\n\n\t\t\tcontrollerModalProxy.groupedSelectRowCollection \t= self.groupedSelectRowCollection;\n\t\t\tcontrollerModalProxy.newOptionGroupedSelect \t\t\t= self.newOptionGroupedSelect;\n\t\t\tcontrollerModalProxy.GroupedSelectGroups \t\t\t\t\t= self.GroupedSelectGroups;\n\t\t\tcontrollerModalProxy.newGroupGroupedSelect \t\t\t\t= self.newGroupGroupedSelect;\n\t\t\tcontrollerModalProxy.groupSelectGroupClick \t\t\t\t= self.groupSelectGroupClick;\n\n\n\t\t\tcontrollerModalProxy.radioRowCollection \t\t\t\t\t= self.radioRowCollection;\n\t\t\tcontrollerModalProxy.newOptionRadio \t\t\t\t\t\t\t= self.newOptionRadio;\t\t\t\n\t\t\t\n\t\t\t//force apply update proxyModel\n\t\t\tcontrollerModalProxy.bindSpecialCtrlTemporyModelsToProxyModel(); \n\t\t\treturn true; \t\n\t\t};\n\t\t\n\t\t  function resetTemporyConfig(){\n\t\t    self.proxyModel.temporyConfig = {\n\t\t                                        formlyLabel: '', \n\t\t                                        formlyRequired: false, \n\t\t                                        formlyPlaceholder: '',\n\t\t                                        formlyDesciption: '',\n\t\t                                        formlyOptions: []\n\t\t                                      };   \n\t\t  }\n\t\t\n\t\t\tself.resetControl = function(){\n\t\t\t\tself.proxyModel.temporyConfig.formlyLabel \t\t\t= '';\n\t\t\t\tself.proxyModel.temporyConfig.formlyRequired \t\t= false;\n\t\t\t\tself.proxyModel.temporyConfig.formlyPlaceholder\t= '';\n\t\t\t\tself.proxyModel.temporyConfig.formlyDesciption \t= '';\n\t\t\t\tself.proxyModel.temporyConfig.formlyOptions \t\t= [];\n\t\t\t\tself.proxyModel.temporyConfig.datepickerPopup   = initDatePicker();\n\t\t\t\t\n\t\t\t};\n\t\t\n\t\t  self.selectThisControl = function(controlName){\n\t\t    self.proxyModel.selectedControl = 'none';\n\t\t    resetTemporyConfig();\n\t\t\n\t\t    for (var i = self.proxyModel.controls.length - 1; i >= 0; i--) {\n\t\t       if (self.proxyModel.controls[i].id === controlName) {\n\t\t          self.proxyModel.selectedControl = self.proxyModel.controls[i].id;         \n\t\t       }\n\t\t    }\n\t\t\n\t\t    if (self.proxyModel.selectedControl === 'Date') {\n\t\t      initDatePicker();\n\t\t    }\n\t\t  };\n\t\n\n\n\t\t/**\n\t\t * ==============================================================\n\t\t * specific controls management \n\t\t * (display, properties.... : ex : grouped Select)\n\t\t * ==============================================================\n\t\t */\n\n\t\t\n\t\t  self.addNewOptionRadio = function(){\n\t\t    var result = selectOptionManage.addNewOptionRadio(self.radioRowCollection, self.newOptionRadio.saisie);\n\t\t    if (result.resultFlag === false) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: result.details,\n\t\t                  body: '\\''+ self.newOptionRadio.saisie + '\\'' + ' cannot be added.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t    }\n\t\t    //reset input\n\t\t    self.newOptionRadio = {saisie: ''};\n\t\t  };\n\t\t\n\t\t  self.removeRadioRow = function(index) {\n\t\t      var result = selectOptionManage.removeOption(self.radioRowCollection, index);\n\t\t      if (result.resultFlag === false) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: result.details,\n\t\t                  body: 'Delete was cancelled.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t      }      \n\t\t    }; \n\t\t\n\t\t  self.upThisRadioRow = function(index){\n\t\t      var result = selectOptionManage.upthisOption(self.radioRowCollection, index);\n\t\t      if (result.resultFlag === false) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: result.details,\n\t\t                  body: 'Operation cancelled.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t      }       \n\t\t  };                                    \n\t\t\n\t\t  self.downThisRadioRow = function(index){\n\t\t      var result = selectOptionManage.downthisOption(self.radioRowCollection, index);\n\t\t      if (result.resultFlag === false) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: result.details,\n\t\t                  body: 'Operation cancelled.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t      }\n\t\t  };\n\t\t\t\n\t\t\n\t\t\n\t\t  self.addNewOptionBasicSelect = function(){\n\t\t    var result = selectOptionManage.addNewOptionBasicSelect(self.basicSelectRowCollection, self.newOptionBasicSelect.saisie);\n\t\t    if (result.resultFlag === false) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: result.details,\n\t\t                  body: '\\''+ self.newOptionBasicSelect.saisie + '\\'' + ' cannot be added.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t    }\n\t\t    //reset input\n\t\t    self.newOptionBasicSelect = {saisie: ''};\n\t\t  };\n\t\t\n\t\t  self.removeRow = function(index) {\n\t\t      var result = selectOptionManage.removeOption(self.basicSelectRowCollection, index);\n\t\t      if (result.resultFlag === false) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: result.details,\n\t\t                  body: 'Delete was cancelled.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t      }      \n\t\t    }; \n\t\t\n\t\t  self.upThisRow = function(index){\n\t\t      var result = selectOptionManage.upthisOption(self.basicSelectRowCollection, index);\n\t\t      if (result.resultFlag === false) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: result.details,\n\t\t                  body: 'Operation cancelled.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t      }       \n\t\t  };                                    \n\t\t\n\t\t  self.downThisRow = function(index){\n\t\t      var result = selectOptionManage.downthisOption(self.basicSelectRowCollection, index);\n\t\t      if (result.resultFlag === false) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: result.details,\n\t\t                  body: 'Operation cancelled.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t      }\n\t\t  };\n\t\t\n                             \n\n\n\n\t\t\n\t\t  self.showGroupListToChoose = function(){\n\t\t    self.groupSelectGroupClick.showList = !self.groupSelectGroupClick.showList;\n\t\t  };\n\t\t\n\t\t  self.addNewGroupToGroupedSelect = function(){\n\t\t    if (self.newGroupGroupedSelect.saisie !== '') {\n\t\t      for (var i = self.GroupedSelectGroups.list.length - 1; i >= 0; i--) {\n\t\t        if (self.GroupedSelectGroups.list[i] === self.newGroupGroupedSelect.saisie) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: 'Group already exists',\n\t\t                  body: 'No group added.',                \n\t\t                  showCloseButton: true\n\t\t            });          \n\t\t        }\n\t\t      }\n\t\t      self.GroupedSelectGroups.list.push(self.newGroupGroupedSelect.saisie);\n\t\t    }else{\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: 'Not a valid group to add',\n\t\t                  body: 'No group added.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t    }\n\t\t    self.newGroupGroupedSelect.saisie = '';\n\t\t  };\n\t\t\n\t\t\n\t\t  self.addNewOptionGroupedSelect = function(){\n\t\t    var result = selectOptionManage.addNewOptionGroupedSelect(self.groupedSelectRowCollection, self.newOptionGroupedSelect.saisie, '');\n\t\t    if (result.resultFlag === false) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: result.details,\n\t\t                  body: '\\''+ self.newOptionGroupedSelect.saisie + '\\'' + ' cannot be added.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t    }\n\t\t    //bind nya : dont bind here $apply is not done fast enough\n\t\t    //bindGroupedSelectToNya();\n\t\t    //reset input\n\t\t    self.newOptionGroupedSelect = {saisie: ''};\n\t\t  };\n\t\t\n\t\t  self.removeGroupedSelectRow = function(index) {\n\t\t      var result = selectOptionManage.removeOption(self.groupedSelectRowCollection, index);\n\t\t      if (result.resultFlag === false) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: result.details,\n\t\t                  body: 'Delete was cancelled.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t      }   \n\t\t    }; \n\t\t\n\t\t  self.upThisGroupedSelectRow = function(index){\n\t\t      var result = selectOptionManage.upthisOption(self.groupedSelectRowCollection, index);\n\t\t      if (result.resultFlag === false) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: result.details,\n\t\t                  body: 'Operation cancelled.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t      } \n\t\t  };                                    \n\t\t\n\t\t  self.downThisGroupedSelectRow = function(index){\n\t\t      var result = selectOptionManage.downthisOption(self.groupedSelectRowCollection, index);\n\t\t      if (result.resultFlag === false) {\n\t\t          toaster.pop({\n\t\t                  type: 'warning',\n\t\t                  timeout:2000,\n\t\t                  title: result.details,\n\t\t                  body: 'Operation cancelled.',                \n\t\t                  showCloseButton: true\n\t\t            });\n\t\t      } \n\t\t\n\t\t  };\n\t\t\n\t\t\t/**\n\t\t\t * init datetimepicker model\n\t\t\t */\n\t\t  self.demodt ={};\n\t\t\n\t\t  self.today = function() {\n\t\t    self.demodt.dt = new Date();\n\t\t  };\n\t\t  self.today();\n\t\t\n\t\t  self.clear = function () {\n\t\t    self.demodt.dt = null;\n\t\t  };\n\t\t\n\t\t\n\t\t  self.open = function($event) {\n\t\t    $event.preventDefault();\n\t\t    $event.stopPropagation();\n\t\t\n\t\t    self.demodt.opened = true;\n\t\t  };\n\t\t\n\t\t  self.dateOptions = {\n\t\t           formatYear: 'yy',\n\t\t           startingDay: 1,\n\t\t           showWeeks: true,\n\t\t           initDate: null\n\t\t  };\n\t\t\n\t\t  self.demodt.formats = ['dd-MMMM-yyyy', 'yyyy/MM/dd', 'dd.MM.yyyy', 'shortDate'];\n\t\t  \n\t\t  function initDatePicker(){\n\t\t    self.proxyModel.temporyConfig.datepickerPopup = self.demodt.formats[0];  \n\t\t  }\n\t\t  \n\t\t\n\n\t\t\t \t\t\n\t}]);\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// module = \"controllers\"  for view \"edaMainController\"\n//  ------------------------------------------------------\n//      Syntax (convention) :\n//          \"edaApp\" = application\n//          \"edaApp.controllers.edaMainController\" = controller module\n//\n//  This module is a view controller -> it must be injected in controller container\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nangular\n\t.module('edaApp.controllers.edaMainController', [])\n\t.controller('edaMainController', [\n\t\tfunction () {\n\t\t\t\n\t\t}]);\n/**\n *  ------------------------------------------------------\n *  directive : edaDdContentCounterDirective\n *  ------------------------------------------------------\n *\n *  return real item count (hidden item being dragged that stay on the line)\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n    .module('edaApp.directives.edaDdContentCounterDirective', [])\n    .directive('ddContentCounter', ['dragDropItemCounterService', '$timeout',\n\n    function(\tdragDropItemCounterService, $timeout ){\n\n  \n    \treturn {\n    \t\t scope: {\n    \t\t \tvalueWhenPlaceholder: \t'@ddValueWhenPlaceholder',\n    \t\t \tvalueWhendragging: \t\t\t'@ddValueWhenDragging',\n    \t\t \tfullModel : \t\t\t\t\t\t'=ddFullModel',\n\t\t\t\t\tcurrentIndex :       \t\t'@ddContentCounterCurrentIndex',\n          parentIndex :         \t'@ddContentCounterParentIndex',\n          forceRefresh: \t\t\t\t\t'=ddContentCounterForceCssRefresh' \n    \t\t }, \n    \t\t\n    \t\trestrict: 'A', \n    \t\t\n    \t\tlink: function($scope, element) {\n    \t\t\t\n    \t\t\tvar timer;\n\n       \t\t/**\n       \t\t * watch children length change : to update css item class\n       \t\t */\n    \t\t\t$scope.$watch(\n\t\t\t\t    function () { return element[0].children.length; },\n\t\t\t\t    function (newValue, oldValue) {\n\t\t\t\t      if (newValue !== oldValue) {\n\n\t\t\t\t        var newRealCount= 0;\n\t\t\t\t        var listClassForThisRow = [];\n\n\t\t\t\t        for (var i = element[0].children.length - 1; i >= 0; i--) {\n\t\t\t\t        \t\n\t\t\t\t        \tif(dragDropItemCounterService.isHtmlElementToCount(element[0].children[i].classList)){\n\t\t\t\t        \t\tnewRealCount++;\n\t\t\t\t        \t\tlistClassForThisRow.push( {item: i, isReal : true} );\n\t\t\t\t        \t}else{\n\t\t\t\t        \t\tlistClassForThisRow.push( {item: i, isReal : false} );\n\t\t\t\t        \t} \n\t\t\t\t        }\n\t\t\t\t        $scope.contentRealCount = newRealCount;\n\t\t\t\t        /**\n\t\t\t\t         * a timer otherwise won't refresh everytime\n\t\t\t\t         */\n\t\t\t\t        timer = $timeout(function(){\n\t\t\t\t\t        dragDropItemCounterService.updateLineItemCss(\t$scope.fullModel, \n\t\t\t\t\t        \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlistClassForThisRow, \n\t\t\t\t\t        \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$scope.parentIndex, \n\t\t\t\t\t        \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$scope.currentIndex, \n\t\t\t\t\t        \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewRealCount\n\t\t\t\t\t        \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\t\t\t\t        \t\n\t\t\t\t        }, 20);\n\t\t\t\t        \n\t\t\t\t      }\n\t\t\t\t    }\n\t\t\t\t  );\n\n          /**\n           * timer destruction to prevent from bad UI experience\n           */\n          $scope.$on('$destroy', function(){\n                  console.warn('ddContentCounter timer destruction!');\n                  $timeout.cancel(timer);\n              }\n          ); \n\t\t  \n    \t\t}\n    \t};\n\n    }]);\n/**\n *  ------------------------------------------------------\n *  directive : ddDecorContainer\n *  ------------------------------------------------------\n *\n * - apply configuration to containers (or lines in layoutor group controls in control selection)\n *   - apply title (ONLY if group controls (left drop zone - index 0): text inputs group, lists...)\n *   - expand Bool (ONLY if group controls (left drop zone - index 0): text inputs group, lists...)\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n    .module('edaApp.directives.edaDdDecorContainerDirective', [])\n    .directive('ddDecorContainer', [\n\n    function(){\n\n        var htmlTemplate   =    [\n                                    '<div ng-click=\"collapseFct()\">',\n                                    '   <h6 ng-show=\"config.isEnabled\" class=\"isCollapsableZone\"><button class=\"btn btn-primary btn-xs\"><span class=\"{{currentIconClass()}}\"></span></button>&nbsp;{{currentTitle}}</h6>', \n                                    '</div>',\n                                    '<div collapse=\"isCollapsed\">', \n                                    '   <div id=\"ddDecorContainerWillTranscludeHere\"></div>', \n                                    '</div>'\n                                ].join(' ');\n\n        return {\n            scope:  {\n                         'styleParam'           : '=ddContainerProperties',\n                         'isStillCollapsed'     : '=ddContainerIsCollpased',\n                         'verboseMode'          : '@ddContainerVerboseMode',\n                         'currentIndex'         : '@ddContainerCurrentIndex',\n                         'collpaseAll'          : '&ddCollapseAll'\n                    },\n            restrict:   'A', \n            template:   htmlTemplate,\n            transclude: true,\n            controller: function($scope) {\n                            $scope.config = {   \n                                                isEnabled : false\n                                            };\n\n                            //$scope.isCollapsed = $scope.styleParam.WhenIndex;\n                            $scope.collapseFct = function(){\n                               \n                                $scope.collpaseAll({exceptThisOne: $scope.styleParam.WhenIndex}); \n\n                                $scope.isCollapsed = !$scope.isCollapsed;\n                                $scope.isStillCollapsed = $scope.isCollapsed;\n\n                            };\n \n                            /**\n                             *  TODO (low priority) : make icon css configurable (provider)\n                             */\n                            $scope.icons = {\n                                closedClass :   'glyphicon glyphicon-eye-open',\n                                opened :        'glyphicon glyphicon-eye-close'\n                            };\n\n                            $scope.currentIconClass =  function(){\n                                    if ($scope.isCollapsed) {\n                                        return $scope.icons.closedClass;\n                                    }else{\n                                        return $scope.icons.opened;\n                                    }\n                            };\n                        },\n\n            link: function($scope, element, attrs, ctrl, transclude) {    \n                \n                var verboseModeActive   = $scope.verboseMode;\n                var currentIndex        = $scope.currentIndex;\n                $scope.isCollapsed      = false;\n\n                /**\n                 * verbose mode for developments only\n                 */\n                if (verboseModeActive !== '') {\n                    var verbose = angular.lowercase(verboseModeActive);\n\n                    if (verbose === 'true' || verbose === '1') {\n                       console.dir(\n                            {\n                                whoAmI              :   'I am verbose from ddDecorContainer link',\n                                verbodeMode         :   verbose,\n                                ParentParentIndex   :   $scope.$parent.$parent.$index,\n                                ParentIndex         :   $scope.$parent.$index,\n                                currentIndex        :   currentIndex,\n                                styleParam          :   $scope.styleParam,\n                                columnindex         :   $scope.$parent.$parent.$parent.$parent.$index\n                            }\n                        );\n                    }                    \n                }\n               /**\n                 * forceCollapse when : \n                 *  dragDropConfigModel.containerConfig.decoration.isCollapsed changed (here bound to $scope.isStillCollapsed)\n                 */\n                $scope.$watch(function(){return $scope.isStillCollapsed;}, function(newVal, oldVal){\n\n                    if (newVal !== oldVal) {\n\n                        if ($scope.$parent.$parent.$index === 0) {\n                            $scope.isCollapsed = newVal;    \n                        }\n\n                    }\n                        \n                });                \n                /**\n                 * no header (no title, no collapse....) \n                 */\n                $scope.config.isEnabled = false;\n\n                 if (typeof currentIndex !== 'undefined') {\n                    if (currentIndex !== '') {\n                        /**\n                         * specific 1st column \n                         */\n                        if (currentIndex === '0') {\n                            /**\n                             * apply title  \n                             */\n                            if (typeof $scope.styleParam.title !== 'undefined') {\n\n                                $scope.currentTitle     = $scope.styleParam.title;\n                                $scope.config.isEnabled = true;\n                                $scope.isCollapsed      = true;\n                            } \n\n                        }\n                    }                    \n                }\n\n\n                /**\n                 * prevent transclusion creating child scope \n                 * want to know more about what I'm talking about : check this nice tip on the subject :\n                 * http://angular-tips.com/blog/2014/03/transclusion-and-scopes/        \n                 */\n                transclude($scope.$parent, function(contentClone){\n                    /**\n                     * transclusion will append content to '<div id=\"ddDecorContainerWillTranscludeHere\"></div>' \n                     */\n                    var childDiv = angular.element(element.children()[1]); \n                    childDiv.append(contentClone);\n                });   \n            }\n        };\n\n    }]);\n\n\n/**\n *  ------------------------------------------------------\n *  directive : ddDecorDropZone\n *  ------------------------------------------------------\n *\n * apply configuration to drop zone (or columns = top level containers)\n *   - column role (control selection or drop zone as form layout)\n *   - apply title\n *   - apply font-awesome icon\n *   - OPTIONAL (DEV USE) : add 'dd-verbose-mode' attribute set to true or 1 to have versbose in console\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n    .module('edaApp.directives.edaDdDecorDropZoneDirective', [])\n    .directive('ddDecorDropZone', [\n\n\n    function(){\n\n        var htmlTemplate   = ['<div class=\"{{styleParam.ApplycssClass}}\">', \n                            '  <div id=\"visualPanel\">',\n                            '    <div  class=\"panel panel-default\">', \n                            '      <div class=\"panel-heading\">', \n                            '        <h3 class=\"panel-title\">', \n                            '          <i class=\"{{currentFontAwesome}}\"></i>&nbsp;', \n                            '          {{currentTitle}}', \n                            '           <div ng-show=\"headerConfig.HeaderButtonVisible\">',\n                            '             <button class=\"btn btn-primary btn-xs buttonHeaderAddNewLine center-block\" ng-click=\"addNewLineFct();\">',\n                            '               <span class=\"glyphicon glyphicon-plus\"></span>&nbsp;add new line',\n                            '             </button>',\n                            '           </div>',\n                            '        </h3>', \n                            '      </div>', \n                            '      <div class=\"panel-body\">', \n                            '         <div class=\"row\">', \n                            '            <div class=\"col-md-12\" ng-transclude>', \n                            '            </div>', \n                            '            </div>', \n                            '      </div>', \n                            '    </div>', \n                            '   </div>',\n                            '</div>'].join(' ');\n\n        \n        return {\n            scope:  {\n                         'styleParam'       : '=ddDropZoneProperties',\n                         'verboseMode'      : '@ddDropZoneVerboseMode',\n                         'currentIndex'     : '@ddDropZoneCurrentIndex',\n                         'addNewLineFct'    : '&ddDropZoneAddNewLine'\n                    },\n            restrict:   'A', \n            template:   htmlTemplate,\n            transclude: true,\n\n            link: function($scope) {    \n                \n                var verboseModeActive   = $scope.verboseMode;\n                var currentIndex        = $scope.currentIndex;\n                \n                $scope.headerConfig = {\n                    HeaderButtonVisible : false,\n                    affixAttr           : 'bs-affix',\n                    affixEnabled        : false\n                };\n                /**\n                 * verbose mode : just for dev\n                 */\n                if (verboseModeActive !== '') {\n                    var verbose = angular.lowercase(verboseModeActive);\n\n                    if (verbose === 'true' || verbose === '1') {\n                       console.dir(\n                            {\n                                whoAmI              : 'I am verbose from ddDecorDropZone link',\n                                verbodeMode         : verbose,\n                                ParentParentIndex   : $scope.$parent.$parent.$index,\n                                ParentIndex         : $scope.$parent.$index,\n                                currentIndex        : currentIndex,\n                                styleParam          : $scope.styleParam\n                            }\n                        );\n                    }                    \n                }\n\n\n                if (typeof currentIndex !== 'undefined') {\n                    if (currentIndex !== '') {\n                            /**\n                             * apply title\n                             */\n                            if (typeof $scope.styleParam.title !== 'undefined') {\n                                $scope.currentTitle = $scope.styleParam.title;\n                            }\n\n                            /**\n                             * apply font-awesome\n                             */\n                            if (typeof $scope.styleParam.fontAwesomeIcon !== 'undefined') {\n                                $scope.currentFontAwesome = $scope.styleParam.fontAwesomeIcon;\n                            } \n\n                            /**\n                             * show add new line button\n                             */\n                            if (currentIndex === '1') {\n                                $scope.headerConfig.HeaderButtonVisible = true;\n                            }\n\n                    }                    \n                }\n                          \n            }\n        };\n    }]);\n/**\n *  ------------------------------------------------------\n *  directive : edaDdDecorItemDirective\n *  ------------------------------------------------------\n *\n *  decorate an item / control\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n    .module('edaApp.directives.edaDdDecorItemDirective', [])\n    .directive('ddDecorItem', [ 'dragDropConfig',\n\n    function( dragDropConfig ){\n\n        var htmlTemplate   = [\n                                '<div>',\n                                ' <div id=\"itemDirectiveTranscludeHere\"></div>',\n                                '</div>',\n                                ].join(' ');                                \n                             \n        return {\n            scope:  {\n\n                         'verboseMode' :        '@ddItemVerboseMode',\n                         'currentIndex' :       '@ddItemCurrentIndex',\n                         'parentIndex':         '@ddItemParentIndex',\n                         'parentParentIndex':   '@ddItemParentParentIndex', \n                         'lineItemsCount' :     '@ddItemsCount',\n                         'cssClass':            '@ddItemCssClass'\n                    },\n            restrict:   'A',\n            template:   htmlTemplate,\n            transclude: true,\n            link: function($scope, element, attrs, ctrl, transclude) {    \n                \n                var verboseModeActive = $scope.verboseMode;\n                var currentIndex      = $scope.currentIndex;\n                var parentIndex       = $scope.parentIndex;\n                var listClass         = dragDropConfig.getDistinctItemCssClass();\n\n\n                /**\n                 * init css class\n                 */\n                angular.forEach(listClass, function(css){\n                    element.removeClass(css);\n                });\n                element.addClass($scope.cssClass);                \n\n\n                /**\n                 * update css class\n                 */\n                $scope.$watch('cssClass', function(newValue, oldValue) {\n                    if(newValue !== oldValue){\n                        /**\n                         * update css class\n                         */\n                        angular.forEach(listClass, function(css){\n                            element.removeClass(css);\n                        });\n                        element.addClass(newValue); \n                    }\n                    \n                });\n\n                /**\n                 * verbose mode : just for dev \n                 */\n                if (verboseModeActive !== '') {\n                    var verbose = angular.lowercase(verboseModeActive);\n\n                    if (verbose === 'true' || verbose === '1') {\n                       console.dir(\n                            {\n                                whoAmI              : 'I am verbose from ddDecorItem directive link',\n                                verbodeMode         : verbose,\n                                ParentParentIndex   : $scope.$parent.$parent.$index,\n                                ParentIndex         : parentIndex,\n                                parentParentIndex   : $scope.parentParentIndex,\n                                currentIndex        : currentIndex,\n                                lineItemsCount      : $scope.lineItemsCount\n                            }\n                        );\n                    }                    \n                }\n\n                /**\n                 * control column : apply css class to item\n                 */\n                if ($scope.parentParentIndex === '0') {\n                   element.addClass(listClass[0]);  \n\n                }\n\n                /**\n                 * prevent transclusion creating child scope  \n                 *\n                 *\n                 * NOTE :if you want to know more about what I'm saying : check this nice tip on the subject : \n                 * http://angular-tips.com/blog/2014/03/transclusion-and-scopes/        \n                 */\n                transclude($scope.$parent, function(contentClone){\n                    /**\n                     * transclusion will append content to '<div id=\"itemDirectiveTranscludeHere\"></div>' \n                     */\n                    var childDiv = angular.element(element.children()[0]); \n                    childDiv.append(contentClone);\n                });   \n            }\n        };\n\n\n    }]);\n\n\n/**\n *  ------------------------------------------------------\n *  directive : edaDdDecorLineDirective\n *  ------------------------------------------------------\n *\n * decorate a form line :\n *  - double click will make it shake for 2 second (ready to delete state)\n *  - double click again will delete this line\n *  - no click within 2seconds : line will stop shaking \n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n    .module('edaApp.directives.edaDdDecorLineDirective', [])\n    .directive('ddDecorLine', ['$timeout', \n\n    function($timeout){\n\n        var htmlTemplate   = [\n                                '<div ng-class=\"{confirmLineDelete : deleteLine.readyToDelete}\" ng-dblclick=\"removeMe($event);\" ng-click=\"cancelDelete($event);\"> ',\n                                ' <button ng-show=\"deleteLine.readyToDelete === true\" type=\"button\"  class=\"btn btn-danger pull-right buttonCloseLine\" >',\n                                '   <span class=\"glyphicon glyphicon-trash\" aria-hidden=\"true\"></span></button>',\n                                '</div>',\n                                '  <div id=\"lineDirectiveTranscludeHere\"></<div>',\n                                ].join(' ');\n        \n        return {\n            scope:  {\n\n                         'verboseMode'  :    '@ddLineVerboseMode',\n                         'currentIndex' :    '@ddLineCurrentIndex',\n                         'parentIndex'  :    '@ddLineParentIndex',\n                         'removeLine'   :    '&ddRemoveLine'\n                    },\n            restrict:   'A',\n            template:   htmlTemplate,\n            transclude: true,\n\n            link: function($scope, element, attrs, ctrl, transclude) {    \n                \n                var verboseModeActive   = $scope.verboseMode;\n                var currentIndex        = $scope.currentIndex;\n                var parentIndex         = $scope.parentIndex;\n\n                $scope.deleteLine = {};\n                $scope.deleteLine.readyToDelete = false;\n                $scope.deleteLine.dblClickCount = 0;\n\n        \n                $scope.isCollapsed = false;\n\n\n                /**\n                 * verbose mode : just for dev \n                 */\n                if (verboseModeActive !== '') {\n                    var verbose = angular.lowercase(verboseModeActive);\n\n                    if (verbose === 'true' || verbose === '1') {\n                       console.dir(\n                            {\n                                whoAmI              : 'I am verbose from ddDecorLine directive link',\n                                verbodeMode         : verbose,\n                                ParentParentIndex   : $scope.$parent.$parent.$index,\n                                ParentIndex         : parentIndex,\n                                currentIndex        : currentIndex,\n                            }\n                        );\n                    }                    \n                }\n\n                /**\n                 * removeMe is function related to twice double click sequence to delete a line\n                 *\n                 *  - addClass / remove/class ; will make line in a shake movement\n                 *  - call \"removeLine function to delete the line (if it was rwice double clicked)\n                 */\n               $scope.removeMe= function(event){\n                    event.preventDefault();\n                    event.stopPropagation();\n\n                    if ($scope.parentIndex === '1') {\n\n                        /**\n                         * 2nd dbl click : if is shaking so it is confirmation to delete\n                         */\n                        if ($scope.deleteLine.dblClickCount === 1){\n\n                            $scope.deleteLine.dblClickCount = 0;\n                            $scope.deleteLine.readyToDelete = false;\n\n                            /**\n                             * NOTE : trick in calling parent controller function with input param when directive with isolate scope\n                             * see : https://thinkster.io/egghead/isolate-scope-am\n                             *\n                             * Here should be:\n                             * \n                             *-> in html :                     dd-remove-line=\"removeThisLine(indexToDelete)\n                             *-> in controller :               $scope.removeThisLine = function(lineIndex){\n                             *-> so in directive call it  :    $scope.removeLine({indexToDelete: currentIndex});\n                             *\n                             *\n                             *\n                             *\n                             * BUT in this case (repeats, ul> li.... complicated) \n                             *  => works better (if shaking a lot of line in a row it won't mess up)\n                             *\n                             *-> in html :                     dd-remove-line=\"removeThisLine($index)\n                             *-> in controller :               $scope.removeThisLine = function(lineIndex){\n                             *-> so in directive call it  :    $scope.removeLine();\n                             */                            \n                            //$scope.removeLine({indexToDelete: currentIndex});\n                            $scope.removeLine();\n                            //console.warn('force timer destruction after delete!');\n                            $timeout.cancel(timer);\n                        }\n\n                        //1st dbl click : make it shake so ready to delete\n                        if ($scope.deleteLine.dblClickCount === 0) {\n                            $scope.deleteLine.dblClickCount = $scope.deleteLine.dblClickCount + 1;\n                            $scope.deleteLine.readyToDelete = true;\n                        }\n                        \n                    }\n                };\n\n\n                /**\n                 * signle event will ever occur\n                 *\n                 * to prevent it to interfere with double click sequence \n                 * -> set a time out (shaking line to delete will automaticallly end shaking after timeout : 2 seconds)\n                 */\n                \n                var timer;\n\n                $scope.cancelDelete = function(event){\n                    //event.preventDefault();\n                    //event.stopPropagation();\n                    \n                        timer = $timeout(function(){\n                    \n                        $scope.deleteLine.dblClickCount = 0;\n                        $scope.deleteLine.readyToDelete = false;  \n                          \n                    }, 500);\n\n\n                    /**\n                     * debug\n                     */\n                    // timer.then(\n                    //     function() {\n                    //         console.log( 'Timer resolved!', Date.now() );\n                    //     },\n                    //     function() {\n                    //         console.log( 'Timer rejected!', Date.now() );\n                    //     }\n                    // );\n\n                };\n\n\n                /**\n                 * timer destruction to prevent from bad UI experience\n                 */\n                $scope.$on('$destroy', function(){\n                        //console.warn('timer destruction!');\n                        $timeout.cancel(timer);\n                    }\n                );                \n\n\n                /**\n                 * prevent transclusion creating child scope  \n                 *\n                 *\n                 * NOTE :if you want to know more about what I'm saying : check this nice tip on the subject : \n                 * http://angular-tips.com/blog/2014/03/transclusion-and-scopes/        \n                 */\n                transclude($scope.$parent, function(contentClone){\n                    //transclusion will append content to '<div id=\"lineDirectiveTranscludeHere\"></div>'\n                    var childDiv = angular.element(element.children()[0]); \n                    childDiv.append(contentClone);\n                });   \n            }\n        };\n\n\n    }]);\n\n\n/**\n *  ------------------------------------------------------\n *  directive : ddNoEditableControl\n *  ------------------------------------------------------\n *\n * prevent a control like an input to be editable \n *  \n *  (otherwise should lead to bas use experience with drag and drop) \n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp.directives.edaDdNoEditableControlDirective', [])\n\t.directive('ddNoEditableControl', [\n\n\tfunction(){\n\n\n\t\treturn {\n\t\t    \n\t\t    restrict: 'A',\n\n\t\t    link: function($scope, element) {    \n\t\t        \n\t\t\t\t\telement.on('click', function(event){\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\n\t\t    }\n\t\t\t};\n\n}]);\n\n\n/**\n *  ------------------------------------------------------\n *  directives container\n *  ------------------------------------------------------\n *\n *      Syntax (convention) :\n *          \"edaApp\" = application\n *          \"edaApp.directives\" = container directives module\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp.directives', [\t'edaApp.directives.edaStRationDirective',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.directives.edaDdDecorDropZoneDirective',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.directives.edaDdDecorContainerDirective',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.directives.edaDdDecorLineDirective',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.directives.edaDdDecorItemDirective',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.directives.edaDdNoEditableControlDirective',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.directives.edaDdContentCounterDirective',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.directives.edaRightClickDirective',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'edaApp.directives.edaDragdropWayEasyFormGenDirective'\n\t]);\n\n\n/**\n *  ------------------------------------------------------\n *  easy form generator directive (Drag and drop way)\n *  ------------------------------------------------------\n * \n *  all easy form generator embeded in a directive\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n;(function(){\n\t'use strict';\n\t\n\tangular\n\t\t.module('edaApp.directives.edaDragdropWayEasyFormGenDirective', [])\n\t\t.directive('edaDragdropWayEasyFormGen', edaDragDropWayEasyFormGen);\n\t\t\n\t\tedaDragDropWayEasyFormGen.$inject = [\n      '$timeout', \n      'formFieldManage',\n      'ddModelConfModelProxyService',\n      'dragDropConfig'];\n\t\t\n\t\tfunction edaDragDropWayEasyFormGen(\n      $timeout, \n      formFieldManage,\n      ddModelConfModelProxyService,\n      dragDropConfig){\n      \n      /**\n       * directive's controller injection is here (before return directive) = to avoid minification errors\n       * sad but true... -> this reminds me something?!\n       */\n      edaDragDropWayEasyFormGenCtrl.$inject = [\n        '$scope', \n        'easyFormGenVersion',\n        '$filter',\n        '$anchorScroll',\n        'toaster', \n        '$timeout',\n        '$modal',\n        '$log', \n        'formFieldManage',\n        'controllerModalProxy',\n        'dragDropItemDecorationService',\n        'dragDropConfig',\n        'ddModelConfModelProxyService',\n        'ddItemRightClickedManager'\n      ];\n      \n      \n\t\t\tvar directive = {\n\t\t\t\trestrict : 'E',\n\t\t\t\tscope : {\n          edaEasyFormGeneratorModel : '=',\n          edaSaveFormEvent          : '&edaSaveFormEvent'\n        },\n\t\t\t\tcontroller : edaDragDropWayEasyFormGenCtrl,\n\t\t\t\tcontrollerAs : 'vm',\n\t\t\t\t//bindToController : true, //angular < 1.4, activating this property will break databindings\n\t\t\t\treplace : false,\n\t\t\t\ttemplateUrl : 'edaDragDropWayEasyFormGeneratorTemplate.html',\n\t\t\t\tlink : linkFct\n\t\t\t};\n\t\t\treturn directive;\n\t\t\t\n\t\t\tfunction linkFct(scope, element, attrs){\n              \n          //watch \"scope.easyFormGeneratorModel\"\n          scope.$watch(watchEdaEasyFormModelExpression, \n            watchEdaEasyFormModelHasChanged, \n            true);          \n         \n          //watch \"scope.returnSaveEvent\"\" = catch saving form event  \n\t\t\t\t\tscope.$watch(watchReturnSaveEventExpression, \n           watchReturnSaveEventhasChanged);\t\n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          function returnAttributeConfigurationLinesIfNotEmpty(){\n            var edaEasyFormGeneratorModelToReturn = (\n                angular.isArray(scope.edaEasyFormGeneratorModel.edaFieldsModel) ?  ( \n                    scope.edaEasyFormGeneratorModel.edaFieldsModel.length > 0 ? \n                      scope.edaEasyFormGeneratorModel.edaFieldsModel \n                    : emptyEdaFieldsModel()\n                    ) \n                : emptyEdaFieldsModel()\n            );\n             return edaEasyFormGeneratorModelToReturn;  \n          }\n          \n          /**\n           * empty fields model : to display at least an empty line\n           * otherwise would look like ugly empty line like it were a bug\n           */\n\t\t\t\t\tfunction emptyEdaFieldsModel(){\n\t\t\t\t\t\tvar emptyModel = [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"line\": 1,\n\t\t\t\t\t\t\t\t\"activeColumn\": 1,\n\t\t\t\t\t\t\t\t\"columns\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"numColumn\": 1,\n\t\t\t\t\t\t\t\t\t\t\"exist\": true,\n\t\t\t\t\t\t\t\t\t\t\"control\": {\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"none\",\n\t\t\t\t\t\t\t\t\t\t\t\"key\": \"none\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t];\n\t\t\t\t\t\treturn emptyModel;\n\t\t\t\t\t}\n          \n          function returnAttributeDataModelIfNotEmpty(){\n            var dataModelToReturn = (\n                angular.isArray(scope.edaEasyFormGeneratorModel.dataModel)   ?  ( \n                    scope.edaEasyFormGeneratorModel.dataModel.length > 0 ? \n                    scope.edaEasyFormGeneratorModel.dataModel \n                    : []\n                   ) \n                : []\n            );\n             return dataModelToReturn;  \n          }          \n          \n          function watchEdaEasyFormModelExpression(){\n            return scope.edaEasyFormGeneratorModel;\n          }\n          \n          function watchEdaEasyFormModelHasChanged(newValue, oldValue){             \n            loadExistingConfigurationModel();          \n          }          \n        \n        \n        \n          function watchReturnSaveEventExpression(){\n            return scope.returnSaveEvent;\n          }\n          \n          function watchReturnSaveEventhasChanged(newValue, oldValue){\n            if (newValue === true) {\n              var _easyFormGeneratorModel = {\n                formName          : scope.configuration.formName,\n                btnSubmitText     : scope.configuration.submitButtonText,\n                btnCancelText     : scope.configuration.cancelButtonText,\n                edaFieldsModel    : scope.configuration.lines,\n                //just as test\n                \n                edaFieldsModelStringified : angular.toJson(scope.configuration.lines),\n                \n                formlyFieldsModel : scope.vm.wfFormFieldsOnlyNeededProperties,\n                dataModel         : scope.vm.model\n              };\n              scope.edaSaveFormEvent({\n                edaEasyFormGeneratorModel      : _easyFormGeneratorModel\n              });\n              //back to false, waiting next save event\n              scope.returnSaveEvent = false;\n            }            \n\t\t\t   }          \n          \n          \n        function loadExistingConfigurationModel(){\n          \n          if(angular.isDefined(scope.edaEasyFormGeneratorModel)){\n            var configlines           = returnAttributeConfigurationLinesIfNotEmpty();           \n            scope.configurationLoaded = {};\n            \n            formFieldManage.bindConfigurationLines(scope.configurationLoaded,configlines, false);\n            \n            //apply configuration model\n            scope.configuration = angular.copy(scope.configurationLoaded);\n            \n            \n            //apply ddModel\n            ddModelConfModelProxyService.loadDragDropModelFromConfigurationModel( \n                                                                        scope.configuration, \n                                                                        scope.dragDropModel\n                                                                        );            \n               \n            updateConfigurationClassName(scope.configuration);\n            \n            ddModelConfModelProxyService.refreshControlsKeys( \n                                                              scope.configuration, \n                                                              scope.dragDropModel\n                                                            );             \n            \n            console.info('compare both configuration model');\n            console.dir({\n              'loaded one' : angular.copy(scope.configurationLoaded),\n              'bound one' : angular.copy(scope.configuration) \n            });\n            \n            //apply formly model\n            formFieldManage.applyConfigurationToformlyModel(scope.configuration, scope.vm.wfFormFields, scope.vm.model);          \n            \n            scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy(scope.vm.wfFormFields);\n            scope.vm.model                            = returnAttributeDataModelIfNotEmpty();  \n            scope.configuration.formName              = angular.isString(scope.edaEasyFormGeneratorModel.formName) ? scope.edaEasyFormGeneratorModel.formName : '';\n            scope.configuration.submitButtonText      = angular.isString(scope.edaEasyFormGeneratorModel.btnSubmitText) ? scope.edaEasyFormGeneratorModel.btnSubmitText : 'Submit'; \n            scope.configuration.cancelButtonText      = angular.isString(scope.edaEasyFormGeneratorModel.btnCancelText) ? scope.edaEasyFormGeneratorModel.btnCancelText : 'Cancel';\n          }  \n        } \n         \n         \n       function updateConfigurationClassName(configModel){\n         angular.forEach(configModel.lines, function(aline){\n          var cssClassToApply = dragDropConfig.getItemCssDependingNumberItemsInRow(aline.columns.length);\n          \n          angular.forEach(aline.columns, function(aControl){\n            aControl.control.className = cssClassToApply;\n          }); \n        });   \n          \n          \n       }  \n          \n          \n      //closing link function             \n\t\t\t}\n    \n    \n      /**\n       * controller :\n       */\n      function edaDragDropWayEasyFormGenCtrl(\n                  $scope, \n                  easyFormGenVersion,\n                  $filter,\n                  $anchorScroll,\n                  toaster,\n                  $timeout, \n                  $modal,\n                  $log, \n                  formFieldManage, \n                  controllerModalProxy,\n                  dragDropItemDecorationService,\n                  dragDropConfig,\n                  ddModelConfModelProxyService,\n                  ddItemRightClickedManager) {\n    \n    \n    \n      /**\n      * versioning\n      */\n      \n      $scope.easyFormGeneratorVERSION = easyFormGenVersion;\n    \n      /**\n      * tab managment\n      */\n      $scope.tab =  {\n                      editTab : {active : true},\n                      previewTab : {active : false},\n                    };\n    \n    \n      /**\n      * formly models\n      */\n      $scope.returnSaveEvent = false;\n      /*jshint validthis: true */\n      $scope.vm = this;\n      /**\n      * model filled by form :\n      */\n      $scope.vm.model = {};\n      /**\n      * form schema : \n      * (filled from $scope.configuration on drag an drop events)\n      */\n      $scope.vm.wfFormFields = [];\n      /**\n      * wfFormFieldsOnlyNeededProperties : formly field model \n      * (clean model : just needed properties\n      *   -> that on is not bound to angular formly \n      *   -> could be saved to database\n      * )\n      */\n      $scope.vm.wfFormFieldsOnlyNeededProperties = []; \n    \n      /**\n      * preview tab : manage collapse/expend states\n      */\n      $scope.ihm = {\n                      preview : {\n                                    formlyModelViewExpanded : true,\n                                    formlyFieldsViewExpanded : true,\n                                    customizeFormButtonsExpanded : true,\n                                    saveThisFormExpanded : true  \n                                }\n    \n      };\n    \n    \n      /**\n      * easyFormDragDropProperties : configure drag and drop apearance\n      *\n      * — see dragDropConfig provider —\n      */\n      $scope.easyFormDragDropProperties = dragDropConfig.getDragDropConfigModel();\n      /**\n      * dragDropModel : darg drop presentation model\n      *\n      * manage drag and drop UI : drag and drops events will change it then change configuration model\n      */\n      $scope.dragDropModel = [].concat(dragDropConfig.getDragDropPresentationModel());\n    \n      //console.dir(  {'dragDropModel' : $scope.dragDropModel});\n    \n    \n    \n      //column ref                         \n      $scope.numberOfColumns = 1;\n      $scope.MaxNumberOfColumns = 3;\n      $scope.MinNumberOfColumns = 1;\n    \n    \n      ///////////////////////////////////////////////////////////////////////////////////\n      // configuration model (contains array of lines which contains array of columns)\n      ///////////////////////////////////////////////////////////////////////////////////\n      $scope.configuration = {};\n      /**\n      * formFieldManage.initConfigurationEditFromScratch(_OBJECT TO INIT_, _BOOL ADD STEP WAY PROPERTIES_)\n      */\n      formFieldManage.initConfigurationEditFromScratch($scope.configuration , false);\n      \n      /**\n      * init proxyModel \n      * (object shared between this controller and edit panel controlelr)\n      */\n      controllerModalProxy.initProxyModel();\n      /**\n      * collapse all other group of draggable controls : when a group control expands\n      */\n      $scope.collapseAllGroupControl = function(allExceptThisGroupIndex){\n        \n        angular.forEach($scope.easyFormDragDropProperties.containerConfig.decoration, function(value){\n          if (value.WhenIndex !== allExceptThisGroupIndex) {\n              dragDropConfig.setDragDropConfigContainerDecorationCollapse($scope.easyFormDragDropProperties, value.WhenIndex, true);\n          }\n        });\n        \n      };\n    \n    \n    \n      $scope.vm.onSubmit = onSubmit;\n      \n      function onSubmit() {\n      \n          toaster.pop({\n                type: 'info',\n                timeout:2000,\n                title: 'should save data model if it were not a static example',\n                body: 'data :' + $filter('json')($scope.vm.model, 4),                \n                showCloseButton: true\n          }); \n      }\n    \n    \n    \n      // /**\n      //  * init formly control list\n      //  */\n      // //needed for select : list all existing forms\n      // $scope.loadExistingFormsList = loadExistingFormsAsList();\n    \n    \n      // function loadExistingFormsAsList(){\n      //   //If it were not a static html, it should call server to retrieve data from database :\n      //   // $scope.formlyList = formsByIdService.query();  \n      // }\n    \n      // //load on init\n      // loadExistingFormsAsList();\n    \n      // $scope.previewLoadedForm = {fieldsModel:[]};\n      // $scope.configurationLoaded = {};\n    \n      // $scope.previewExistingform = function(formlyform){\n    \n      //  var configlines = JSON.parse(formlyform.formlyField);\n      //  //here to replace with $scope.configuration : initialise configuration with lines \n      //  $scope.configurationLoaded = {};\n      //  formFieldManage.bindConfigurationLines($scope.configurationLoaded,configlines);\n    \n      //  formFieldManage.applyConfigurationToformlyModel($scope.configurationLoaded, $scope.previewLoadedForm.fieldsModel, $scope.vm.model);\n    \n      //  $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n    \n      //  $scope.previewLoadedForm.cancelButtonText = formlyform.cancelButtonText;\n      //  $scope.previewLoadedForm.submitButtonText = formlyform.submitButtonText;\n      // };\n    \n    \n    \n    \n    \n    \n      //init number of configuration lines\n      $scope.resetToZeroModel = function(){\n        $scope.configuration.activeLine = 1;\n    \n        if ($scope.configuration.lines.length > 1) {\n            $scope.configuration.lines.splice(1, $scope.configuration.lines.length - 2);\n        }\n        return $scope.countConfigurationModelLines();\n      };  \n    \n    \n    \n    \n    \n    \n    \n      //return count configuration lines\n      $scope.countConfigurationModelLines = function(){\n        return $scope.configuration.lines.length;\n      };    \n      //switch to line\n      $scope.setActiveLineNumber = function(lineNumber){\n        if (lineNumber <= $scope.countConfigurationModelLines()) {\n          $scope.configuration.activeLine = lineNumber;\n        }\n      };                \n    \n      $scope.upThisLine = function(indexLine){  \t\n        if (indexLine > -1) {\n            if ($scope.configuration.lines[indexLine - 1]) {\n              var currentLineObj = $scope.configuration.lines[indexLine];\n              $scope.configuration.lines.splice(indexLine , 1);\n              $scope.configuration.lines.splice((indexLine - 1), 0, currentLineObj);  \t\n              //manage selected aciveLine\n              $scope.configuration.activeLine = 1;\n            }\n        }\n          //re-render formfield \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n    \n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);     \n      };\n    \n    \n      $scope.downThisLine = function(indexLine){\n        if (indexLine > -1) {\n            if ($scope.configuration.lines[indexLine + 1]) {\n              var currentLineObj = $scope.configuration.lines[indexLine];\n              $scope.configuration.lines.splice(indexLine , 1);\n              $scope.configuration.lines.splice((indexLine + 1), 0, currentLineObj);  \n              //manage selected aciveLine\n              $scope.configuration.activeLine = 1;\n            }\n          }     \n          //re-render formfield \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model); \n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);   \n      };\n    \n    \n    \n      //must be remove a line with index of line to delete\n      $scope.removeThisLine = function(index){\n        if (index > -1) {\n          if ($scope.configuration.lines.length > 1) {\n              //manage selected aciveLine\n              if ($scope.configuration.activeLine === index + 1) {\n                $scope.configuration.activeLine = 1;\n              }\n              $scope.configuration.lines.splice(index, 1);\n          }else{\n              $timeout(function(){\n                  toaster.pop({\n                          type: 'warning',\n                          title: 'Last line' ,\n                          body: 'Can\\'t delete the last line',                \n                          showCloseButton: true\n                    });\n              }, 100); \n          }\n    \n        //re-render formfield \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n        }\n      };\n    \n    \n    \n    \n    \n      $scope.increaseNumberOfColumns = function(){\n    \n        if ($scope.configuration.lines[$scope.configuration.activeLine -1].columns.length < $scope.MaxNumberOfColumns) {\n        var newNumberOfColumns = $scope.configuration.lines[$scope.configuration.activeLine -1].columns.push(\n                                                      {\n                                                                      numColumn: -1,\n                                                                      exist: true, \n                                                                      control: {\n                                                                                  type:'none',\n                                                                                  key: 'none'\n                                                                                }                                         \n                                                      }\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n                                              );\n        \n        $scope.configuration.lines[$scope.configuration.activeLine -1].columns[newNumberOfColumns - 1].numColumn = newNumberOfColumns; \n      }\n        //re-render formfield \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model); \n    \n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n    };\n    \n    \n      $scope.decreaseNumberOfColumns = function(indexLine, indexColumn){\n        if ($scope.configuration.lines[$scope.configuration.activeLine -1].columns.length > 1) {\n          $scope.configuration.lines[$scope.configuration.activeLine -1].columns.splice($scope.configuration.lines[$scope.configuration.activeLine -1].columns.length -1, 1);\n        }\n        //re-render formfield \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);  \n    \n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);  \n      };\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n      ////////////////////////////////////////////////////////////\n      //             porperties control (STEP 3)\n      ////////////////////////////////////////////////////////////\n    \n      $scope.saveThisForm = function(){\n        if (typeof $scope.configuration.formName === 'undefined') {\n        toaster.pop({\n                type: 'warning',\n                timeout:2000,\n                title: 'Form name is undefined',\n                body: 'Form has not been saved.',                \n                showCloseButton: true\n          });\n          return false;\n        }\n    \n        if ($scope.configuration.formName === '') {\n        toaster.pop({\n                type: 'warning',\n                timeout:2000,\n                title: 'Form name is required',\n                body: 'Form has not been saved.',                \n                showCloseButton: true\n          });\n          return false;\n        }\n        /**\n        * [type description]\n        * @type {String}\n        */\n        toaster.pop({\n                type: 'wait',\n                timeout:10000,\n                title: 'Form is being saved',\n                body: 'Wait.',                \n                showCloseButton: true\n          });\n    \n          //var wfForm = new formsByIdService();\n    //       var formSavingIsOK = true;\n    // \n    //       wfForm.formName = $scope.configuration.formName;\n    //       wfForm.submitButtonText = $scope.configuration.submitButtonText;\n    //       wfForm.cancelButtonText = $scope.configuration.cancelButtonText;\n    // \n    //       wfForm.formlyField = JSON.stringify($scope.configuration.lines); \n    \n          // save to database here \n          // wfForm.$save()\n          //             .then(function(res)  {    formSavingIsOK = true;    })\n          //             .catch(function(req) { \n          //                                   toaster.clear();\n          //                                   formSavingIsOK = false; \n          //                                   toaster.pop({\n          //                                           type: 'error',\n          //                                           timeout:2000,\n          //                                           title: 'Error while saving form',\n          //                                           body: 'Sorry, an Error occured while saving form.',                \n          //                                           showCloseButton: true\n          //                                     });\n          //             })\n          //             .finally(function()  { \n          //                                   if (formSavingIsOK === true) {\n          //                                     toaster.clear();  \n          //                                     toaster.pop({\n          //                                             type: 'success',\n          //                                             timeout:2000,\n          //                                             title: 'Form is successfully saved',\n          //                                             body: '',                \n          //                                             showCloseButton: true\n          //                                       });                                         \n          //                                   }\n          //              });\n    \n          toaster.clear();  \n          toaster.pop({\n                  type: 'info',\n                  timeout:2000,\n                  title: 'Form would be saved if it were not a static example',\n                  body: '',                \n                  showCloseButton: true\n            }); \n            \n         //save form event   \n         $scope.returnSaveEvent = true;   \n          return true;\n      };\n    \n    \n    \n      ////////////////////////////////////////////////////////////\n      //            modal : add control to column\n      ////////////////////////////////////////////////////////////\n    \n      $scope.nyaSelect = {};\n      controllerModalProxy.initNyaSelect($scope.nyaSelect);\n    \n      $scope.animationsEnabled = true; \n    \n      $scope.showModalAddCtrlToColumn = function (size, indexLine, numcolumn) {\n    \n        var modalInstance = $modal.open({\n                                          animation: $scope.animationsEnabled,\n                                          templateUrl: 'editModalTemplate.html', \n                                          controller: 'edaEditMODALController',\n                                          size: 'lg',\n                                          resolve: {\n                                            nyaSelect: function () {\n                                              return controllerModalProxy\n                                                                .getNyASelectFromSelectedLineColumn(  $scope.nyaSelect, \n                                                                                                      $scope.configuration,\n                                                                                                      indexLine, \n                                                                                                      numcolumn\n                                                                                                    );\n                                            }\n                                          }\n        });\n    \n    \n        modalInstance.result.then(function (modalAddCtrlModel) {\n            controllerModalProxy.bindConfigurationModelFromModalReturn(indexLine, numcolumn, modalAddCtrlModel, $scope.configuration);\n            formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n            \n            $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n        }, function () {\n          $log.info('Modal dismissed at: ' + new Date());\n        });\n      };\n    \n    \n      /**\n      *\n      * \n      *   drag and drop : may move from this controller\n      *\n      *\n      * \n      */\n    \n    \n      //specific Container dragoverCallback event\n      $scope.dragoverCallbackContainer = function(parentparentIndex, parentIndex, index){\n          //prevent container in layout column to be drag to control select contianer \n          if (index === 0) {\n              return false;\n          }\n          return true;\n      };\n    \n      $scope.dropCallback = function(event, index, item, external, type, allowedType) {\n              \n          if (external) {\n              if (allowedType === 'itemType'      && !item.label)             return false;\n              if (allowedType === 'containerType' && !angular.isArray(item))  return false; \n          }\n    \n          /**\n          * TODO : update configuration model\n          */\n    \n          /**\n          * set a timeout befire binding\n          * since ddModel may not be called when already full updated\n          */\n          var timerRefreshDDToConfig = $timeout(function(){\n            \n            $scope.configuration = angular\n                                      .copy(ddModelConfModelProxyService\n                                              .refreshAllConfigurationFromDragAndDropModel(\n                                                                                            $scope.configuration, \n                                                                                            $scope.dragDropModel\n                                                                                          )\n                                          );\n            \n            formFieldManage.applyConfigurationToformlyModel(  \n                                                              $scope.configuration, \n                                                              $scope.vm.wfFormFields, \n                                                              $scope.vm.model\n                                                            );\n                                                            \n            $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n            \n            ddModelConfModelProxyService.refreshControlsKeys( \n                                                              $scope.configuration, \n                                                              $scope.dragDropModel\n                                                            );            \n    \n          }, 200);\n    \n          /**\n          * timerRefreshDDToConfig timer destruction\n          */\n          $scope.$on('$destroy', function(){\n                $timeout.cancel(timerRefreshDDToConfig);\n            }\n          );\n          \n    \n          return item;\n      };\n    \n    \n    \n          \n      $scope.dndItemMoved = function(parentParentIndex, parentIndex, itemIndex){\n        //prevent item from first container to disapear when dropped on other container\n        if (parentParentIndex > 0) {\n            $scope.dragDropModel[parentParentIndex][parentIndex].splice(itemIndex, 1);\n        }\n      };\n    \n      $scope.dragoverCallbackItems = function(ParentParentIndex, parentIndex, index, external){\n            //prevent items in layout column to be drag to control select  \n            if (parentIndex === 0) {\n                return false;\n            }\n            return true;\n        };\n    \n    \n      /**\n      * disableItemDropIf prevent dropping on condition\n      *\n      * TODO : to replace in html : dnd-disable-if=\"items.length > 2\"\n      */\n      $scope.disableItemDropIf = function(){\n    \n      };\n    \n    \n    \n      /**\n      * [dropCallbackItems description]\n      * @param  {[type]} event                   [description]\n      * @param  {[type]} index                   [description]\n      * @param  {[type]} realIndex               [description]\n      * @param  {[type]} parentIndex             [description]\n      * @param  {[type]} parentParentIndex       [description]\n      * @param  {[type]} parentParentParentIndex [description]\n      * @param  {[type]} item                    [description]\n      * @param  {[type]} external                [description]\n      * @param  {[type]} type                    [description]\n      * @param  {[type]} allowedType             [description]\n      * @return {[type]}                         [description]\n      */\n      $scope.dropCallbackItems = function(event, index, realIndex, parentIndex, parentParentIndex, parentParentParentIndex, item, external, type, allowedType){\n        \n          if (external) {\n              if (allowedType === 'itemType' && !item.label) return false;\n              if (allowedType === 'containerType' && !angular.isArray(item)) return false; \n          }\n        \n        /**\n          * set a timeout before binding\n          * since ddModel may not be called when already full updated\n          */\n          var timerRefreshDDToConfig = $timeout(function(){\n            \n            $scope.configuration = angular.copy(ddModelConfModelProxyService\n                                                              .refreshAllConfigurationFromDragAndDropModel(\n                                                                                                            $scope.configuration, \n                                                                                                            $scope.dragDropModel\n                                                                                                          ));\n                                                                                                          \n            formFieldManage.applyConfigurationToformlyModel(  \n                                                                $scope.configuration, \n                                                                $scope.vm.wfFormFields, \n                                                                $scope.vm.model\n                                                            );\n                                                            \n            $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields); \n            /**\n            * refresh controls key in dragDrop Model\n            * to persist already exists controls between refreshes when item drop events\n            */\n            ddModelConfModelProxyService.refreshControlsKeys( \n                                                              $scope.configuration, \n                                                              $scope.dragDropModel\n                                                            );        \n    \n          }, 200);\n    \n          /**\n          * add/set rightCliked property to false\n          *\n          * will help edaRightClick directive\n          */\n          ddItemRightClickedManager.setUnRightClicked(item);\n    \n          /**\n          * timerRefreshDDToConfig timer destruction\n          */\n          $scope.$on('$destroy', function(){\n                $timeout.cancel(timerRefreshDDToConfig);\n            }\n          );\n    \n    \n          return item;\n      };\n    \n    \n    \n      /**\n      * left panel (edit control)\n      */\n      \n    \n      $scope.editPanelModel = {\n                                toggle : false\n                              };\n    \n    \n    \n      $scope.saveFromEditPanel = function(){\n    \n            /**\n            * TODO : \n            * should be called from edit panel\n            *\n            * AND\n            *\n            * should call all these methods\n            *\n            * need to get  : \n            * \n            * - line index\n            * - column index\n            * - basicSelectRowCollection (from edpitpanelcontroller)   --> maybe in controllerModalProxy service\n            * - groupedSelectRowCollection (from edpitpanelcontroller) --> maybe in controllerModalProxy service\n            * - radioRowCollection (from edpitpanelcontroller)         --> maybe in controllerModalProxy service\n            */\n            \n            controllerModalProxy.bindSpecialCtrlTemporyModelsToProxyModel();\n        \n            //save config to control\n            //controllerModalProxy.applyConfigToSelectedControl(self.proxyModel);\n            //return current model to parent controller :\n    \n    \n    \n            // //update configuration model and formly model\n            controllerModalProxy\n                    .bindConfigurationModelFromProxyModel(  \n                                                            controllerModalProxy.getEditPanelModelLineIndex(), \n                                                            controllerModalProxy.getEditPanelModelColumnIndex(), \n                                                            $scope.configuration\n                                                          );\n    \n            formFieldManage.applyConfigurationToformlyModel(\n                                                              $scope.configuration, \n                                                              $scope.vm.wfFormFields, \n                                                              $scope.vm.model\n                                                            );\n                                                                \n            $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields); \n            \n            ddModelConfModelProxyService.refreshControlsKeys( \n                                                      $scope.configuration, \n                                                      $scope.dragDropModel\n                                                      );    \n        \n            controllerModalProxy.setEditPanelModelToggle(false);\n            $scope.editPanelModel.toggle = controllerModalProxy.getEditPanelModelToggle();  \n            ddItemRightClickedManager.resetAllDragDropItemSelectedState($scope.dragDropModel);\n    \n      };\n      /**\n      * close side panel\n      * -> no update =  cancel\n      */\n      $scope.closeEditPanel = function(){\n        /**\n        * reset all rightClicked control properties to false\n        */\n        ddItemRightClickedManager.resetAllDragDropItemSelectedState($scope.dragDropModel);\n    \n    \n        /**\n        * TODO : refresh configuration model \n        * uncomment pafter update these next 3 lines\n        * \n        * NOTE : indexLine AND  numcolumn should be stored in service and\n        * updated when togle sidepanel\n        */\n      \n        //controllerModalProxy.bindConfigurationModelFromProxyModel(indexLine, numcolumn, modalAddCtrlModel, $scope.configuration);\n        //formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);    \n        //$scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);     \n        \n        controllerModalProxy.setEditPanelModelToggle(false);\n        $scope.editPanelModel.toggle = controllerModalProxy.getEditPanelModelToggle();\n        \n      };\n    \n      $scope.debugProxyModel = controllerModalProxy.ProxyModel;\n    \n    \n    \n      $scope.setRightClicked = function(previousState, item){\n        item.rightCliked = true;\n      };\n    \n    \n      $scope.toggleEditPanel = function(event, lineIndex, colIndex, item){\n      ddItemRightClickedManager.resetAllDragDropItemSelectedState($scope.dragDropModel);\n      /**\n        * already opened (could be another control edit)\n        */\n      if (controllerModalProxy.getEditPanelModelToggle()) {\n        /**\n        * - immediate close \n        * and \n        * - refresh configuration model + formly model\n        */\n        controllerModalProxy.setEditPanelModelToggle(false);\n        $scope.editPanelModel.toggle = controllerModalProxy.getEditPanelModelToggle(); \n        \n        //TODO : for refreshing\n        //controllerModalProxy.bindConfigurationModelFromProxyModel(indexLine, numcolumn, modalAddCtrlModel, $scope.configuration);\n        //formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);    \n        //$scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);    \n                \n    \n    \n        /**\n        * check if new control right clicked otherwise just toggle side panel\n        */\n        if (typeof controllerModalProxy.getEditPanelModelLineIndex()    !== 'undefined' &&\n            typeof controllerModalProxy.getEditPanelModelColumnIndex()  !== 'undefined' &&\n            typeof controllerModalProxy.getEditPanelModelControl()      !== 'undefined') {\n      \n      \n          if (controllerModalProxy.getEditPanelModelLineIndex()   === lineIndex &&\n              controllerModalProxy.getEditPanelModelColumnIndex() === colIndex  &&\n              angular.equals(controllerModalProxy.getEditPanelModelControl(), item)) {\n      \n              //console.info('already opened for SAME ctrl : so close - no re-open');\n            \n          }else{\n      \n              //console.info('already opened for DIFFERENT ctrl : so re-open');\n    \n              item.rightCliked = true;\n              /**\n              * set a timeout before re-opening\n              * 500ms is ok for a ps-size=\"400px\"\n              */\n              var timerCloseOpenedEditPanel = $timeout(function(){\n                \n              controllerModalProxy.setEditPanelModelLineIndex(lineIndex);\n              controllerModalProxy.setEditPanelModelColumnIndex(colIndex);\n              controllerModalProxy.setEditPanelModelControl(item);\n              \n              /**\n                * control model passed to Service : controllerModalProxy\n                * \n                */\n              controllerModalProxy.setProxyModelFromConfigurationSelection(\n                                                                            $scope.configuration,\n                                                                            lineIndex, \n                                                                            colIndex\n                                                                            );\n              \n              \n              controllerModalProxy.setEditPanelModelToggle(true);\n              $scope.editPanelModel.toggle = controllerModalProxy.getEditPanelModelToggle();                                         \n                \n              }, 200);\n      \n              /**\n              * timerCloseOpenedEditPanel timer destruction\n              */\n              $scope.$on('$destroy', function(){\n                    $timeout.cancel(timerCloseOpenedEditPanel);\n                }\n              );\n          }\n        }\n      \n      }else{\n        /**\n        * previous state = closed = immediate open \n        */\n        //console.info('NOT already opened : so open');\n        item.rightCliked = true;\n          \n        controllerModalProxy.setEditPanelModelLineIndex(lineIndex);\n        controllerModalProxy.setEditPanelModelColumnIndex(colIndex);\n        controllerModalProxy.setEditPanelModelControl(item);\n        \n        /**\n          * control model passed to Service : controllerModalProxy\n          * \n          */\n        controllerModalProxy.setProxyModelFromConfigurationSelection(\n                                                                      $scope.configuration,\n                                                                      lineIndex, \n                                                                      colIndex\n                                                                      );\n    \n        \n        controllerModalProxy.setEditPanelModelToggle(true);\n        $scope.editPanelModel.toggle = controllerModalProxy.getEditPanelModelToggle();\n        \n      }                       \n      };\n      // /**\n      //  * refreshModels : to call after drag and drop events\n      //  */\n      // $scope.refreshModels = function(){\n      //   $timeout(function(){\n      //     console.info('refreshing models');\n      //     formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n      //     $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields); \n      //   }, 10);\n    \n    \n      // };\n    \n    \n    \n      /**\n      * removeThisLine event line deleted\n      */\n      $scope.removeThisLine = function(lineIndex){\n        $scope.dragDropModel[1].splice(lineIndex,1);\n      };\n    \n    \n      $scope.model = [];\n    \n      function addNewline(){\n        /**\n        * re-render formfield\n        *\n        * TODO : to fix\n        */\n    \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields); \n      }\n    \n    \n      $scope.insertNewLine = function(){\n                              addNewline();\n                              $scope.dragDropModel[1].push([]);\n                              };\n    \n        }\n      }  \n                     \n    })();\n\n/**\n *  ------------------------------------------------------\n *  directive : edaRightClickDirective\n *  ------------------------------------------------------\n *\n *  manage right click\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n    .module('edaApp.directives.edaRightClickDirective', [])\n    .directive('edaRightClick', [\n        '$parse', \n    \tfunction($parse){\n    \t\n    \treturn {\n\n    \t\trestrict: 'A',\n    \t\t \n    \t\tlink: function(scope, element, attrs) {\n\t    \t\tvar fn                  = $parse(attrs.edaRightClick);\n                var columnIndex         = $parse(attrs.edaRightClickColIndex);\n                var fctSetRightclicked  = $parse(attrs.edaSetRightClicked);\n                \n                /**\n                 * on right click event manage\n                 * - open edit panel through attrs.edaRightClick function\n                 * - set rightCliked attribute (to true) to control (in dragDropModel)\n                 */\n    \t        element.on('contextmenu', function(event) {\n    \t            scope.$apply(function() {\n    \t                event.preventDefault();\n\n                    \n                        //right click limited to template column (index = 1)                           \n                        if (columnIndex(scope) === 1) {\n                            //set rightClicked to true\n                            fctSetRightclicked(scope, {});\n                        }\n\n                        //right click limited to template column (index = 1)   \n    \t                if (columnIndex(scope) === 1) fn(scope, {$event:event});\n    \t            });\n    \t        });\t\n\n\n\n    \t\t}\n    \t};\n    }]);\n/**\n *  ------------------------------------------------------\n *  directive : stRatio\n *  ------------------------------------------------------\n *\n * adapt element's width % \n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp.directives.edaStRationDirective', [])\n\t.directive('stRatio',[\n\n  function(){\n\n        return {\n        \trestrict: 'A',\n\n          link:function(scope, element, attr){\n            var ratio=+(attr.stRatio);\n            \n            element.css('width',ratio+'%');\n            \n          }\n        };\n}]);\n/**\n *  ------------------------------------------------------\n *  service : dragDropItemDecorationService\n *  ------------------------------------------------------\n *\n *  service that helps manipulating drag drop item class\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp.services.dragDropItemCountersService', [])\n\t.factory('dragDropItemCounterService', ['dragDropConfig', \n\t\n\tfunction(dragDropConfig){\n\n\t\tvar _modelItemRealCounter = [];\n\t\tvar _itemsNotToCount = angular.copy(dragDropConfig.getItemsNotToCount());\n\n\t\tvar Service = {};\n\t\t\n\t\tService.getItemsNotToCount = function(){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn _itemsNotToCount;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}; \n\n\t\tService.getModelItemsRealCounter = function(){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \treturn _modelItemRealCounter;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\n\t\tService.isHtmlElementToCount = function(htmlvalue){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar isToCount = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (htmlvalue.length > 0) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tangular.forEach(_itemsNotToCount, function(value){\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (var classes = htmlvalue.length - 1; classes >= 0; classes--) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (htmlvalue[classes] === value){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisToCount = isToCount & false;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn isToCount;\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tService.updateLineItemCss = function(fullModel, listCssToApply, columIndex, lineIndex, realCount){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  if (typeof fullModel \t\t\t!== \t\t'undefined' &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t  typeof listCssToApply !== \t\t'undefined' &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t  typeof columIndex \t\t!== \t\t'undefined' &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t  typeof lineIndex \t\t\t!== \t\t'undefined' &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t  typeof realCount \t\t\t!== \t\t'undefined') {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (var i = fullModel[columIndex][lineIndex].length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (var j = 0; j < listCssToApply.length; j++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(listCssToApply[j].item === i &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t listCssToApply[j].isReal === true){\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullModel[columIndex][lineIndex][i].cssClass = dragDropConfig.getItemCssDependingNumberItemsInRow(realCount);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} \t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\n\t\treturn Service;\n\n}]);\n/**\n *  ------------------------------------------------------\n *  service : ddItemRightClickedManager\n *  ------------------------------------------------------\n *\n *  service that helps managing right clicked controls \n *  (right clicking control open side edit panel)\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp.services.ddItemRightClickedManager', [])\n\t.factory('ddItemRightClickedManager', [\n\t\t \n\t\tfunction(){\n\n\t\t\tvar Service = {};\n\n\t\t\t/**\n\t\t\t * setUnRightClicked \n\t\t\t * set unSelected (see edaRightClick directive)\n\t\t\t *\n\t\t\t * used in edaEditcontroller when droping control\n\t\t\t */\n\t\t\tService.setUnRightClicked = function(dragDropModelItem){\n\t\t\t\tdragDropModelItem.rightCliked = false;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * resetAllDragDropItemSelectedState\n\t\t\t *\n\t\t\t * simply reset (=set to false) all item.rightCliked \n\t\t\t * in edit column (dragable column)\n\t\t\t *\n\t\t\t * used in edaEditPanel when closeEditPanel() called\n\t\t\t */\n\t\t\tService.resetAllDragDropItemSelectedState = function(dragDropModel){\n\t\t\t\t/**\n\t\t\t\t * iterates through lines\n\t\t\t\t * NOTE : \n\t\t\t\t * - dragDropModel[1] since it is dragable column\n\t\t\t\t * - dragDropModel[0] is just the \"pick up controls\" column\n\t\t\t\t */\n\t\t\t\tangular.forEach(dragDropModel[1] ,function(line){\n\t\t\t\t\tangular.forEach(line, function(item){\n\t\t\t\t\t\titem.rightCliked = false;\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t};\n\n\t\t\treturn Service;\n\t\t}\n\t]);\n/**\n *  ------------------------------------------------------\n *  service : dragDropItemDecorationService\n *  ------------------------------------------------------\n *\n *  service that helps manipulating drag drop item class\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp.services.dragDropItemDecorationService', [])\n\t.factory('dragDropItemDecorationService', \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t['dragDropConfig',  \n\t\n\tfunction(dragDropConfig){\n\n\t\tvar _listItemClass = [].concat(dragDropConfig.getListItemCssClass());\n\n\t\tvar Service = {};\n\n\t\tService.getListClass = function(){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn _listItemClass;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\n\t  Service.getCssClassWhenNumberItemsInRowIs = function(thisNumber){\n\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn dragDropConfig.getItemCssDependingNumberItemsInRow(thisNumber);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}; \n\n\t\tService.applyCssClassWholeLine = function(model, indexColumn, indexLine, numberItems, restrictToThisIndexColumn){\n\t\t  if (typeof numberItems !== 'undefined' &&\n\t\t  \t  typeof indexLine !== 'undefined' &&\n\t\t  \t  typeof indexColumn !== 'undefined' &&\n\t\t  \t  typeof model !== 'undefined' &&\n\t\t  \t  typeof restrictToThisIndexColumn !== 'undefined') {\n\n\t\t    if (indexColumn === restrictToThisIndexColumn) {\n\n\t        for (var i = model[indexColumn][indexLine].length - 1; i >= 0; i--) {\n\t\t          model[indexColumn][indexLine][i].cssClass = dragDropConfig.getItemCssDependingNumberItemsInRow(numberItems);\n\t\t      }\n\n\t\t    } \n\t\t    return true;\n\t\t  }else{\n\t\t    return false;\n\t\t  }\n\t\t};\n\n\t\tService.updateCssClassWholeColumn = function(model, indexColumn){\n\n\t\t  if (typeof indexColumn !== 'undefined' &&\n\t\t  \t  typeof model !== 'undefined') {\n\n\t\t   \t/**\n\t\t   \t * iterates through rows\n\t\t   \t */\n\t\t   \tfor (var cpt = model[indexColumn].length - 1; cpt >= 0; cpt--) {\n\t\t\t   \t/**\n\t\t\t   \t * iterates through items\n\t\t\t   \t */\n\t\t      for (var i = model[indexColumn][cpt].length - 1; i >= 0; i--) {\n\t\t          model[indexColumn][cpt][i].cssClass = dragDropConfig.getItemCssDependingNumberItemsInRow(model[indexColumn][cpt].length);\n\t\t      }\n\t\t   \t}\t\n\n\t\t    return true;\n\t\t\t}else{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\n\t\treturn Service;\n\n}]);\n/**\n *  ------------------------------------------------------\n *  service : dragDropModelConfigModelProxyService\n *  ------------------------------------------------------\n *\n *  service that helps to bind drag drop model to configuration model\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\nangular\n\t.module('edaApp.services.dragDropModelConfigModelProxyService', [])\n\t.factory('ddModelConfModelProxyService', [\t'EasyFormGenFormlyBindingModels',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'controllerModalProxy',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'dragDropConfig',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'$parse',\n\t\tfunction( EasyFormGenFormlyBindingModels, controllerModalProxy, dragDropConfig, $parse){\n\n\n\t\t\t/**\n\t\t\t * return a control model that is more formly detailed\n\t\t\t * (more formly detailed : see controls property in EasyFormGenFormlyBindingModels._easyFormListControls)\n\t\t\t */\n\t\t\tfunction getFormlyDetailedControlModelFromDragDropObject(dragDrapCtrlModel){\n\t\t\t\tvar controlModel = {};\n\t\t\t\tvar listControl = EasyFormGenFormlyBindingModels.getEasyFormListControls();\n\t\t\t\tvar controlsListGetter = $parse('controls');\n\n\t\t\t\tangular.forEach(controlsListGetter(listControl), function(ctrlListValue){\n\t\t\t\t\tif (ctrlListValue.id === dragDrapCtrlModel.control)  controlModel = ctrlListValue;\n\t\t\t\t});\n\n\t\t\t\treturn controlModel;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * valid a control key is unique\n\t\t\t *\n\t\t\t * yes... function name already told us that, \n\t\t\t * -> it's just confirmation and to see if\n\t\t\t *    you keep focus while reading it ^^\n\t\t\t */\n\t\t\tfunction validKeyUniqueness(thisKey, configurationObj){\n\t\t\t  var isUnique = true;\n\t\t\t  for (var i = configurationObj.lines.length - 1; i >= 0; i--) {\n\t\t\t    for (var j = configurationObj.lines[i].columns.length - 1; j >= 0; j--) {\n\t\t\t    \tif (typeof configurationObj.lines[i].columns[j].control !== 'undefined') {\n\t\t\t\t      if (configurationObj.lines[i].columns[j].control.key === thisKey) {\n\t\t\t\t        isUnique = false;\n\t\t\t\t      }\t\t\t    \t\t\n\t\t\t    \t}\n\t\t\t    } \n\t\t\t  }\n\t\t\t  return isUnique;  \n\t\t\t} \n\n\n\t\t\tfunction createUniqueKey(baseKeyValue, configurationObj){\n\t\t\t\t/**\n\t       * unique key (set only first time) in this model is formly control type + Date.now(); \n\t       */\n\n\t      var newKey = baseKeyValue + '-' + Date.now();\n\t      if (validKeyUniqueness(newKey, configurationObj) === true){\n\t        return newKey;\n\t      }else{\n\t        newKey = baseKeyValue + '-' + Date.now();\n\t        if (validKeyUniqueness(newKey, configurationObj) === true){\n\t          return newKey;\n\t        }else{\n\t          newKey = baseKeyValue + '-' + Date.now();\n\t          return newKey;\n\t        }\n\t      } \n\n\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * apply this line\n\t\t\t */\n\t\t\tfunction applyThisLine(linevalue, lineIndex, configModel){\n\t\t\t\tangular.forEach(configModel.lines, function(aLineValue, aLineKey){\n\t\t\t\t\tif (aLineKey === lineIndex){ \n\t\t\t\t\t\taLineValue.line = linevalue;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * bind formly detailed model to configuration control model\n\t\t\t */\n\t\t\tfunction bindConfigCtrlModelFromFormlyDetailedCtrlModel(formlyDetailCtrlModel, configurationCtrlModel, configModel){\n\t\t\t\t/**\n\t\t\t\t *\n\t\t\t\t * \n\t\t\t\t * TODO :properties should be served by provider \n\t\t\t\t *\n\t\t\t\t * more configurable without pain\n\t\t\t\t *\n\t\t\t\t */\n\t\t\t\t//set selected control :\n\t\t\t\t$parse('control.selectedControl')\n\t\t\t\t\t.assign(configurationCtrlModel, $parse('selectedControl')(formlyDetailCtrlModel));\n\n\t\t\t\t//set type :\t\n\t\t\t\t$parse('control.type')\n\t\t\t\t\t.assign(configurationCtrlModel, $parse('formlyType')(formlyDetailCtrlModel));\n\n\t\t\t\t//set key :\t\n\t\t\t\t$parse('control.key')\n\t\t\t\t\t.assign(configurationCtrlModel, createUniqueKey($parse('control.type')(configurationCtrlModel), configModel));\n\n\t\t\t\t//set subtype :\t\n\t\t\t\t$parse('control.subtype')\n\t\t\t\t\t.assign(configurationCtrlModel, $parse('formlySubtype')(formlyDetailCtrlModel));\n\n\t\t\t\t//set templateOptions.label :\t\n\t\t\t\t$parse('control.templateOptions.label')\n\t\t\t\t\t.assign(configurationCtrlModel, $parse('formlyLabel')(formlyDetailCtrlModel));\t\t\t\t\t\n\n\t\t\t\t//set templateOptions.required :\t\n\t\t\t\t$parse('control.templateOptions.required')\n\t\t\t\t\t.assign(configurationCtrlModel, $parse('formlyRequired')(formlyDetailCtrlModel));\t\n\n\t\t\t\t//set templateOptions.required :\t\n\t\t\t\t$parse('control.templateOptions.description')\n\t\t\t\t\t.assign(configurationCtrlModel, $parse('formlyDesciption')(formlyDetailCtrlModel));\t\n\n\t\t\t\t//set templateOptions.required :\t\n\t\t\t\t$parse('control.templateOptions.placeholder')\n\t\t\t\t\t.assign(configurationCtrlModel, $parse('formlyPlaceholder')(formlyDetailCtrlModel));\n\n\t\t\t\t//set templateOptions.required :\t\n\t\t\t\t$parse('control.templateOptions.options')\n\t\t\t\t\t.assign(configurationCtrlModel, $parse('formlyOptions')(formlyDetailCtrlModel));\n\n\n \t\t\t\tif ($parse('control.type')(configurationCtrlModel) === 'datepicker') {\n\n\t\t\t\t\t$parse('control.templateOptions.datepickerPopup')\n\t\t\t\t\t\t.assign(configurationCtrlModel, $parse('datepickerPopup')(formlyDetailCtrlModel));\n\n\t\t\t  }    \n\n\t\t\t}\n\n\n\t\t\tvar Service = {};\n\n\t\t\t/**\n\t\t\t * refreshAllConfigurationFromDragAndDropModel \n\t\t\t */\n\t\t\tService.refreshAllConfigurationFromDragAndDropModel = function(configModel, ddModel){\n\t\t\t\t/**\n\t\t\t\t * TODO : prevent reset already set props\n\t\t\t\t * \n\t\t\t\t * previousConfigurationModel = a backup of configuration model 'configModel 'before resetting it\n\t\t\t\t * \n\t\t\t\t * -> dragDrop model contains unique keys of already existing controls : these controls must not be reset / overwritten  \n\t\t\t\t * \n\t\t\t\t */\n\t\t\t\tvar previousConfigurationModel = angular.copy(configModel); \n\t\t\t\t\n\t\t\t\t\n\t\t\t\tconfigModel.lines = [];\n\t\t\t\t/**\n\t\t\t\t * iterates line config model\n\t\t\t\t */\n\t\t\t\tangular.forEach(ddModel[1], function(lineValue, keyValue){\n\t\t\t\t\t/**\n\t\t\t\t\t * add empty line 1st \n\t\t\t\t\t * if line is empty -> it will be enough\n\t\t\t\t\t */\n\t\t\t\t\tconfigModel.lines.push(angular.copy(EasyFormGenFormlyBindingModels.getEasyFormEmptyConfigurationLineModel()));\n\t\t\t\t\t/**\n\t\t\t\t\t * update line value field\n\t\t\t\t\t */\n\t\t\t\t\tapplyThisLine(keyValue + 1, keyValue, configModel);\n\t\t\t\t\t/**\n\t\t\t\t\t * iterate through columns\n\t\t\t\t\t * and add them if control exists\n\t\t\t\t\t */\t\n\t\t\t\t\tangular.forEach(lineValue, function(colValue, colIndex){\n\t\t\t\t    \t/**\n\t\t\t\t    \t * push an empty control model but relative to dradrop : model control type\n\t\t\t\t    \t * (if datepicker so additionnal properties are added)\n\t\t\t\t    \t */ \t\n\t\t\t\t\t\t\tvar controlToBind = \n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t    \t\t\t\tcontrol : angular\n\t\t\t\t    \t\t\t\t\t\t\t\t\t\t.copy(EasyFormGenFormlyBindingModels\n\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t.getFormlyControlTemplateForNcolumnLine(\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlineValue.length, \n\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetFormlyDetailedControlModelFromDragDropObject(lineValue[colIndex]).formlyType\n\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t    \t\t\t};\n\t\t\t\t\t\t\tvar formlyDetailedControlModel = getFormlyDetailedControlModelFromDragDropObject(lineValue[colIndex]);\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * controls alreadys existed so do not reset it\n\t\t\t\t\t\t\t * \n\t\t\t\t\t\t\t * control to bind is the previous one\n\t\t\t\t\t\t\t */\t\t\n\t\t\t\t\t\t\tif(typeof colValue.key !== 'undefined'){\n\t\t\t\t\t\t\t\t//console.warn('debug dragdropModel show this control key : ' + colValue.key);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcontrolToBind.control = angular.copy(colValue.configModelControl);\n\t\t\t\t\t\t\t\t//update cssClass depending new position:\n\t\t\t\t\t\t\t\tvar newClassName = EasyFormGenFormlyBindingModels\n\t\t\t\t\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t.getFormlyControlTemplateForNcolumnLine(\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlineValue.length, \n\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetFormlyDetailedControlModelFromDragDropObject(lineValue[colIndex]).formlyType\n\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrolToBind.control.className = newClassName.className;\n\t\t\t\t\t\t\t//test if header nee this one\n\t\t\t\t\t\t\tcontrolToBind.control.cssClass = newClassName.className;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * get control details for this key in backup : previousConfigurationModel\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t* controls did not exists before : control to bind is a new one\n\t\t\t\t\t\t\t\t* bind dragdrop control properties to configuration model through controlToBind var\n\t\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\t\tbindConfigCtrlModelFromFormlyDetailedCtrlModel(\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformlyDetailedControlModel, //getFormlyDetailedControlModelFromDragDropObject(lineValue[colIndex]), \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrolToBind, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconfigModel\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\t\n\t\t\t\t    \t/**\n\t\t\t\t    \t * apply controlToBind var to configuration model control\n\t\t\t\t    \t */\n\t\t\t\t    \tif (typeof configModel.lines[keyValue].columns[colIndex] === 'undefined') configModel.lines[keyValue].columns.push(angular.copy( EasyFormGenFormlyBindingModels.getEasyFormConfigurationEmptyControlModel())); \n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconfigModel.lines[keyValue].columns[colIndex].control \t= angular.copy(controlToBind.control);\n\t\t\t\t    \tconfigModel.lines[keyValue].columns[colIndex].numColumn = colIndex + 1;\n\t\t\t\t    \tconfigModel.lines[keyValue].columns[colIndex].exist \t\t= true;\n\n\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\treturn configModel;\n\t\t\t};\n\t\t\t\n\t\t\t/**\n\t\t\t * drag drop model\n\t\t\t * -> will be used to bind configuration model\n\t\t\t * \tof no key saved, configuration model controls would be reset each drop events\n\t\t\t * \n\t\t\t * -> matching key : will prevent to reset existing control\n\t\t\t */\n\t\t\tService.refreshControlsKeys = function(configModel, dragDropModel){\t\t\t\t\n\t\t\t\t\n\t\t\t\tangular.forEach(configModel.lines, function(aConfigLine, aConfigLineIndex){\t\t\t\t\t\t\n\t\t\t\t\t\tangular.forEach(aConfigLine.columns, function(aConfigControl, aConfigControlIndex){\n\t\t\t\t\t\t\t//if last control removed from line\n\t\t\t\t\t\t\t//and dragDrop model did not already removed this line\n\t\t\t\t\t\t\tif(typeof dragDropModel[1][aConfigLineIndex] !== 'undefined'){\n\t\t\t\t\t\t\t\tif(dragDropModel[1][aConfigLineIndex].length > 0){\n\t\t\t\t\t\t\t\t\tdragDropModel[1][aConfigLineIndex][aConfigControlIndex].key = aConfigControl.control.key;\n\t\t\t\t\t\t\t\t\t//need to save all in dragdropModel as it is a reference\n\t\t\t\t\t\t\t\t\t//configModel still needed \n\t\t\t\t\t\t\t\t\t// -> to keep coherence (same back model) between all version of easyForm Generator\n\t\t\t\t\t\t\t\t\t// -> is the back model (can be saved to dataBase)\n\t\t\t\t\t\t\t\t\tdragDropModel[1][aConfigLineIndex][aConfigControlIndex].configModelControl = angular.copy(aConfigControl.control);\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t// console.info('refreshControlsKeys');\n\t\t\t\t// console.dir(\t\n\t\t\t\t// \t\t\t\t\t\t\t{\n\t\t\t\t// \t\t\t\t\t\t\t\t\t'when' \t\t\t\t\t\t\t: 'starting',\n\t\t\t\t// \t\t\t\t\t\t\t\t\t'configModel is ' \t: angular.copy(configModel),\n\t\t\t\t// \t\t\t\t\t\t\t\t\t'dragDropModel is ' : angular.copy(dragDropModel)\n\t\t\t\t// \t\t\t\t\t\t\t}\n\t\t\t\t// \t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * drag drop model\n\t\t\t * -> will be used to bind configuration model\n\t\t\t * \tof no key saved, configuration model controls would be reset each drop events\n\t\t\t * \n\t\t\t * -> matching key : will prevent to reset existing control\n\t\t\t */\n\t\t\tService.loadDragDropModelFromConfigurationModel = function(configModel, dragDropModel){\t\t\t\t\n\t\t\t\t//reset dragdrop fields model NOT all dragDropModel!\n\t\t\t\tdragDropModel[1] = [];\n\t\t\t\t\n\t\t\t\tangular.forEach(configModel.lines, function(aConfigLine, aConfigLineIndex){\n\t\t\t\t\t//add new line\n\t\t\t\t\tdragDropModel[1].push([]);\n\t\t\t\t\tangular.forEach(aConfigLine.columns, function(aConfigControl, aConfigControlIndex){\n\t\t\t\t\t\t\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * get control type from configuration.control.selectedControl\n\t\t\t\t\t\t */\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar dragdropControlRef = {\n\t\t\t\t\t\t\tcontrol: 'empty',\n\t\t\t\t\t\t\tcssClass : 'col-xs-12',\n\t\t\t\t\t\t\tlabel: '<div class=\"col-md-12\"> <div class=\"form-group\"> <div class=\"\"> </div> </div></div>'\n\t\t\t\t\t\t};\n\t\t\t\t\t\t\n\t\t\t\t\t\tangular.forEach(dragDropModel[0], function(groupOfCtrlRef, groupOfCtrlRefIndex){\n\t\t\t\t\t\t\tangular.forEach(groupOfCtrlRef, function(aCtrlref, aCtrlRefIndex){\n\t\t\t\t\t\t\t\tif (aCtrlref.control === aConfigControl.control.selectedControl) {\n\t\t\t\t\t\t\t\t\tdragdropControlRef = angular.copy(aCtrlref);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tdragDropModel[1][aConfigLineIndex].push(dragdropControlRef);\n\t\t\t\t\t\t\n\t\t\t\t\t\t//update class depending number of control per line\n\t\t\t\t\t\tvar cssClassToApply = dragDropConfig.getItemCssDependingNumberItemsInRow(dragDropModel[1][aConfigLineIndex].length);\n\t\t\t\t\t\tangular.forEach(dragDropModel[1][aConfigLineIndex], function(ddControlToUpdate){\n\t\t\t\t\t\tddControlToUpdate.cssClass = cssClassToApply;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t});\t\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t});\n\n\t\t\t\t// console.info('bindDragDropModelFromConfigurationModel');\n\t\t\t\t// console.dir(\t\n\t\t\t\t// \t\t\t\t\t\t\t{\n\t\t\t\t// \t\t\t\t\t\t\t\t\t'when' \t\t\t\t\t\t\t: 'starting',\n\t\t\t\t// \t\t\t\t\t\t\t\t\t'configModel is ' \t: angular.copy(configModel),\n\t\t\t\t// \t\t\t\t\t\t\t\t\t'dragDropModel is ' : angular.copy(dragDropModel)\n\t\t\t\t// \t\t\t\t\t\t\t}\n\t\t\t\t// \t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\n\t\t\t};\n\n\t\t\treturn Service;\n\n\n\t}]);\n\n\n/**\n *  ------------------------------------------------------\n *  service : controllerModalProxy\n *  ------------------------------------------------------\n *\n *  service dedicated to - edit control - (controller modal proxy)\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp.services.edaEditCtrlControllerModalProxy', [])\n\t.factory('controllerModalProxy', [\t'EasyFormGenFormlyBindingModels',\n\n\tfunction( EasyFormGenFormlyBindingModels ){\n\t\t\n\n\t\t\t\t\n\t\t/***\n\t\t * Service itself (no more no less)\n\t\t */\n\t\tvar Service = {};\n\n\t\t/**\n\t\t * model shared between \n\t\t * \n\t\t * - main controller (where configuration model comes from)\n\t\t * AND\n\t\t * - modal or sidepanel controller (where controls are configured/customized)\n\t\t */\n\t\tService.ProxyModel = {};//angular.copy(EasyFormGenFormlyBindingModels.getEasyFormListControls());\n\t\tresetProxyModel();\n\t\t/**\n\t\t * deprecated : in drag and drop version\n\t\t * \t\t\t\t\t\t\tuse \"resetProxyModel()\"\" \n\t\t */\n\t  function resetNyaSelect(nyaSelectObj){\n\n\t    var newNyaSelectObj = EasyFormGenFormlyBindingModels.getEasyFormListControls();\n\n\t  \tangular.copy(newNyaSelectObj, nyaSelectObj);\n\t    return true;\n\t  }\n\t\t\n\t\t/**\n\t\t * reset proxyModel\n\t\t */\n\t  function resetProxyModel(){\n\n\t    var newProxyModel = EasyFormGenFormlyBindingModels.getEasyFormListControls();\n\n\t  \tService.proxyModel = angular.copy(newProxyModel);\n\t    return true;\n\t  }\t\t\n\t  \n\t  function returnControlFromAddCtrlModalModel(CtrlModalModel){\n\n\t    var modelToReturn = {\n\t          selectedControl\t\t: 'none',\n\t          formlyType \t\t\t\t: 'none',\n\t          formlySubtype\t\t\t: 'none',\n\t          formlyLabel\t\t\t\t: '',\n\t          formlyRequired \t\t: false,\n\t          formlyDesciption\t: '',\n\t          formlyPlaceholder\t: '',\n\t          formlyOptions\t\t\t: []\n\t    };\n\n\t    for (var i = CtrlModalModel.controls.length - 1; i >= 0; i--) {\n\t      if (CtrlModalModel.selectedControl === CtrlModalModel.controls[i].id) {\n\n\t        modelToReturn.selectedControl \t= CtrlModalModel.selectedControl;\n\t        modelToReturn.formlyType \t\t\t\t= CtrlModalModel.controls[i].formlyType;\n\t        modelToReturn.formlySubtype \t\t= CtrlModalModel.controls[i].formlySubtype;\n\t        modelToReturn.formlyLabel \t\t\t= CtrlModalModel.controls[i].formlyLabel;\n\t        modelToReturn.formlyRequired \t\t= CtrlModalModel.controls[i].formlyRequired;\n\t        modelToReturn.formlyDesciption \t= CtrlModalModel.controls[i].formlyDesciption;\n\t        modelToReturn.formlyPlaceholder = CtrlModalModel.controls[i].formlyPlaceholder;\n\t        modelToReturn.formlyOptions \t\t= CtrlModalModel.controls[i].formlyOptions;\n\t        /**\n\t         * particular properties \n\t         * \n\t         * here ; datetpicker format\n\t         */\n\t        if (CtrlModalModel.controls[i].formlyType === 'datepicker') {\n\t\t\t\t\t\tmodelToReturn.datepickerPopup = CtrlModalModel.controls[i].datepickerPopup;   \n\t        }\n\t      }\n\t    }\n\t    return modelToReturn;\n\t  }\n\t  \n\t  function validKeyUniqueness(thisKey, configurationObj){\n\t    var isUnique = true;\n\t    for (var i = configurationObj.lines.length - 1; i >= 0; i--) {\n\t      for (var j = configurationObj.lines[i].columns.length - 1; j >= 0; j--) {\n\t        if (configurationObj.lines[i].columns[j].control.key === thisKey) {\n\t          isUnique = false;\n\t        }\n\t      } \n\t    }\n\t    return isUnique;  \n\t  }\n\n\t  /**\n\t   * return selected control ID (proxyModel)\n\t   * -> from configuration model selected indexes (line, column) \n\t   * \t\t+ control.formlyType \n\t   *   \t+ control.formlySubtype\n\t   */\n\t  function getSelectedProxyModel(configurationSelectedCtrl){\n\t  \tvar selectedProxyModelControl = 'none';\n\t  \tvar listProxyModelCTRL = angular.copy(EasyFormGenFormlyBindingModels\n\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.getEasyFormListControls().controls);\n\n\t  \tlistProxyModelCTRL.forEach(function(control){\n\t  \t\tif (control.formlyType \t\t=== configurationSelectedCtrl.type &&\n\t  \t\t\t\tcontrol.formlySubtype === configurationSelectedCtrl.subtype) {\n\n\t  \t\t\t\tselectedProxyModelControl = control.id;\n\t  \t\t\t\t\n\t  \t\t\t\treturn selectedProxyModelControl;\n\n\t  \t\t}\n\t  \t});\n\n\n\t  \treturn selectedProxyModelControl;\n\t  }\n\n\t\t/**\n\t\t * deprecated in drag and drop version\n\t\t * \n\t\t * use initProxyModel insead\n\t\t */\n\t\tService.initNyaSelect = function(nyaSelectObj){\n    \treturn resetNyaSelect(nyaSelectObj);\n    };\n\n\t\t/**\n\t\t * return nyaSelectModel from Selected control in configuration model\n\t\t * \n\t\t * note : deprecated in drag and drop version since no modal involved so just set private nyasSelect object.\n\t\t * \t\t\t\t-> in drag and drop version : use 'setProxyModelFromConfigurationSelection' instead \n\t\t * \t\t\t\t\tto set private object that will be readable to side edit panel\n\t\t */\n    Service.getNyASelectFromSelectedLineColumn = function(nyaSelectObj, configurationObj, indexLine, numcolumn){\n\t    resetNyaSelect(nyaSelectObj);  \n\t    /**\n\t     * data send to modal controller\n\t     */\n\t    if (typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions != 'undefined') {\n\n\t      nyaSelectObj.temporyConfig.selectedControl \t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.selectedControl != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.selectedControl : 'none';\n\t      nyaSelectObj.temporyConfig.formlyLabel \t\t\t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.label != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.label : '';\n\t      nyaSelectObj.temporyConfig.formlyRequired\t \t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.required != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.required : '';\n\t      nyaSelectObj.temporyConfig.formlyDesciption \t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.description != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.description : '';\n\t      nyaSelectObj.temporyConfig.formlyPlaceholder \t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.placeholder != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.placeholder : '';\n\t      nyaSelectObj.temporyConfig.formlyOptions \t\t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.options != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.options : '';\n\t      /**\n\t       * particular case : datepicker\n\t       */\n\t      if (nyaSelectObj.temporyConfig.selectedControl === 'Date') {\n\t      \tnyaSelectObj.temporyConfig.datepickerPopup = typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.datepickerPopup != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.datepickerPopup : '';\n\t      }\n\t    }\n\t    return nyaSelectObj;\n\t\t};\n\t\n\t\t\n\t\t/**\n\t\t * deprecated in drag and drop version : \n\t\t * \tuse bindConfigurationModelFromProxyModel to refresh configuration after control update in side panel\n\t\t * \n\t\t * will be used in closePanel\n\t\t */\n\t\tService.bindConfigurationModelFromModalReturn =  function(indexLine, numcolumn, modalAddCtrlModel, configurationObj){\n\t\t\t\t      \n\t\t\t\t      var extractedProps = returnControlFromAddCtrlModalModel(modalAddCtrlModel);\n\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.selectedControl \t= extractedProps.selectedControl;\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.type \t\t\t\t\t\t= extractedProps.formlyType;\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.subtype \t\t\t\t\t= extractedProps.formlySubtype;\n\t\t\t\t      /**\n\t\t\t\t       * templateOptions\n\t\t\t\t       */\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions = {\n\t\t                                                                                            label\t\t\t\t: '',\n\t\t                                                                                            required\t\t: false,\n\t\t                                                                                            description\t: '',\n\t\t                                                                                            placeholder\t: '',\n\t\t                                                                                            options\t\t\t: []\n\t\t\t\t                                                                                      };\n\t\t\t\t       /**\n\t\t\t\t        * then bind template option\n\t\t\t\t        */\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.label \t\t\t\t= extractedProps.formlyLabel;\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.required \t\t= extractedProps.formlyRequired;\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.description \t= extractedProps.formlyDesciption;\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.placeholder \t= extractedProps.formlyPlaceholder;\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.options \t\t\t= extractedProps.formlyOptions;\n\n\t\t\t\t      /**\n\t\t\t\t       * add additionnal — particular — properties :\n\t\t\t\t       * \n\t\t\t\t       * -> datepicker : datepickerPopup\n\t\t\t\t       */\n\t\t\t\t      if (configurationObj.lines[indexLine].columns[numcolumn].control.type === 'datepicker') {\n\t\t\t\t       \tconfigurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.datepickerPopup = extractedProps.datepickerPopup;\n\t\t\t\t      }\t\n\n\t\t\t\t      /**\n\t\t\t\t       * unique key (set only first time) in this model is formly control type + Date.now(); \n\t\t\t\t       */\n\t\t\t\t      var newKey = configurationObj.lines[indexLine].columns[numcolumn].control.type + '-' + Date.now();\n\n\t\t\t        if (validKeyUniqueness(newKey, configurationObj) === true){\n\t\t\t          configurationObj.lines[indexLine].columns[numcolumn].control.key = newKey;\n\t\t\t        }else{\n\t\t\t          newKey = configurationObj.lines[indexLine].columns[numcolumn].control.type + '-' + Date.now();\n\t\t\t          if (validKeyUniqueness(newKey, configurationObj) === true){\n\t\t\t            configurationObj.lines[indexLine].columns[numcolumn].control.key = newKey;\n\t\t\t          }else{\n\t\t\t            newKey = configurationObj.lines[indexLine].columns[numcolumn].control.type + '-' + Date.now();\n\t\t\t          }\n\t\t\t        }                                                                     \n\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.edited = true;\n\n\t\t};\n\n\t\tService.applyConfigToSelectedControl = function(nyaSelectObj){\n\t\t\t\t  \t\n\t\t\t\t    for (var i = nyaSelectObj.controls.length - 1; i >= 0; i--) {\n\t\t\t\t      if (nyaSelectObj.controls[i].id === nyaSelectObj.selectedControl) {\n\n\t\t\t\t          nyaSelectObj.controls[i].formlyLabel \t\t\t\t= nyaSelectObj.temporyConfig.formlyLabel;\n\t\t\t\t          nyaSelectObj.controls[i].formlyRequired \t\t= nyaSelectObj.temporyConfig.formlyRequired;\n\t\t\t\t          nyaSelectObj.controls[i].formlyDesciption \t= nyaSelectObj.temporyConfig.formlyDesciption;\n\t\t\t\t          nyaSelectObj.controls[i].formlyPlaceholder \t= nyaSelectObj.temporyConfig.formlyPlaceholder;\n\t\t\t\t          nyaSelectObj.controls[i].formlyOptions \t\t\t= nyaSelectObj.temporyConfig.formlyOptions;\n\n\t\t\t\t          if (nyaSelectObj.controls[i].id ==='Date' ) {\n\t\t\t\t          \tnyaSelectObj.controls[i].datepickerPopup \t= nyaSelectObj.temporyConfig.datepickerPopup;  \t\n\t\t\t\t          }\n\t\t\t\t        \n\t\t\t\t       }\n\t\t\t\t    }\n\t\t};\n\n\t\t/**\n\t\t * ============================================================\n\t\t * following methods for \"proxyModell\"\n\t\t * \n\t\t * Note this model : \n\t\t * - to share control model between \n\t\t * \t+ main controller (configuration model one)\n\t\t * \t+ edit panel controller (where apply customization to a selected control)\n\t\t * ============================================================\n\t\t */\n\t\t\n\t\t \n\t\t/**\n\t\t * reset proxy model\n\t\t */\n\t\tService.initProxyModel = function(thisProxyModelToInit){\n    \treturn resetProxyModel(thisProxyModelToInit);\n    };\t\t \n\t\t \n\t\t/**\n\t\t * to refresh configuration model from edit panel\n\t\t */\n\t\tService.bindConfigurationModelFromProxyModel =  function(indexLine, numcolumn, configurationObj){\n\t\t\t\t      \n\t\t\t\t      var extractedProps = angular.copy(Service.proxyModel.temporyConfig);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * debug : todel this lines\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tconsole.warn('debug edaEditCtrlControllerModalProxy'); \n\t\t\t\t\t\t\tconsole.dir(extractedProps);\n\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.selectedControl \t= extractedProps.selectedControl;\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.type \t\t\t\t\t\t= extractedProps.formlyType;\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.subtype \t\t\t\t\t= extractedProps.formlySubtype;\n\t\t\t\t      /**\n\t\t\t\t       * templateOptions\n\t\t\t\t       */\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions = {\n\t\t                                                                                            label\t\t\t\t: '',\n\t\t                                                                                            required\t\t: false,\n\t\t                                                                                            description\t: '',\n\t\t                                                                                            placeholder\t: '',\n\t\t                                                                                            options\t\t\t: []\n\t\t\t\t                                                                                      };\n\t\t\t\t       /**\n\t\t\t\t        * then bind template option\n\t\t\t\t        */\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.label \t\t\t\t= extractedProps.formlyLabel;\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.required \t\t= extractedProps.formlyRequired;\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.description \t= extractedProps.formlyDesciption;\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.placeholder \t= extractedProps.formlyPlaceholder;\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.options \t\t\t= extractedProps.formlyOptions;\n\n\t\t\t\t      /**\n\t\t\t\t       * add additionnal — particular — properties :\n\t\t\t\t       * \n\t\t\t\t       * -> datepicker : datepickerPopup\n\t\t\t\t       */\n\t\t\t\t      if (configurationObj.lines[indexLine].columns[numcolumn].control.type === 'datepicker') {\n\t\t\t\t       \tconfigurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.datepickerPopup = extractedProps.datepickerPopup;\n\t\t\t\t      }\t\n\n\t\t\t\t      /**\n\t\t\t\t       * unique key (set only first time) in this model is formly control type + Date.now(); \n\t\t\t\t       */\n\t\t\t\t      var newKey = configurationObj.lines[indexLine].columns[numcolumn].control.type + '-' + Date.now();\n\n\t\t\t        if (validKeyUniqueness(newKey, configurationObj) === true){\n\t\t\t          configurationObj.lines[indexLine].columns[numcolumn].control.key = newKey;\n\t\t\t        }else{\n\t\t\t          newKey = configurationObj.lines[indexLine].columns[numcolumn].control.type + '-' + Date.now();\n\t\t\t          if (validKeyUniqueness(newKey, configurationObj) === true){\n\t\t\t            configurationObj.lines[indexLine].columns[numcolumn].control.key = newKey;\n\t\t\t          }else{\n\t\t\t            newKey = configurationObj.lines[indexLine].columns[numcolumn].control.type + '-' + Date.now();\n\t\t\t          }\n\t\t\t        }                                                                     \n\n\t\t\t\t      configurationObj.lines[indexLine].columns[numcolumn].control.edited = true;\n\n\t\t};\t\t \n\t\t \n\t\t \n\t\t/**\n\t\t * set local proxyModel from Selected control in configuration model\n\t\t * \n\t\t * replace deprecated \"getNyASelectFromSelectedLineColumn\"\n\t\t * -model is now named \"proxyModel\"\n\t\t * -model is stored in this service \n\t\t * \n\t\t * -> it has just more sence!\n\t\t */\n\t\t\n    Service.setProxyModelFromConfigurationSelection = function(configurationObj, indexLine, numcolumn){\n\t    /**\n\t     * data send to modal controller\n\t     */\n\t    if (typeof configurationObj.lines[indexLine].columns[numcolumn].control != 'undefined') {\n\n\t    \t/**\n\t    \t * determine selected control from indexes \n\t    \t * and control.type and control.subtype in configuration model\n\t    \t */\n\n\t    \tService.proxyModel.selectedControl \t\t\t\t\t\t\t\t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.type != 'undefined' ? getSelectedProxyModel(configurationObj.lines[indexLine].columns[numcolumn].control) : 'none';\n\t      Service.proxyModel.temporyConfig.selectedControl \t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.type != 'undefined' ? getSelectedProxyModel(configurationObj.lines[indexLine].columns[numcolumn].control) : 'none';\n\t\t\t\t\n\t\t\t\tService.proxyModel.temporyConfig.formlyType \t\t\t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.type != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.type: 'none';\n\t\t\t\tService.proxyModel.temporyConfig.formlySubtype \t\t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.subtype != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.subtype : 'none';\n\t\t\t\t\n\t      Service.proxyModel.temporyConfig.formlyLabel \t\t\t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.label != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.label : '';\n\t      Service.proxyModel.temporyConfig.formlyRequired\t \t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.required != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.required : '';\n\t      Service.proxyModel.temporyConfig.formlyDesciption \t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.description != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.description : '';\n\t      Service.proxyModel.temporyConfig.formlyPlaceholder \t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.placeholder != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.placeholder : '';\n\t      Service.proxyModel.temporyConfig.formlyOptions \t\t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.options != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.options : '';\n\t      /**\n\t       * particular case : datepicker\n\t       */\n\t      if (Service.proxyModel.temporyConfig.selectedControl === 'Date') {\n\t      \tService.proxyModel.temporyConfig.datepickerPopup = typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.datepickerPopup != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.datepickerPopup : '';\n\t      }\n\t    }\n\n\t    \n\t    // console.info('setProxyModelFromConfigurationSelection');\n\t    // console.dir(\t\n\t    // \t\t\t\t\t\t\t{\n\t    // \t\t\t\t\t\t\t\t'fromService' : 'setProxyModelFromConfigurationSelection method',\n\t    // \t\t\t\t\t\t\t\t'after' : 'applied config',\n\t    // \t\t\t\t\t\t\t\t'Service.proxyModel' \t: angular.copy(Service.proxyModel)\n\t    // \t\t\t\t\t\t\t}\n\t    // \t\t\t\t\t\t);\n\n\n\t    return Service.proxyModel;\n\t\t};\t\t\t \n\n\t\tService.getProxyModel = function(){\n\t\t\treturn Service.proxyModel;\n\t\t};\n\n\n\t\t/**\n\t\t * ============================================================\n\t\t * following methods for \"editPanelModel\"\n\t\t * \n\t\t * Note this model : \n\t\t * - to manage side edit control panel\n\t\t * ============================================================\n\t\t */\n\t\t \n\t\tvar editPanelModel = {\n                            toggle : false,\n                            lineIndex : -1,\n                            columnIndex : -1,\n                            control : {}\n                          };\n\t\t\t\t \n\t\t/**\n\t\t * getter : editPanelModel (whole model => type = object)\n\t\t */\t\t\t \n\t\tService.getEditPanelModelAllModel = function(){\n\t\t\treturn editPanelModel;\n\t\t};\n\t\t/**\n\t\t * setter : editPanelModel (whole model => type = object)\n\t\t */\t\t\n\t\tService.setEditPanelModelControl = function(newEditPanelModel){\n\t\t\tvar successfullDone  = false;\n\t\t\t\n\t\t\tif (typeof newEditPanelModel !== 'undefined') {\n\t\t\t\teditPanelModel = angular.copy(newEditPanelModel);\n\t\t\t\tsuccessfullDone = true;\t\n\t\t\t}\n\t\t\t\n\t\t\treturn successfullDone;\n\t\t};\t\t\n\t\t\n\t\t\n\t\t/**\n\t\t * getter : editPanelModel.columnIndex\n\t\t */\t\t\n\t\tService.getEditPanelModelColumnIndex = function(){\n\t\t\treturn editPanelModel.columnIndex;\n\t\t};\n\t\t/**\n\t\t * setter : editPanelModel.columnIndex\n\t\t */\t\t\t\t\n\t\tService.setEditPanelModelColumnIndex = function(newColumnIndex){\n\t\t\tvar successfullDone  = false;\n\t\t\t\n\t\t\tif (typeof newColumnIndex !== 'undefined') {\n\t\t\t\teditPanelModel.columnIndex = newColumnIndex;\n\t\t\t\tsuccessfullDone = true;\t\n\t\t\t}\n\t\t\t\n\t\t\treturn successfullDone;\n\t\t};\t\t\n\t\t\n\t\t\n\t\t/**\n\t\t * getter : editPanelModel.lineIndex\n\t\t */\t\t\t\n\t\tService.getEditPanelModelLineIndex = function(){\n\t\t\treturn editPanelModel.lineIndex;\n\t\t};\n\t\t/**\n\t\t * setter : editPanelModel.lineIndex\n\t\t */\t\t\n\t\tService.setEditPanelModelLineIndex = function(newLineIndex){\n\t\t\tvar successfullDone  = false;\n\t\t\t\n\t\t\tif (typeof newLineIndex !== 'undefined') {\n\t\t\t\teditPanelModel.lineIndex = newLineIndex;\n\t\t\t\tsuccessfullDone = true;\t\n\t\t\t}\n\t\t\t\n\t\t\treturn successfullDone;\n\t\t};\n\n\t\t/**\n\t\t * getter : editPanelModel.control\n\t\t */\t\t\n\t\tService.getEditPanelModelControl = function(){\n\t\t\treturn editPanelModel.control;\n\t\t};\t\t\n\t\t/**\n\t\t * setter : editPanelModel.control\n\t\t */\n\t\tService.setEditPanelModelControl = function(newControl){\n\t\t\tvar successfullDone  = false;\n\t\t\t\n\t\t\tif (typeof newControl !== 'undefined') {\n\t\t\t\t//editPanelModel.control = angular.copy({});\n\t\t\t\teditPanelModel.control = angular.copy(newControl);\n\t\t\t\tsuccessfullDone = true;\t\n\t\t\t}\n\t\t\t\n\t\t\treturn successfullDone;\n\t\t};\n\n\t\t/**\n\t\t * getter : editPanelModel.toggle\n\t\t */\n\t\tService.getEditPanelModelToggle = function(){\n\t\t\treturn editPanelModel.toggle;\n\t\t};\n\t\t/**\n\t\t * setter : editPanelModel.toggle\n\t\t */\n\t\tService.setEditPanelModelToggle = function(newToggleValue){\n\t\t\tvar successfullDone  = false;\n\t\t\t\n\t\t\tif (typeof newToggleValue !== 'undefined') {\n\t\t\t\teditPanelModel.toggle = newToggleValue;\n\t\t\t\tsuccessfullDone = true;\t\n\t\t\t}\n\t\t\t\n\t\t\treturn successfullDone;\n\t\t};\n\n\t\t\n\t\t/**\n\t\t * special controls bindings from edit panel\n\t\t * -> controls like basic select, radio and groupe select\n\t\t */\n\t\t\n\t\t/**\n\t\t * special controls temporay models\n\t\t *\n\t\t * -> helps in side panel to add aditionnal properties \n\t\t * like options for selects...\n\t\t */\n\t\tvar initOptionModel \t\t\t\t\t\t\t\t= { rows:[] };\n\n\t\tService.basicSelectRowCollection \t\t= angular.copy(initOptionModel);\n\t\tService.newOptionBasicSelect \t\t\t\t= angular.copy({ saisie: '' });\n\n\t\tService.groupedSelectRowCollection \t= angular.copy(initOptionModel);\n\t\tService.newOptionGroupedSelect \t\t\t= angular.copy({ saisie: '' });\n\t\tService.GroupedSelectGroups \t\t\t\t= angular.copy({ list:[] });\n\t\tService.newGroupGroupedSelect \t\t\t= angular.copy({ saisie: '' });\n\t\tService.groupSelectGroupClick \t\t\t= angular.copy({ showList : false });\n\n\t\tService.radioRowCollection \t\t\t\t\t= angular.copy(initOptionModel);\n\t\tService.newOptionRadio \t\t\t\t\t\t\t= angular.copy({ saisie: '' });\n\n\t\tService.resetAllTemporyModels = function(){\n\t\t\t//basic select : shallow copy way (= basicSelectRowCollection shared with groupedSelectRowCollection and radioRowCollection)\n\t\t\t//Service.basicSelectRowCollection \t\t= initOptionModel;\n\t\t\t//Service.newOptionBasicSelect \t\t\t\t= { saisie: '' };\n\n\t\t\t//basic select :  deep copy way :\n\t\t\tService.basicSelectRowCollection \t\t= angular.copy(initOptionModel);\n\t\t\tService.newOptionBasicSelect \t\t\t\t= angular.copy({ saisie: '' });\n\n\t\t\t//grouped select : shallow copy way :\n\t\t\t// Service.groupedSelectRowCollection \t= initOptionModel;\n\t\t\t// Service.newOptionGroupedSelect \t\t\t= { saisie: '' };\n\t\t\t// Service.GroupedSelectGroups \t\t\t\t= { list:[] };\n\t\t\t// Service.newGroupGroupedSelect \t\t\t= { saisie: '' };\n\t\t\t// Service.groupSelectGroupClick \t\t\t= { showList : false };\n\n\t\t\t//grouped select :  deep copy way :\n\t\t\tService.groupedSelectRowCollection \t= angular.copy(initOptionModel);\n\t\t\tService.newOptionGroupedSelect \t\t\t= angular.copy({ saisie: '' });\n\t\t\tService.GroupedSelectGroups \t\t\t\t= angular.copy({ list:[] });\n\t\t\tService.newGroupGroupedSelect \t\t\t= angular.copy({ saisie: '' });\n\t\t\tService.groupSelectGroupClick \t\t\t= angular.copy({ showList : false });\n\n\t\t\t//radio : shallow copy way :\n\t\t\t// Service.radioRowCollection \t\t\t\t\t= initOptionModel;\n\t\t\t// Service.newOptionRadio \t\t\t\t\t\t\t= { saisie: '' };\n\n\t\t\t//radio : deep copy way :\n\t\t\tService.radioRowCollection \t\t\t\t\t= angular.copy(initOptionModel);\n\t\t\tService.newOptionRadio \t\t\t\t\t\t\t= angular.copy({ saisie: '' });\n\n\t\t\treturn true;\n\t\t};\t\t\n\n\t/**\n\t * bindSpecialCtrlTemporyModelsToProxyModel: needed when validating after editing a control\n\t * tempory models applied to proxyModel if control is one of these\n\t *\n\t * example : if selected control is a basic select options \n\t * -> so its tempory models are bound to proxyModel\n\t */\n\tService.bindSpecialCtrlTemporyModelsToProxyModel = function(){\n\t\tif (Service.proxyModel.selectedControl === 'BasicSelect') {\n\t\t  Service.bindBasicSelectToProxyModel(Service.basicSelectRowCollection);\n\t\t}\n\n\t\tif (Service.proxyModel.selectedControl === 'GroupedSelect') {\n\t\t  Service.bindGroupedSelectToProxyModel(Service.groupedSelectRowCollection);\n\t\t}  \n\n\t\tif (Service.proxyModel.selectedControl === 'Radio') {\n\t\t  Service.bindRadioToProxyModel(Service.radioRowCollection);\n\t\t}  \n\t};\n\n\t\t/**\n\t\t * basic select\n\t\t */\n\t\t\n\n\n\t\tService.bindBasicSelectFromProxyModel = function(basicSelectRowCollection){\t\t\n\t\t    if (Service.proxyModel.temporyConfig.formlyOptions.length > 0) {\n\t\t      for (var i = 0; i <= Service.proxyModel.temporyConfig.formlyOptions.length-1; i++){\n\t\t\n\t\t            var newOption = {\n\t\t            \t\t\t\t\t\t\t\t\t'option' \t: Service.proxyModel\n\t\t            \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.temporyConfig.formlyOptions[i].name,\n\t\t                      \t\t\t\t'order' \t: i,\n\n\t\t                      \t\t\t\t'group' \t: ''\n\t\t                    \t\t\t\t};\n\n\t\t            basicSelectRowCollection.rows.push(newOption);\n\t\t      }    \n\t\t    }\n\t\t  };\n\n\t\t Service.bindBasicSelectToProxyModel = function(basicSelectRowCollection){\n\t\t    var resetNyASelectOptions = [];\n\t\t    Service.proxyModel.temporyConfig.formlyOptions = resetNyASelectOptions;\n\t\t    if (basicSelectRowCollection.rows.length > 0) {\n\t\t      for (var i = 0; i <= basicSelectRowCollection.rows.length - 1; i++){\n\t\t            var newOption = {\n\t\t            \t\t\t\t\t\t\t\t\t'name' : basicSelectRowCollection.rows[i].option,\n\n\t\t                      \t\t\t\t'value': i,\n\n\t\t                      \t\t\t\t'group': ''\n\t\t                    \t\t\t\t};\n\n\t\t            Service.proxyModel.temporyConfig.formlyOptions.push(newOption);\n\t\t        }      \n\t\t   }\n\t\t  };\n\n\n\t\t  /**\n\t\t   * grouped select\n\t\t   */\n\t\t Service.bindGroupedSelectFromProxyModel = function(groupedSelectRowCollection, GroupedSelectGroups){\n\t\t    if (Service.proxyModel.temporyConfig.formlyOptions.length > 0) {\n\t\t      for (var i = 0; i <= Service.proxyModel.temporyConfig.formlyOptions.length-1; i++){\t\t\n\t\t            var newOption = {\n\t\t            \t\t\t\t\t\t\t\t\t'option' \t: Service.proxyModel.temporyConfig.formlyOptions[i].name,\n\t\t                      \t\t\t\t'order'\t\t: i,\n\t\t                      \t\t\t\t'group'\t\t: Service.proxyModel.temporyConfig.formlyOptions[i].group\n\t\t                    \t\t\t\t};\n\t\t            groupedSelectRowCollection.rows.push(newOption);            \n\t\t        }\n\t\t        //grouplist : thx to lodash it is easy\n\t\t       var filteredgroup = _.uniq(_.pluck(groupedSelectRowCollection.rows, 'group'));\n\t\t       angular.copy(filteredgroup, GroupedSelectGroups.list); \t\t\n\t\t    }\n\t\t };\n\n\n\n\t\tService.bindGroupedSelectToProxyModel = function(groupedSelectRowCollection){\n\t\t    Service.proxyModel.temporyConfig.formlyOptions = [];\n\t\t    for (var i = 0; i <= groupedSelectRowCollection.rows.length - 1; i++){\n\t\t          var newOption = {\n\t\t          \t\t\t\t\t\t\t\t\t'name' \t: groupedSelectRowCollection.rows[i].option,\n\t\t                    \t\t\t\t'value'\t: i,\n\t\t                    \t\t\t\t'group'\t: groupedSelectRowCollection.rows[i].group\n\t\t                  \t\t\t\t};\n\t\t          Service.proxyModel.temporyConfig.formlyOptions.push(newOption);   \n\t\t      }\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * radio\n\t\t */\n\t\tService.bindRadioFromProxyModel = function(radioRowCollection){\n\t\t    if (Service.proxyModel.temporyConfig.formlyOptions.length > 0) {\n\t\t      for (var i = 0; i <= Service.proxyModel.temporyConfig.formlyOptions.length-1; i++){\n\t\t\n\t\t            var newOption = { \n\t\t                              'option'\t: Service.proxyModel.temporyConfig.formlyOptions[i].name,\n\t\t                              'order'\t\t: i,\n\t\t                              'group'\t\t: ''\n\t\t                            };\n\t\t            radioRowCollection.rows.push(newOption);\n\t\t      }    \n\t\t    }\n\t\t};\n\n\t\t// Service.bindProxyModelOptionFromRadio = function(radioRowCollection){\n\t\t//     if (radioRowCollection.rows.length > 0) {\n\t\t// \t\t\tService.proxyModel.temporyConfig.formlyOptions = [];\n\t\t//       for (var i = 0; i <= radioRowCollection.rows.length-1; i++){\n\t\t// \n\t\t//             var newOption = { \n\t\t//                               'name'\t\t: radioRowCollection.rows[i].option,\n\t\t//                               'value'\t\t: i,\n\t\t//                               'group'\t\t: ''\n\t\t//                             };\n\t\t//             Service.proxyModel.temporyConfig.formlyOptions.push(newOption);\n\t\t//       }    \n\t\t//     }\n\t\t// };\n\n\n\t\tService.bindRadioToProxyModel = function(radioRowCollection){\n\t\t    var resetproxyModelOptions = [];\n\t\t    Service.proxyModel.temporyConfig.formlyOptions = resetproxyModelOptions;\n\t\t\n\t\t    if (radioRowCollection.rows.length > 0) {\n\t\t\n\t\t      for (var i = 0; i <= radioRowCollection.rows.length - 1; i++){\n\t\t            var newOption = {\n\t\t                              'name'\t\t: radioRowCollection.rows[i].option,\n\t\t                              'value'\t\t: i,\n\t\t                              'group'\t\t: ''\n\t\t                    };\n\t\t            Service.proxyModel.temporyConfig.formlyOptions.push(newOption);   \n\t\t        }       \n\t\t   }\n\t\t};\n\n \t\t  \n\n\n\n    return Service;\n\n  }]);\n\n\n/**\n *  ------------------------------------------------------\n *  service : formFieldManage\n *  ------------------------------------------------------\n *\n *         MOST IMPORTANT service to manage formly field model \n *  (the presentation model and the back model or configuration model)\n * \n *\n *  - \"formlyModel\" is the model exposed to view or html \"fields model\" (= an array of objects)\n *    This model is the one you can see in all well documented examples here : http://angular-formly.com\n *    -> in your view or html : <formly-form model=\"dataModel\" fields=\"formlyModel\">\n *\n *  - \"configurationModel\" is the model on which editing a form will work\n *    before applying results to \"formlyModel\"\n *\n *\n * NOTE : if you save a form to database, you will save \"configurationModel\" rather than \"formlyModel\".\n *        Why? : \n *          since as you plan to create a form generator you can't create a finite model\n *          since you may want to be able to save the generated form even if it is not a finite model\n *          since \"formlyModel\" objects will be populated with a lot of properties you don't need to store contrary to \"configurationModel\" which contains only what you need\n *          since \"formlyModel\" can't be JSON.stringify when you want to use advanced layout (1 column/2/3 columns template?)\n *          since it is better approach to use a backgroundModel (async operation ...) that is bind to presentation model only when it is fully ready or filled.\n *\n *\n * NOTE : \n * - if you want to manage more columns templates (right now only manage up to 3 columns), just inspire from existing code\n * - if you want to extend easy form generator, be sure to be a minimum comfortable with \"angular formly\": http://angular-formly.com\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n  .module('edaApp.services.formFieldManage', [])\n  .factory('formFieldManage', [ 'EasyFormGenFormlyBindingModels', \n\n  function( EasyFormGenFormlyBindingModels ){\n\n    var Service = {};\n\n    /**\n     * At initial state : configuration model will contain 1 line, since :\n     *    -> it is non sense to create a form without a single line (no line = no form at all)\n     *    -> so it is non sense to force user to add a first line\n     * \n     *  PLEASE NOTE columns array contains objects that look like formly fields one\n     */\n    Service.initConfigurationEditFromScratch =  function(configurationModel, addStepWayProperties){\n      var configurationModelInit = EasyFormGenFormlyBindingModels.getEasyFormInitialStateConfigurationModel(addStepWayProperties); \n      angular.copy(configurationModelInit, configurationModel);\n    };\n\n    /**\n     * Get an configuration empty (no init line) then empty it with lines array provided in param\n     * @param   object - configurationModel   [configuration model]\n     * @param   array -  lines                [an array : lines to apply to an empty configuration model]\n     * @param   bool -   addStepWayProperties [description]\n     * @return {object message}               [give details on how it happened to caller]\n     */\n    Service.bindConfigurationLines = function(configurationModel, lines, addStepWayProperties){\n              \n      if( Object.prototype.toString.call(lines) === '[object Array]' ) {\n        var configurationModelResult = EasyFormGenFormlyBindingModels.getEasyFormReloadConfigurationModel(addStepWayProperties);\n\n        configurationModelResult.lines = [].concat(lines);  \n        angular.copy(configurationModelResult, configurationModel);                                         \n\n        return getMessageObject('configuration model is bound','lines are bound to configuration model.');\n      }else{\n        return getErrorObject('lines is not an array', 'Checks lines type, it is not an array.');\n      }\n    };\n    /**\n     * applyConfigurationToformlyModel : \n     *  - bind configuration model into formly field model\n     *  - reset dataModel (formlyfield may have changed so previous dataModel would be false)\n     * @param  configurationModel \n     * @param  formlyModel        \n     * @param  formlyDataModel    \n     */\n    Service.applyConfigurationToformlyModel = function(configurationModel, formlyModel, formlyDataModel){\n      resetFormlyModel(formlyModel);\n      resetDataModel(formlyDataModel);\n\n      //manage header here line0\n      var lineNumber = configurationModel.lines.length;\n\n\n      \n\n      for (var i = 0; i < lineNumber; i++) {\n\n\n        /**\n         * TO TEST\n         */\n        \n        //var FieldGroup = [];\n        AddNColumnControl(formlyModel, configurationModel, i);\n\n\n        // FieldGroup.push(controlTemplate);\n\n\n        \n        // formlyModel.push(\n        //                    {\n        //                       className   : 'row', \n        //                       fieldGroup  : FieldGroup\n        //                     }\n        //                 ); \n      }\n    };\n        \n    return Service;\n\n\n\n    function resetFormlyModel(formlyModel){\n      var resetformly = [];\n      angular.copy(resetformly, formlyModel);\n    }\n\n    /**\n     * New auuto adpat  add N column controls\n     */\n    function AddNColumnControl(formlyModel, configurationModel, lineIndex){\n\n      var numberOfColumns = configurationModel.lines[lineIndex].columns.length;\n\n      \n      /**\n       * push formly model \n       * \n       * here : only className and empty fieldGroup (controls != header)\n       *\n       * if header will be reset to set a template (at least we have now indexFormlyModel)\n       */\n      \n      //get index formlyModel for this line :\n      var indexFormlyModel =  formlyModel.push(\n                                               {\n                                                  className   : 'row', \n                                                  fieldGroup  : []\n                                                }\n                                              ) - 1 ;        \n\n      /**\n       * iterates through controls in the line\n       */\n      \n      configurationModel.lines[lineIndex].columns.forEach(function(column, columnIndex){\n        var controlTemplate = {};\n\n        // if (( typeof controlTemplate  !== 'undefined' &&\n        //       column.control.type     === 'header'    || \n        //       column.control.type     === 'subTitle') &&\n        //       column.control.type     !== 'none') {\n        //     /**\n        //      * header is not a control just a template\n        //      *\n        //      * getHeaderTemplateForNcolumnLine()\n        //      * NOTE : header text is stored from description\n        //      */\n        //     \n        //     var headerTextContent = column.control.templateOptions.description;\n        //     controlTemplate = EasyFormGenFormlyBindingModels.getHeaderTemplateForNcolumnLine(numberOfColumns, headerTextContent);\n        //     \n        //               \n        //     console.warn('EasyFormGenFormlyBindingModels : controlTEemplate');\n        //     console.dir(controlTemplate);\n        //   \n        //     /**\n        //      * popuplate properties\n        //      */\n        //      \n        //     formlyModel[indexFormlyModel] = {};\n        //     formlyModel[indexFormlyModel].template = controlTemplate.template;\n        // }\n        \n        if (typeof controlTemplate  !== 'undefined' &&\n            // column.control.type     !== 'header'    && \n            // column.control.type     !== 'subTitle'  &&\n            column.control.type     !== 'none') {\n\n          /**\n           * controls : getFormlyControlTemplateForNcolumnLine()\n           *\n           * @PARAM numberOfColumns       : integer to deduce cssClss to apply\n           * @PARAM column.control.type   : to add if needed specific properties (example : datepicker)\n           */\n           \n          if(column.control.type  === 'header' || \n             column.control.type  === 'subTitle'){\n               \n            var headerTextContent = column.control.templateOptions.description;\n            \n            controlTemplate.template = EasyFormGenFormlyBindingModels\n                                        .getHeaderTemplateForNcolumnLine(numberOfColumns, headerTextContent)\n                                            .template;\n            \n            controlTemplate.className = EasyFormGenFormlyBindingModels\n                                          .getRawHeaderTemplates()\n                                            .selectedClass; \n            \n                             \n          } else {\n            \n            controlTemplate = EasyFormGenFormlyBindingModels.getFormlyControlTemplateForNcolumnLine(numberOfColumns, column.control.type);\n\n            /**\n            *\n            * \n            * NEED REFACTOR HERE \n            * should bind properties dynamically \n            * \n            * TODO need to validate all controls (datepicker may not work)\n            * need to refactor\n            *\n            * \n            */\n            controlTemplate.className                   = column.control.className;\n            controlTemplate.type                        = column.control.type;\n            controlTemplate.key                         = column.control.key;\n            controlTemplate.templateOptions.type        = column.control.templateOptions.type;\n            controlTemplate.templateOptions.label       = column.control.templateOptions.label;\n            controlTemplate.templateOptions.required    = column.control.templateOptions.required;\n            controlTemplate.templateOptions.placeholder = column.control.templateOptions.placeholder;\n            controlTemplate.templateOptions.description = column.control.templateOptions.description;\n            controlTemplate.templateOptions.options     = [].concat(column.control.templateOptions.options); \n  \n            if (typeof controlTemplate.templateOptions.datepickerPopup !== 'undefined')  column.control.templateOptions.datepickerPopup = controlTemplate.templateOptions.datepickerPopup  ;\n\n              \n          }\n          \n\n          /**\n           * popuplate properties\n           */\n          \n\n\n\n\n          /**\n           * push control into formly model in its group\n           */\n          \n      \n           /**\n            * need to catch this random error\n            */\n          //try{\n            formlyModel[indexFormlyModel].fieldGroup.push(controlTemplate);         \n          //}catch(e){\n          //  console.warn('error...');\n          //}\n          \n\n          }\n        }\n\n      );\n    }    \n\n\n    function isTemplateOptionDefined(obj){\n      return typeof obj.templateOptions !== 'undefined' ? true : false;\n    }\n\n    function extractTemplateOptionLabel(obj){\n\n     //console.info('extractTemplateOptionLabel');\n     //console.dir(obj);\n     return  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.label !== 'undefined'? obj.templateOptions.label: '') : '';\n    }\n\n\n    function extractTemplateOptionDatepickerPopup(obj){\n      return  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.datepickerPopup !== 'undefined'? obj.templateOptions.datepickerPopup: '') : '';\n    }\n\n    function extractTemplateOptionRequired(obj){\n      return  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.required !== 'undefined'? obj.templateOptions.required: '') : '';\n    }\n    //radio and select\n    function extractTemplateOptionOptions(obj){\n      return  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.options !== 'undefined'? obj.templateOptions.options: '') : '';\n    }\n\n\n\n    function extractTemplateOptionType(obj){\n      return  typeof obj.subtype !== 'undefined'? obj.subtype: '';\n    }\n\n    function extractTemplateOptionPlaceholder(obj){\n      return  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.placeholder !== 'undefined'? obj.templateOptions.placeholder: '') : '';\n    }\n\n    function extractTemplateOptionDescription(obj){\n      return  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.description !== 'undefined'? obj.templateOptions.description: '') : '';\n    }\n\n\n    /////////////////////////////////////////\n    // formly model functions\n    /////////////////////////////////////////\n\n    function resetDataModel(obj){\n      var emptyDataModel = {};\n      angular.copy(emptyDataModel, obj);\n      return true;\n    }\n\n    /////////////////////////////////////////\n    // custom errors\n    /////////////////////////////////////////\n\n\n    function getErrorObject(errorTitle, errorMessage){\n\n      var messageObj =  {\n                          noError   : false,\n                          title     : '',\n                          Message   : ''  \n                        };\n\n      messageObj.noError  = false;\n      messageObj.title    = errorTitle;\n      messageObj.Message  = errorMessage;\n      return messageObj;\n    }\n\n    function getMessageObject(messageTitle, messageBody){\n      var messageObj =  {\n                          noError   : false,\n                          title     : '',\n                          Message   : ''  \n                        };\n\n      messageObj.noError    = true;\n      messageObj.title      = messageTitle;\n      messageObj.Message    = messageBody;\n      return messageObj;\n    }\n  \n}]);\n\n\n\n\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//  form API : suppose you have your RESTful backend \n//\n//  module = \"service\"  \n//  ------------------------------------------------------\n//      Syntax (convention) :\n//          \"edaApp\" = application\n//          \"edaApp.services.serviceNAME\" = container services module\n//\n//  This module is a service -> it must be injected in services container\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nangular\n\t.module('edaApp.services.formsByIdService', ['ngResource'])\n\t.factory('formsByIdService', ['$resource', function($resource){\n    return $resource('/api/formGen/:id', {id: '@id'}, {\n\n    });\n  }]);\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// service to manage select options (used in modal to edit control)\n//\n//  module = \"service\"  selectOptionManage (manage : selects, radio...)\n//  ------------------------------------------------------\n//      Syntax (convention) :\n//          \"edaApp\" = application\n//          \"edaApp.services.serviceNAME\" = container services module\n//\n//  This module is a service -> it must be injected in services container\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nangular\n  .module('edaApp.services.selectOptionManage', [])\n  .factory('selectOptionManage', [ function(){\n\t//console.log('--> INIT : Hello service  \\'\\'selectOptionManage\\'\\' ');\n\n    return {\n            testMe: function() {\n                return 'selectOptionManage is here.';\n            },\n\n            initModel: function(selectObj){\n              resetModel(selectObj);\n            },\n        \n            isOptionUnique: function(selectObj, textValue){\n              for (var i = selectObj.rows.length - 1; i >= 0; i--) {\n\n                if (selectObj.rows[i].option === textValue) {\n                  return false;\n                }\n                \n              }\n              return true;\n            },\n\n            //test if not empty string (= full space string is not conidered as valid)\n            isOptionValidFormat: function(textValue){\n              if (textValue !== '') {\n                return true;\n              }\n              return false;                    \n            },\n\n            addNewOptionRadio: function(selectObj, newOptionText){\n              var fullResponse = {\n                                    resultFlag : false,\n                                    details : ''\n                                  };\n\n              var checkResult = validOption(selectObj, newOptionText);  \n\n              //console.info(checkResult);\n\n              if (checkResult.resultFlag === true){\n\n                  var newOption = {\n                                      option: newOptionText,\n                                      order: selectObj.rows.length\n                                  };\n\n                  selectObj.rows.push(newOption);\n                  fullResponse.resultFlag = true;\n                  fullResponse.details = '';\n                  return fullResponse;\n              }else{\n\n                    angular.copy(checkResult, fullResponse);                    \n                    return fullResponse;                        \n              }\n\n\n            },\n\n\n            addNewOptionBasicSelect: function(selectObj, newOptionText){\n              var fullResponse = {\n                                    resultFlag : false,\n                                    details : ''\n                                  };\n\n              var checkResult = validOption(selectObj, newOptionText);  \n\n              //console.info(checkResult);\n\n              if (checkResult.resultFlag === true){\n\n                  var newOption = {\n                                      option: newOptionText,\n                                      order: selectObj.rows.length\n                                  };\n\n                  selectObj.rows.push(newOption);\n                  fullResponse.resultFlag = true;\n                  fullResponse.details = '';\n                  return fullResponse;\n              }else{\n\n                    angular.copy(checkResult, fullResponse);                    \n                    return fullResponse;                        \n              }\n\n\n            },\n\n            addNewOptionGroupedSelect: function(selectObj, newOptionText, newOptionGroup){\n              var fullResponse = {\n                                    resultFlag : false,\n                                    details : ''\n                                  };\n\n              // if (typeof newOptionGroup === \"undefined\") {\n\n              //     fullResponse.resultFlag = false;\n              //     fullResponse.details = \"Group option is undefined\";\n              //     return fullResponse;\n              // }\n\n              // if (newOptionGroup === \"\") {\n\n              //     fullResponse.resultFlag = false;\n              //     fullResponse.details = \"Group option is undefined\";\n              //     return fullResponse;\n              // }\n\n              var checkResult = validOption(selectObj, newOptionText);  \n\n          \n              if (checkResult.resultFlag === true){\n\n                  var newOption = {\n                                      option: newOptionText,\n                                      group: newOptionGroup,\n                                      order: selectObj.rows.length\n                                  };\n\n                  selectObj.rows.push(newOption);\n                  fullResponse.resultFlag = true;\n                  fullResponse.details = '';\n                  return fullResponse;\n              }else{\n\n                    angular.copy(checkResult, fullResponse);                    \n                    return fullResponse;                        \n              }\n\n            },\n\n\n            removeOption:  function(selectObj, AtIndex) {\n              var fullResponse = {\n                                  resultFlag : false,\n                                  details : ''\n                                };\n\n              if (AtIndex !== -1) {\n                  selectObj.rows.splice(AtIndex, 1);\n                  fullResponse.resultFlag = true;\n                  fullResponse.details= '';\n                  return fullResponse;\n              }else{\n                  fullResponse.resultFlag = false;\n                  fullResponse.details= 'Option index not valid';\n                  return fullResponse;\n              }\n            },\n\n            upthisOption : function(selectObj, indexOption){\n              var fullResponse = {\n                                  resultFlag : false,\n                                  details : ''\n                                };  \n\n              if (indexOption > -1) {\n\n                if (indexOption > 0) {\n\n                  if (selectObj.rows[indexOption - 1]) {\n                    var currentOption = selectObj.rows[indexOption];\n                    selectObj.rows.splice(indexOption , 1);\n                    selectObj.rows.splice((indexOption - 1), 0, currentOption); \n\n                    fullResponse.resultFlag = true;\n                    fullResponse.details = '';\n                    return fullResponse;\n                  }else{\n                    fullResponse.resultFlag = false;\n                    fullResponse.details = 'Can\\'t retreive option from option index';\n                    return fullResponse;\n                  }\n                }else{\n                    fullResponse.resultFlag = true;\n                    fullResponse.details = '';\n                    return fullResponse;\n                }  \n\n              }else{\n                fullResponse.resultFlag = false;\n                fullResponse.details = 'Option index not valid';\n                return fullResponse;\n              }\n          },\n\n          downthisOption : function(selectObj, indexOption){\n              var fullResponse = {\n                                  resultFlag : false,\n                                  details : ''\n                                };\n\n              if (indexOption > -1) {\n  \n\n                if (indexOption < selectObj.rows.length - 1){\n                  \n\n                  if (selectObj.rows[indexOption + 1]) {\n                    \n\n                    var currentOption = selectObj.rows[indexOption];\n                    \n                    selectObj.rows.splice(indexOption , 1);\n                    selectObj.rows.splice((indexOption + 1), 0, currentOption);  \n\n                    fullResponse.resultFlag = true;\n                    fullResponse.details = '';\n                    return fullResponse;  \n\n                  }else{\n                    fullResponse.resultFlag = false;\n                    fullResponse.details = 'Can\\'t retreive option from option index';\n                    return fullResponse;\n                  }\n                }else{\n\n                  \n                    fullResponse.resultFlag = true;\n                    fullResponse.details = '';\n                  return fullResponse;\n                }\n\n\n              }else{\n                fullResponse.resultFlag = false;\n                fullResponse.details = 'Option index not valid';\n                return fullResponse;\n              }\n\n          }\n\n      \n\n\n\n        };\n\n\n\n\nfunction validOption(selectObj, newOptionText){\n    var fullResponse = {\n                          resultFlag : false,\n                          details : ''\n                        };\n\n    if (typeof newOptionText === 'undefined') {\n        fullResponse.resultFlag = false;\n        fullResponse.details = 'Entered option is empty';\n        return fullResponse;\n    }\n\n    if (newOptionText !== '') {\n          for (var i = selectObj.rows.length - 1; i >= 0; i--) {\n            if (selectObj.rows[i].option === newOptionText) {\n              fullResponse.resultFlag = false;\n              fullResponse.details = 'Entered option is not unique';\n              return fullResponse;\n            }\n          }\n          fullResponse.resultFlag = true;\n          fullResponse.details = '';\n          return fullResponse;\n    }\n    fullResponse.resultFlag = false;     \n    fullResponse.details = 'Entered option is empty';\n    return fullResponse;\n}\n\nfunction resetModel(selectObj){\n  var zeroModel = { \n                      rows:[]\n                    };\n  angular.copy(zeroModel, selectObj);\n}\n\n\n}]);\n\n\n\n\n\n\n/**\n *  ------------------------------------------------------\n *  module = \"services\" container\n *  ------------------------------------------------------\n *      Syntax (convention) :\n *          \"edaApp\" = application\n *          \"edaApp.services\" = container services module\n *\n *  This module is a container -> it must be injected in the application -> so it will inject all services injected here\n *\n *\n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\nangular.module('edaApp.services', \n\t\t\t\t\t\t\t[\t\n\t\t\t\t\t\t\t\t'edaApp.services.formFieldManage',\n\t\t\t\t\t\t\t\t'edaApp.services.selectOptionManage',\n\t\t\t\t\t\t\t\t//'edaApp.services.formsByIdService',\n\t\t\t\t\t\t\t\t'edaApp.services.edaEditCtrlControllerModalProxy',\n\t\t\t\t\t\t\t\t'edaApp.services.dragDropItemDecorationService',\n\t\t\t\t\t\t\t\t'edaApp.services.dragDropItemCountersService',\n\t\t\t\t\t\t\t\t'edaApp.services.dragDropModelConfigModelProxyService',\n\t\t\t\t\t\t\t\t'edaApp.services.ddItemRightClickedManager',\n\t\t\t\t]);\n/**\n *  ------------------------------------------------------\n *  filters container\n *  ------------------------------------------------------\n *\n *      Syntax (convention) :\n *          \"edaApp\" = application\n *          \"edaApp.filters\" = container filters module\n *           \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp.filters', ['edaApp.filters.trustThis', \n\t\n\t]);\n\n/**\n *  ------------------------------------------------------\n *  filter : trustThis\n *  ------------------------------------------------------\n *\n *  filter to force trust content when ng-bind html form model :\n *  \n *  \"<span ng-bind-html=\"item.label | trustThis\"></span>\t\"\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\nangular\n\t.module('edaApp.filters.trustThis', [])\n\t.filter('trustThis', ['$sce',\n\n\tfunction($sce) {\n\n  return function(value, type) {\n    \t\t\t\t\treturn $sce.trustAs(type || 'html', value);\n  \t\t\t\t};\n}]);\n\n/**\n * angular-drag-and-drop-lists v1.2.0\n *\n * Copyright (c) 2014 Marcel Juenemann mail@marcel-junemann.de\n * https://github.com/marceljuenemann/angular-drag-and-drop-lists\n *\n * License: MIT\n */\n;(function(){\n'use strict';\n\n\nangular.module('dndLists', [])\n\n  /**\n   * Use the dnd-draggable attribute to make your element draggable\n   *\n   * Attributes:\n   * - dnd-draggable      Required attribute. The value has to be an object that represents the data\n   *                      of the element. In case of a drag and drop operation the object will be\n   *                      serialized and unserialized on the receiving end.\n   * - dnd-selected       Callback that is invoked when the element was clicked but not dragged.\n   *                      The original click event will be provided in the local event variable.\n   * - dnd-effect-allowed Use this attribute to limit the operations that can be performed. Options:\n   *                      - \"move\": The drag operation will move the element. This is the default.\n   *                      - \"copy\": The drag operation will copy the element. Shows a copy cursor.\n   *                      - \"copyMove\": The user can choose between copy and move by pressing the\n   *                        ctrl or shift key. *Not supported in IE:* In Internet Explorer this\n   *                        option will be the same as \"copy\". *Not fully supported in Chrome on\n   *                        Windows:* In the Windows version of Chrome the cursor will always be the\n   *                        move cursor. However, when the user drops an element and has the ctrl\n   *                        key pressed, we will perform a copy anyways.\n   *                      - HTML5 also specifies the \"link\" option, but this library does not\n   *                        actively support it yet, so use it at your own risk.\n   * - dnd-moved          Callback that is invoked when the element was moved. Usually you will\n   *                      remove your element from the original list in this callback, since the\n   *                      directive is not doing that for you automatically. The original dragend\n   *                      event will be provided in the local event variable.\n   * - dnd-copied         Same as dnd-moved, just that it is called when the element was copied\n   *                      instead of moved. The original dragend event will be provided in the local\n   *                      event variable.\n   * - dnd-dragstart      Callback that is invoked when the element was dragged. The original\n   *                      dragstart event will be provided in the local event variable.\n   * - dnd-type           Use this attribute if you have different kinds of items in your\n   *                      application and you want to limit which items can be dropped into which\n   *                      lists. Combine with dnd-allowed-types on the dnd-list(s). This attribute\n   *                      should evaluate to a string, although this restriction is not enforced.\n   * - dnd-disable-if     You can use this attribute to dynamically disable the draggability of the\n   *                      element. This is useful if you have certain list items that you don't want\n   *                      to be draggable, or if you want to disable drag & drop completely without\n   *                      having two different code branches (e.g. only allow for admins).\n   *                      **Note**: If your element is not draggable, the user is probably able to\n   *                      select text or images inside of it. Since a selection is always draggable,\n   *                      this breaks your UI. You most likely want to disable user selection via\n   *                      CSS (see user-select).\n   *\n   * CSS classes:\n   * - dndDragging        This class will be added to the element while the element is being\n   *                      dragged. It will affect both the element you see while dragging and the\n   *                      source element that stays at it's position. Do not try to hide the source\n   *                      element with this class, because that will abort the drag operation.\n   * - dndDraggingSource  This class will be added to the element after the drag operation was\n   *                      started, meaning it only affects the original element that is still at\n   *                      it's source position, and not the \"element\" that the user is dragging with\n   *                      his mouse pointer.\n   */\n  .directive('dndDraggable', ['$parse', '$timeout', 'dndDropEffectWorkaround', 'dndDragTypeWorkaround',\n                      function($parse,   $timeout,   dndDropEffectWorkaround,   dndDragTypeWorkaround) {\n    return function(scope, element, attr) {\n      // Set the HTML5 draggable attribute on the element\n      element.attr('draggable', 'true');\n\n      // If the dnd-disable-if attribute is set, we have to watch that\n      if (attr.dndDisableIf) {\n        scope.$watch(attr.dndDisableIf, function(disabled) {\n          element.attr('draggable', !disabled);\n        });\n      }\n\n      /**\n       * When the drag operation is started we have to prepare the dataTransfer object,\n       * which is the primary way we communicate with the target element\n       */\n      element.on('dragstart', function(event) {\n        event = event.originalEvent || event;\n\n        // Serialize the data associated with this element. IE only supports the Text drag type\n        event.dataTransfer.setData('Text', angular.toJson(scope.$eval(attr.dndDraggable)));\n\n        // Only allow actions specified in dnd-effect-allowed attribute\n        event.dataTransfer.effectAllowed = attr.dndEffectAllowed || 'move';\n\n        // Add CSS classes. See documentation above\n        element.addClass('dndDragging');\n        $timeout(function() { element.addClass('dndDraggingSource'); }, 0);\n\n        // Workarounds for stupid browsers, see description below\n        dndDropEffectWorkaround.dropEffect = 'none';\n        dndDragTypeWorkaround.isDragging = true;\n\n        // Save type of item in global state. Usually, this would go into the dataTransfer\n        // typename, but we have to use \"Text\" there to support IE\n        dndDragTypeWorkaround.dragType = attr.dndType ? scope.$eval(attr.dndType) : undefined;\n\n        // Invoke callback\n        $parse(attr.dndDragstart)(scope, {event: event});\n\n        event.stopPropagation();\n      });\n\n      /**\n       * The dragend event is triggered when the element was dropped or when the drag\n       * operation was aborted (e.g. hit escape button). Depending on the executed action\n       * we will invoke the callbacks specified with the dnd-moved or dnd-copied attribute.\n       */\n      element.on('dragend', function(event) {\n        event = event.originalEvent || event;\n\n        // Invoke callbacks. Usually we would use event.dataTransfer.dropEffect to determine\n        // the used effect, but Chrome has not implemented that field correctly. On Windows\n        // it always sets it to 'none', while Chrome on Linux sometimes sets it to something\n        // else when it's supposed to send 'none' (drag operation aborted).\n        var dropEffect = dndDropEffectWorkaround.dropEffect;\n        scope.$apply(function() {\n          switch (dropEffect) {\n            case 'move':\n              $parse(attr.dndMoved)(scope, {event: event});\n              break;\n\n            case 'copy':\n              $parse(attr.dndCopied)(scope, {event: event});\n              break;\n          }\n        });\n\n        // Clean up\n        element.removeClass('dndDragging');\n        element.removeClass('dndDraggingSource');\n        dndDragTypeWorkaround.isDragging = false;\n        event.stopPropagation();\n      });\n\n      /**\n       * When the element is clicked we invoke the callback function\n       * specified with the dnd-selected attribute.\n       */\n      element.on('click', function(event) {\n        event = event.originalEvent || event;\n\n        scope.$apply(function() {\n          $parse(attr.dndSelected)(scope, {event: event});\n        });\n\n        event.stopPropagation();\n      });\n\n      /**\n       * Workaround to make element draggable in IE9\n       */\n      element.on('selectstart', function() {\n        if (this.dragDrop) this.dragDrop();\n        return false;\n      });\n    };\n  }])\n\n  /**\n   * Use the dnd-list attribute to make your list element a dropzone. Usually you will add a single\n   * li element as child with the ng-repeat directive. If you don't do that, we will not be able to\n   * position the dropped element correctly. If you want your list to be sortable, also add the\n   * dnd-draggable directive to your li element(s). Both the dnd-list and it's direct children must\n   * have position: relative CSS style, otherwise the positioning algorithm will not be able to\n   * determine the correct placeholder position in all browsers.\n   *\n   * Attributes:\n   * - dnd-list             Required attribute. The value has to be the array in which the data of\n   *                        the dropped element should be inserted.\n   * - dnd-allowed-types    Optional array of allowed item types. When used, only items that had a\n   *                        matching dnd-type attribute will be dropable.\n   * - dnd-disable-if       Optional boolean expresssion. When it evaluates to true, no dropping\n   *                        into the list is possible. Note that this also disables rearranging\n   *                        items inside the list.\n   * - dnd-horizontal-list  Optional boolean expresssion. When it evaluates to true, the positioning\n   *                        algorithm will use the left and right halfs of the list items instead of\n   *                        the upper and lower halfs.\n   * - dnd-dragover         Optional expression that is invoked when an element is dragged over the\n   *                        list. If the expression is set, but does not return true, the element is\n   *                        not allowed to be dropped. The following variables will be available:\n   *                        - event: The original dragover event sent by the browser.\n   *                        - index: The position in the list at which the element would be dropped.\n   *                        - type: The dnd-type set on the dnd-draggable, or undefined if unset.\n   * - dnd-drop             Optional expression that is invoked when an element is dropped over the\n   *                        list. If the expression is set, it must return the object that will be\n   *                        inserted into the list. If it returns false, the drop will be aborted\n   *                        and the event is propagated. The following variables will be available:\n   *                        - event: The original drop event sent by the browser.\n   *                        - index: The position in the list at which the element would be dropped.\n   *                        - item: The transferred object.\n   *                        - type: The dnd-type set on the dnd-draggable, or undefined if unset.\n   * - dnd-external-sources Optional boolean expression. When it evaluates to true, the list accepts\n   *                        drops from sources outside of the current browser tab. This allows to\n   *                        drag and drop accross different browser tabs. Note that this will allow\n   *                        to drop arbitrary text into the list, thus it is highly recommended to\n   *                        implement the dnd-drop callback to check the incoming element for\n   *                        sanity. Furthermore, the dnd-type of external sources can not be\n   *                        determined, therefore do not rely on restrictions of dnd-allowed-type.\n   *\n   * CSS classes:\n   * - dndPlaceholder       When an element is dragged over the list, a new placeholder child\n   *                        element will be added. This element is of type li and has the class\n   *                        dndPlaceholder set.\n   * - dndDragover          Will be added to the list while an element is dragged over the list.\n   */\n  .directive('dndList', ['$parse', '$timeout', 'dndDropEffectWorkaround', 'dndDragTypeWorkaround',\n                 function($parse,   $timeout,   dndDropEffectWorkaround,   dndDragTypeWorkaround) {\n    return function(scope, element, attr) {\n      // While an element is dragged over the list, this placeholder element is inserted\n      // at the location where the element would be inserted after dropping\n      var placeholder = angular.element('<li class=\"dndPlaceholder\"></li>');\n      var placeholderNode = placeholder[0];\n      var listNode = element[0];\n\n      var horizontal = attr.dndHorizontalList && scope.$eval(attr.dndHorizontalList);\n      var externalSources = attr.dndExternalSources && scope.$eval(attr.dndExternalSources);\n\n      /**\n       * The dragover event is triggered \"every few hundred milliseconds\" while an element\n       * is being dragged over our list, or over an child element.\n       */\n      element.on('dragover', function(event) {\n        event = event.originalEvent || event;\n\n        if (!isDropAllowed(event)) return true;\n\n        // First of all, make sure that the placeholder is shown\n        // This is especially important if the list is empty\n        if (placeholderNode.parentNode != listNode) {\n          element.append(placeholder);\n        }\n\n        if (event.target !== listNode) {\n          // Try to find the node direct directly below the list node.\n          var listItemNode = event.target;\n          while (listItemNode.parentNode !== listNode && listItemNode.parentNode) {\n            listItemNode = listItemNode.parentNode;\n          }\n\n          if (listItemNode.parentNode === listNode && listItemNode !== placeholderNode) {\n            // If the mouse pointer is in the upper half of the child element,\n            // we place it before the child element, otherwise below it.\n            if (isMouseInFirstHalf(event, listItemNode)) {\n              listNode.insertBefore(placeholderNode, listItemNode);\n            } else {\n              listNode.insertBefore(placeholderNode, listItemNode.nextSibling);\n            }\n          }\n        } else {\n          // This branch is reached when we are dragging directly over the list element.\n          // Usually we wouldn't need to do anything here, but the IE does not fire it's\n          // events for the child element, only for the list directly. Therefore we repeat\n          // the positioning algorithm for IE here.\n          if (isMouseInFirstHalf(event, placeholderNode, true)) {\n            // Check if we should move the placeholder element one spot towards the top.\n            // Note that display none elements will have offsetTop and offsetHeight set to\n            // zero, therefore we need a special check for them.\n            while (placeholderNode.previousElementSibling && (isMouseInFirstHalf(event, placeholderNode.previousElementSibling, true) || placeholderNode.previousElementSibling.offsetHeight === 0)) {\n              listNode.insertBefore(placeholderNode, placeholderNode.previousElementSibling);\n            }\n          } else {\n            // Check if we should move the placeholder element one spot towards the bottom\n            while (placeholderNode.nextElementSibling &&\n                 !isMouseInFirstHalf(event, placeholderNode.nextElementSibling, true)) {\n              listNode.insertBefore(placeholderNode,\n                  placeholderNode.nextElementSibling.nextElementSibling);\n            }\n          }\n        }\n\n        // At this point we invoke the callback, which still can disallow the drop.\n        // We can't do this earlier because we want to pass the index of the placeholder.\n        if (attr.dndDragover && !invokeCallback(attr.dndDragover, event)) {\n          return stopDragover();\n        }\n\n        element.addClass('dndDragover');\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n      });\n\n      /**\n       * When the element is dropped, we use the position of the placeholder element as the\n       * position where we insert the transferred data. This assumes that the list has exactly\n       * one child element per array element.\n       */\n      element.on('drop', function(event) {\n        event = event.originalEvent || event;\n\n        if (!isDropAllowed(event)) return true;\n\n        // The default behavior in Firefox is to interpret the dropped element as URL and\n        // forward to it. We want to prevent that even if our drop is aborted.\n        event.preventDefault();\n\n        // Unserialize the data that was serialized in dragstart. According to the HTML5 specs,\n        // the \"Text\" drag type will be converted to text/plain, but IE does not do that.\n        var data = event.dataTransfer.getData('Text') || event.dataTransfer.getData('text/plain');\n        var transferredObject;\n        try {\n          transferredObject = JSON.parse(data);\n        } catch(e) {\n          return stopDragover();\n        }\n\n        // Invoke the callback, which can transform the transferredObject and even abort the drop.\n        if (attr.dndDrop) {\n          transferredObject = invokeCallback(attr.dndDrop, event, transferredObject);\n          if (!transferredObject) {\n            return stopDragover();\n          }\n        }\n\n        // Retrieve the JSON array and insert the transferred object into it.\n        var targetArray = scope.$eval(attr.dndList);\n        scope.$apply(function() {\n          targetArray.splice(getPlaceholderIndex(), 0, transferredObject);\n        });\n\n        // In Chrome on Windows the dropEffect will always be none...\n        // We have to determine the actual effect manually from the allowed effects\n        if (event.dataTransfer.dropEffect === 'none') {\n          if (event.dataTransfer.effectAllowed === 'copy' ||\n              event.dataTransfer.effectAllowed === 'move') {\n            dndDropEffectWorkaround.dropEffect = event.dataTransfer.effectAllowed;\n          } else {\n            dndDropEffectWorkaround.dropEffect = event.ctrlKey ? 'copy' : 'move';\n          }\n        } else {\n          dndDropEffectWorkaround.dropEffect = event.dataTransfer.dropEffect;\n        }\n\n        // Clean up\n        stopDragover();\n        event.stopPropagation();\n        return false;\n      });\n\n      /**\n       * We have to remove the placeholder when the element is no longer dragged over our list. The\n       * problem is that the dragleave event is not only fired when the element leaves our list,\n       * but also when it leaves a child element -- so practically it's fired all the time. As a\n       * workaround we wait a few milliseconds and then check if the dndDragover class was added\n       * again. If it is there, dragover must have been called in the meantime, i.e. the element\n       * is still dragging over the list. If you know a better way of doing this, please tell me!\n       */\n      element.on('dragleave', function(event) {\n        event = event.originalEvent || event;\n\n        element.removeClass('dndDragover');\n        $timeout(function() {\n          if (!element.hasClass('dndDragover')) {\n            placeholder.remove();\n          }\n        }, 100);\n      });\n\n      /**\n       * Checks whether the mouse pointer is in the first half of the given target element.\n       *\n       * In Chrome we can just use offsetY, but in Firefox we have to use layerY, which only\n       * works if the child element has position relative. In IE the events are only triggered\n       * on the listNode instead of the listNodeItem, therefore the mouse positions are\n       * relative to the parent element of targetNode.\n       */\n      function isMouseInFirstHalf(event, targetNode, relativeToParent) {\n        var mousePointer = horizontal ? (event.offsetX || event.layerX)\n                                      : (event.offsetY || event.layerY);\n        var targetSize = horizontal ? targetNode.offsetWidth : targetNode.offsetHeight;\n        var targetPosition = horizontal ? targetNode.offsetLeft : targetNode.offsetTop;\n        targetPosition = relativeToParent ? targetPosition : 0;\n        return mousePointer < targetPosition + targetSize / 2;\n      }\n\n      /**\n       * We use the position of the placeholder node to determine at which position of the array the\n       * object needs to be inserted\n       */\n      function getPlaceholderIndex() {\n        return Array.prototype.indexOf.call(listNode.children, placeholderNode);\n      }\n\n      /**\n       * Checks various conditions that must be fulfilled for a drop to be allowed\n       */\n      function isDropAllowed(event) {\n        // Disallow drop from external source unless it's allowed explicitly.\n        if (!dndDragTypeWorkaround.isDragging && !externalSources) return false;\n\n        // Check mimetype. Usually we would use a custom drag type instead of Text, but IE doesn't\n        // support that.\n        if (!hasTextMimetype(event.dataTransfer.types)) return false;\n\n        // Now check the dnd-allowed-types against the type of the incoming element. For drops from\n        // external sources we don't know the type, so it will need to be checked via dnd-drop.\n        if (attr.dndAllowedTypes && dndDragTypeWorkaround.isDragging) {\n          var allowed = scope.$eval(attr.dndAllowedTypes);\n          if (angular.isArray(allowed) && allowed.indexOf(dndDragTypeWorkaround.dragType) === -1) {\n            return false;\n          }\n        }\n\n        // Check whether droping is disabled completely\n        if (attr.dndDisableIf && scope.$eval(attr.dndDisableIf)) return false;\n\n        return true;\n      }\n\n      /**\n       * Small helper function that cleans up if we aborted a drop.\n       */\n      function stopDragover() {\n        placeholder.remove();\n        element.removeClass('dndDragover');\n        return true;\n      }\n\n      /**\n       * Invokes a callback with some interesting parameters and returns the callbacks return value.\n       */\n      function invokeCallback(expression, event, item) {\n        return $parse(expression)(scope, {\n          event: event,\n          index: getPlaceholderIndex(),\n          item: item || undefined,\n          external: !dndDragTypeWorkaround.isDragging,\n          type: dndDragTypeWorkaround.isDragging ? dndDragTypeWorkaround.dragType : undefined\n        });\n      }\n\n      /**\n       * Check if the dataTransfer object contains a drag type that we can handle. In old versions\n       * of IE the types collection will not even be there, so we just assume a drop is possible.\n       */\n      function hasTextMimetype(types) {\n        if (!types) return true;\n        for (var i = 0; i < types.length; i++) {\n          if (types[i] === 'Text' || types[i] === 'text/plain') return true;\n        }\n\n        return false;\n      }\n    };\n  }])\n\n  /**\n   * This workaround handles the fact that Internet Explorer does not support drag types other than\n   * \"Text\" and \"URL\". That means we can not know whether the data comes from one of our elements or\n   * is just some other data like a text selection. As a workaround we save the isDragging flag in\n   * here. When a dropover event occurs, we only allow the drop if we are already dragging, because\n   * that means the element is ours.\n   */\n  .factory('dndDragTypeWorkaround', function(){ return {}; })\n\n  /**\n   * Chrome on Windows does not set the dropEffect field, which we need in dragend to determine\n   * whether a drag operation was successful. Therefore we have to maintain it in this global\n   * variable. The bug report for that has been open for years:\n   * https://code.google.com/p/chromium/issues/detail?id=39399\n   */\n  .factory('dndDropEffectWorkaround', function(){ return {}; });\n\n})();\n\n;(function(){    \n  'use strict';\n  \n  angular\n    .module('pageslide-directive', [])\n    .directive('pageslide', [\n      function () {\n          var defaults = {};\n  \n          /* Return directive definition object */\n  \n          return {\n              restrict: 'EAC',\n              transclude: false,\n              scope: {\n                  psOpen: '=?',\n                  psAutoClose: '=?',\n                  psSide: '@',\n                  psSpeed: '@',\n                  psClass: '@',\n                  psSize: '@',\n                  psSqueeze: '@',\n                  psCloak: '@',\n                  psPush: '@',\n                  psContainer: '@'\n              },\n              //template: '<div class=\"pageslide-content\" ng-transclude></div>',\n              link: function ($scope, el, attrs) {\n                  /* Inspect */\n                  //console.log($scope);\n                  //console.log(el);\n                  //console.log(attrs);\n  \n                  /* Parameters */\n                  var param = {};\n  \n                  param.side = $scope.psSide || 'right';\n                  param.speed = $scope.psSpeed || '0.5';\n                  param.size = $scope.psSize || '300px';\n                  param.zindex = 1000; // Override with custom CSS\n                  param.className = $scope.psClass || 'ng-pageslide';\n                  param.cloak = $scope.psCloak && $scope.psCloak.toLowerCase() == 'false' ? false : true;\n                  param.squeeze = Boolean($scope.psSqueeze) || false;\n                  param.push = Boolean($scope.psPush) || false;\n                  param.container = $scope.psContainer || false; \n  \n                  // Apply Class\n                  el.addClass(param.className);\n  \n                  /* DOM manipulation */\n                  var content = null;\n                  var slider = null;\n                  var body = param.container ? document.getElementById(param.container) : document.body;\n  \n                  slider = el[0];\n  \n                  // Check for div tag\n                  if (slider.tagName.toLowerCase() !== 'div' &&\n                      slider.tagName.toLowerCase() !== 'pageslide')\n                      throw new Error('Pageslide can only be applied to <div> or <pageslide> elements');\n  \n                  // Check for content\n                  if (slider.children.length === 0)\n                      throw new Error('You have to content inside the <pageslide>');\n  \n                  content = angular.element(slider.children);\n  \n                  /* Append */\n                  body.appendChild(slider);\n  \n                  /* Style setup */\n                  slider.style.zIndex = param.zindex;\n                  slider.style.position = param.container !== false ? 'absolute' : 'fixed';\n                  slider.style.width = 0;\n                  slider.style.height = 0;\n                  slider.style.overflow = 'hidden';\n                  slider.style.transitionDuration = param.speed + 's';\n                  slider.style.webkitTransitionDuration = param.speed + 's';\n                  slider.style.transitionProperty = 'width, height';\n                  if (param.squeeze) {\n                      body.style.position = 'absolute';\n                      body.style.transitionDuration = param.speed + 's';\n                      body.style.webkitTransitionDuration = param.speed + 's';\n                      body.style.transitionProperty = 'top, bottom, left, right';\n                  }\n  \n                  switch (param.side) {\n                      case 'right':\n                          slider.style.height = attrs.psCustomHeight || '100%';\n                          slider.style.top = attrs.psCustomTop || '0px';\n                          slider.style.bottom = attrs.psCustomBottom || '0px';\n                          slider.style.right = attrs.psCustomRight || '0px';\n                          break;\n                      case 'left':\n                          slider.style.height = attrs.psCustomHeight || '100%';\n                          slider.style.top = attrs.psCustomTop || '0px';\n                          slider.style.bottom = attrs.psCustomBottom || '0px';\n                          slider.style.left = attrs.psCustomLeft || '0px';\n                          break;\n                      case 'top':\n                          slider.style.width = attrs.psCustomWidth || '100%';\n                          slider.style.left = attrs.psCustomLeft || '0px';\n                          slider.style.top = attrs.psCustomTop || '0px';\n                          slider.style.right = attrs.psCustomRight || '0px';\n                          break;\n                      case 'bottom':\n                          slider.style.width = attrs.psCustomWidth || '100%';\n                          slider.style.bottom = attrs.psCustomBottom || '0px';\n                          slider.style.left = attrs.psCustomLeft || '0px';\n                          slider.style.right = attrs.psCustomRight || '0px';\n                          break;\n                  }\n  \n  \n                  /* Closed */\n                  function psClose(slider, param) {\n                      if (slider && slider.style.width !== 0 && slider.style.width !== 0) {\n                          if (param.cloak) content.css('display', 'none');\n                          switch (param.side) {\n                              case 'right':\n                                  slider.style.width = '0px';\n                                  if (param.squeeze) body.style.right = '0px';\n                                  if (param.push) {\n                                      body.style.right = '0px';\n                                      body.style.left = '0px';\n                                  }\n                                  break;\n                              case 'left':\n                                  slider.style.width = '0px';\n                                  if (param.squeeze) body.style.left = '0px';\n                                  if (param.push) {\n                                      body.style.left = '0px';\n                                      body.style.right = '0px';\n                                  }\n                                  break;\n                              case 'top':\n                                  slider.style.height = '0px';\n                                  if (param.squeeze) body.style.top = '0px';\n                                  if (param.push) {\n                                      body.style.top = '0px';\n                                      body.style.bottom = '0px';\n                                  }\n                                  break;\n                              case 'bottom':\n                                  slider.style.height = '0px';\n                                  if (param.squeeze) body.style.bottom = '0px';\n                                  if (param.push) {\n                                      body.style.bottom = '0px'; \n                                      body.style.top = '0px'; \n                                  }\n                                  break;\n                          }\n                      }\n                      $scope.psOpen = false;\n                  }\n  \n                  /* Open */\n                  function psOpen(slider, param) {\n                      if (slider.style.width !== 0 && slider.style.width !== 0) {\n                          switch (param.side) {\n                              case 'right':\n                                  slider.style.width = param.size;\n                                  if (param.squeeze) body.style.right = param.size;\n                                  if (param.push) {\n                                      body.style.right = param.size;\n                                      body.style.left = '-' + param.size;\n                                  }\n                                  break;\n                              case 'left':\n                                  slider.style.width = param.size;\n                                  if (param.squeeze) body.style.left = param.size;\n                                  if (param.push) {\n                                      body.style.left = param.size;\n                                      body.style.right = '-' + param.size;\n                                  }\n                                  break;\n                              case 'top':\n                                  slider.style.height = param.size;\n                                  if (param.squeeze) body.style.top = param.size;\n                                  if (param.push) {\n                                      body.style.top = param.size;\n                                      body.style.bottom = '-' + param.size;\n                                  }\n                                  break;\n                              case 'bottom':\n                                  slider.style.height = param.size;\n                                  if (param.squeeze) body.style.bottom = param.size;\n                                  if (param.push) {\n                                      body.style.bottom = param.size;\n                                      body.style.top = '-' + param.size;\n                                  }\n                                  break;\n                          }\n                          setTimeout(function() {\n                              if (param.cloak) content.css('display', 'block');\n                          }, (param.speed * 1000));\n  \n                      }\n                  }\n  \n                  function isFunction(functionToCheck) {\n                      var getType = {};\n                      return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n                  }\n  \n                  /*\n                  * Watchers\n                  * */\n  \n                  $scope.$watch('psOpen', function(value) {\n                      if (!!value) {\n                          // Open\n                          psOpen(slider, param);\n                      } else {\n                          // Close\n                          psClose(slider, param);\n                      }\n                  });\n  \n  \n                  /*\n                  * Events\n                  * */\n  \n                  $scope.$on('$destroy', function () {\n                      body.removeChild(slider);\n                  });\n  \n                  if ($scope.psAutoClose) {\n                      $scope.$on('$locationChangeStart', function() {\n                          psClose(slider, param);\n                      });\n                      $scope.$on('$stateChangeStart', function() {\n                          psClose(slider, param);\n                      });\n  \n                  }\n              }\n          };\n      }\n  ]);\n\n})();\n})(this);"],"sourceRoot":"/source/"}